<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[youfei's blog]]></title>
  <subtitle><![CDATA[Good good study]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://youfei.github.io/"/>
  <updated>2014-03-17T08:45:14.664Z</updated>
  <id>http://youfei.github.io/</id>
  
  <author>
    <name><![CDATA[fei you]]></name>
    <email><![CDATA[youfei08@126.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[scala看看]]></title>
    <link href="http://youfei.github.io/2014/03/17/scala-g-1/"/>
    <id>http://youfei.github.io/2014/03/17/scala-g-1/</id>
    <published>2014-03-17T01:45:17.000Z</published>
    <updated>2014-03-17T08:44:46.000Z</updated>
    <content type="html"><![CDATA[<p>Scala地看看，记点小Tips</p>
<a id="more"></a>

<h4 id="until-to">until &amp; to</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="number">1</span> scala&gt; <span class="keyword">for</span> (i &lt;- <span class="number">0</span> <span class="keyword">until</span> <span class="number">2</span>) println(<span class="string">"Hello"</span>)<span class="comment"> //&lt;2</span>
Hello
Hello

<span class="number">2</span> scala&gt; <span class="keyword">for</span> (i &lt;- <span class="number">0</span> <span class="built_in">to</span> <span class="number">2</span>) println(<span class="string">"Hello"</span>)<span class="comment"> //&lt;=2</span>
Hello
Hello
Hello
</pre></td></tr></table></figure>

<h4 id="-">函数套函数</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="number">3</span> def <span class="built_in">add</span>(more:Int) = (x:Int)=&gt; x+more

val <span class="keyword">int1</span> = <span class="built_in">add</span>(<span class="number">1</span>) <span class="comment"> // init more = 1</span>
<span class="keyword">int1</span>(<span class="number">10</span>)          <span class="comment"> // will call function x+1 = 11</span>
</pre></td></tr></table></figure>

<h4 id="_-">_*</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="number">4</span> <span class="function"><span class="keyword">def</span> </span>echo(args <span class="symbol">:String*</span>) = <span class="keyword">for</span>(arg-&gt;args) println(arg)

val arr = <span class="constant">Array</span>(<span class="string">"what's"</span>, <span class="string">"up"</span>, <span class="string">"doc?"</span>)

echo(<span class="symbol">arr:</span><span class="number">_</span>*)
what<span class="string">'s
up
doc?</span>
</pre></td></tr></table></figure>

<h4 id="highrt-order-function">Highrt Order function</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="number">5</span> 高阶函数：higher-order-<span class="function"><span class="keyword">function</span> 带其他函数做参数的函数

<span class="title">def</span> <span class="title">filesMatching</span><span class="params">(query:<span class="keyword">String</span>, matcher:(<span class="keyword">String</span>, <span class="keyword">String</span>)</span>=&gt; <span class="title">Boolean</span>) =<span class="comment">{  // matcher:(String, String)=&gt; Boolean
	for(file &lt;- filesHere; if matcher(file.getName, query)) yield file  // matcher(file.getName, query)
}</span>

<span class="title">def</span> <span class="title">filesEnding</span><span class="params">(query:<span class="keyword">String</span>)</span> = <span class="title">filesMatching</span><span class="params">(query, _.endWith(_)</span>)

<span class="title">def</span> <span class="title">filesContaining</span><span class="params">(query:<span class="keyword">String</span>)</span> = <span class="title">filesMatching</span><span class="params">(query, _.contains(_)</span>)

<span class="title">def</span> <span class="title">filesRegex</span><span class="params">(query:<span class="keyword">String</span>)</span> = <span class="title">filesMatching</span><span class="params">(query, _.matches(_)</span>)</span>
</pre></td></tr></table></figure>

<h4 id="curry">Curry</h4>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
</pre></td><td class="code"><pre>6 Curry化
柯里化声称“如果你固定某些参数，你将得到接受余下参数的一个函数”。所以对于有两个变量的函数y^x，如果固定了 y=2，则得到有一个变量的函数 2^x

def first(x:Int) = (y:Int) =&gt; x+y
first: (Int)(Int) =&gt; Int


def twice(op: Int =&gt; Int, x:Int) = op(op(x))  //高阶函数

<span class="header">twice(_ + 1, 5)
===</span>
op(x) = x + 1
|
<span class="header">op(op(x))
===</span>
</pre></td></tr></table></figure>

<h4 id="-">读书笔记</h4>
<blockquote>
<p><strong>貸出模式</strong> Loan Pattern</br>
该模式大概说： 对于那些资源密集型（resource-intensive）对象应使用这一模式</br>
既然是资源密集在一个对象中，那么用户代码就不能一直保持获得所有资源，而应该在需要时就向资源供给方进行借贷，使用完后应立即归还。</p>
<p><strong>脆基类</strong></br>
派生类对基类有十分紧密的耦合，同时这个闭合的连接是不受欢迎的。设计师们因此给这种行为起了一个绰号——“脆基类问题”。基类是被认为十分脆弱的，因为你可以通过一个表面上十分安全的方法修改一个基类，但这个新的行为，当被派生类继承的时候，可能会造成派生类运行出错。你不能简单孤立地通过检查基类的方法来判断你对基类的改变是不是安全；你也必须查看（并测试）所有的派生类。此外，你必须检查所有+同时使用了基类和派生类对象的代码，因为这些代码可能会被新的行为所破坏。对关键的基类的小小的改变都会导致整个程序无法运行。&amp;oq=派生类对基类有十分紧密的耦合，同时这个闭合的连接是不受欢迎的。设计师们因此给这种行为起了一个绰号——“脆基类问题”。基类是被认为十分脆弱的，因为你可以通过一个表面上十分安全的方法修改一个基类，但这个新的行为，当被派生类继承的时候，可能会造成派生类运行出错。你不能简单孤立地通过检查基类的方法来判断你对基类的改变是不是安全；你也必须查看（并测试）所有的派生类。此外，你必须检查所有+同时使用了基类和派生类对象的代码，因为这些代码可能会被新的行为所破坏。对关键的基类的小小的改变都会导致整个程序无法运行。</p>
<p><strong>object看成是特殊的class，可以认为他是class的单例</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre>===
Any
|
class
|
<span class="header">Nothing/Null
===</span>
</pre></td></tr></table></figure>

<p><strong>Scala类层次结构</strong>
<img src="http://images.51cto.com/files/uploadimg/20090806/141440204.jpg" alt=""></p>
<p><strong>trait</strong> 有点抽象接口的意思</p>
</blockquote>
]]></content>
    <summary type="html"><![CDATA[<p>Scala地看看，记点小Tips</p>
]]></summary>
    
      <category term="scala" scheme="http://youfei.github.io/tags/scala/"/>
    
      <category term="scala" scheme="http://youfei.github.io/categories/scala/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[领域驱动设计]]></title>
    <link href="http://youfei.github.io/2014/03/14/design-1/"/>
    <id>http://youfei.github.io/2014/03/14/design-1/</id>
    <published>2014-03-14T08:01:46.000Z</published>
    <updated>2014-03-17T08:29:46.000Z</updated>
    <content type="html"><![CDATA[<p>读文章&lt;&lt;<a href="http://www.jdon.com/ddd.html" target="_blank">领域驱动设计(DDD:Domain-Driven Design)</a>&gt;&gt; </br>
Eric Evans的“Domain-Driven Design领域驱动设计”简称<strong>DDD</strong></p>
<a id="more"></a>

<h1 id="-">服务器后端发展三个阶段</h1>
<p><img src="http://www.jdon.com/img/uploadShowAction.shtml?id=23140&amp;oid=23142654" alt=""></p>
<ul>
<li><p>UI+DataBase的两层架构，这种面向数据库的架构(上图table    module )没有灵活性。</p>
</li>
<li><p>UI+Service+DataBase的多层SOA架构，这种服务+表模型的架构易使服务变得囊肿，难于维护拓展，伸缩性能差，见这里讨论或Spring Web 应用的最大败笔.<a href="http://www.jdon.com/45857" target="_blank">The Biggest Flaw of Spring Web Applications | Java</a> 真是败笔吗？ I do not think so.</p>
</li>
<li><p>DDD+SOA的事件驱动的CQRS读写分离架构，应付复杂业务逻辑，以聚合模型替代数据表模型，以并发的事件驱动替代串联的消息驱动。真正实现以业务实体为核心的灵活拓展。</p>
</li>
</ul>
<h1 id="-">四个编程模型</h1>
<p><strong>失血模型</strong> </br>
失血模型简单来说，就是domain object只有属性的getter/setter方法的纯数据类，所有的业务逻辑完全由business object来完成(又称 
TransactionScript)，这种模型下的domain object被Martin Fowler称之为“贫血的domain object”。</p>
<p><strong>贫血模型</strong> </br>
简单来说，就是domain ojbect包含了不依赖于持久化的领域逻辑，而那些依赖持久化的领域逻辑被分离到Service层。 
Service(业务逻辑，事务封装) --&gt; DAO ---&gt; domain object </p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>这种模型的优点： 
<span class="number">1</span>、各层单向依赖，结构清楚，易于实现和维护 
<span class="number">2</span>、设计简单易行，底层模型非常稳定 
这种模型的缺点： 
<span class="number">1</span>、domain <span class="keyword">object</span>的部分比较紧密依赖的持久化domain logic被分离到Service层，显得不够OO 
<span class="number">2</span>、Service层过于厚重
</pre></td></tr></table></figure>

<p><strong>充血模型</strong> </br>
充血模型和第二种模型差不多，所不同的就是如何划分业务逻辑，即认为，绝大多业务逻辑都应该被放在domain object里面(包括持久化逻辑) 
，而Service层应该是很薄的一层，仅仅封装事务和少量逻辑，不和DAO层打交道。 
Service(事务封装) ---&gt; domain object &lt;---&gt; DAO </p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre>这种模型的优点： 
<span class="number">1</span>、更加符合OO的原则 
<span class="number">2</span>、Service层很薄，只充当Facade的角色，不和DAO打交道。 
这种模型的缺点： 
<span class="number">1</span>、DAO和domain object形成了双向依赖，复杂的双向依赖会导致很多潜在的问题。 
<span class="number">2</span>、如何划分Service层逻辑和domain层逻辑是非常含混的，在实际项目中，由于设计和开发人员的水平差异，可能导致整个结构的混乱无序。 
<span class="number">3</span>、考虑到Service层的事务封装特性，Service层必须对所有的domain object的逻辑提供相应的事务封装方法，其结果就是Service完全重定义 
一遍所有的domain logic，非常烦琐，而且Service的事务化封装其意义就等于把OO的domain logic转换为过程的Service TransactionScript 
。该充血模型辛辛苦苦在domain层实现的OO在Service层又变成了过程式，对于Web层程序员的角度来看，和贫血模型没有什么区别了。 
<span class="number">1.</span>事务我是不希望由<span class="keyword">Item</span>管理的，而是由容器或更高一层的业务类来管理。 
<span class="number">2.</span>如果<span class="keyword">Item</span>不脱离持久层的管理，如JDO的pm，那么itemDao.update(this); 是不需要的，也就是说<span class="keyword">Item</span>是在事务过程中从数据库拿出来的，并 
且声明周期不超出当前事务的范围。 
<span class="number">3.</span>如果<span class="keyword">Item</span>是脱离持久层，也就是在<span class="keyword">Item</span>的生命周期超出了事务的范围，那就要必须显示调用update或attach之类的持久化方法的，这种时候 
就应该是按robbin所说的第<span class="number">2</span>种模型来做。
</pre></td></tr></table></figure>

<p><strong>胀血模型</strong> </br>
基于充血模型的第三个缺点，有同学提出，干脆取消Service层，只剩下domain object和DAO两层，在domain object的domain logic上面封装 
事务。 
domain object(事务封装，业务逻辑) &lt;---&gt; DAO 
似乎ruby on rails就是这种模型，他甚至把domain object和DAO都合并了。 
该模型优点： 
1、简化了分层 
2、也算符合OO 
该模型缺点： 
1、很多不是domain logic的service逻辑也被强行放入domain object ，引起了domain ojbect模型的不稳定 
2、domain object暴露给web层过多的信息，可能引起意想不到的副作用。 </p>
<blockquote>
<p>个人认为 
失血是Hibernate的流行引起的，数据逻辑被分在Dao/imple 层实现</br>
贫血恰恰就是Spring frame的经典MVC，现在在web开发中还是很好的，不够OO？这都不是个事。</br>
充血、胀血没有概念，不过没有看出明显的好处，反而感觉这样做的话，逻辑会很混乱，对于指令编程体系来说，这可不是个好消息。</br>
So，首选还是贫血。至少现在是这么认为的。</p>
</blockquote>
<p>DDD 属于充血模型</p>
<p>DDD最大的好处是：接触到需求第一步就是考虑领域模型，而不是将其切割成数据和行为，然后数据用数据库实现，行为使用服务实现，最后造成需求的首肢分离。DDD让你首先考虑的是业务语言，而不是数据。重点不同导致编程世界观不同。</p>
<p>DDD在软件生产流程中定位i如下图，DDD落地实现离不开in-memory缓存、 CQRS、 DCI、 EDA或Event Source几大大相关领域。</p>
<h1 id="-">四种程序架构</h1>
<ul>
<li>Clean架构</li>
</ul>
<p>外圈的层次可以依赖内层，反之不可以，内圈核心的实体代表业务，不可以依赖其所处的技术环境
<img src="http://blog.8thlight.com/uncle-bob/images/2012-08-13-the-clean-architecture/CleanArchitecture.jpg" alt=""></p>
<ul>
<li>DCI架构</li>
</ul>
<p><a href="http://www.artima.com/articles/dci_vision.html" target="_blank">DCI</a> (<a href="http://www.jdon.com/37976" target="_blank">http://www.jdon.com/37976</a>) </br>
DCI是数据Data 场景Context 交互Interactions的简称，DCI是一种特别关注行为的模式(可以对应GoF行为模式)，而MVC模式是一种结构性模式，MVC模式由于结构化，而可能忽视了行为事件。DCI Architecture是将“是什么”和“做什么”进行分离，然后根据需求在不同场景动态结合，还是桥模式的味道。
<img src="http://www.artima.com/images/dci/Figure2.jpg" alt=""></p>
<ul>
<li>DDD/CQRS 领域驱动设计</li>
</ul>
<p><a href="http://prezi.com/akrfq7jyau8w/ddd-cqrs-leaven-v20/" target="_blank">DDD/CQRS</a>, <a href="http://www.jdon.com/cqrs.html" target="_blank">CQES</a> </br></p>
<p>CQRS: 命令查询的责任分离Command Query Responsibility Segregation (简称CQRS)模式是一种架构体系模式，能够使改变模型的状态的命令和模型状态的查询实现分离。这属于DDD应用领域的一个模式，主要解决DDD在数据库报表输出上处理方式。
<img src="http://www.jdon.com/jdonframework/jivejdon3/images/cqrs.png" alt=""></p>
<ul>
<li>六边形架构</li>
</ul>
<p>允许应用程序都是由用户，程序，自动化测试或批处理脚本驱动的，在<strong>事件驱动</strong>和数据库环境下被开发和隔离测试。一个事件从外面世界到达一个端口，特定技术的适配器将其转换成可用的程序调用或消息，并将其传递给应用程序。该应用程序是可以无需了解输入设备的性质(调用者是哪个)。当应用程序有结果需要发出时，它会通过一个端口适配器发送它，这个适配器会创建接收技术（人类或自动）所需的相应信号。该应用程序与在它各方面的适配器形成语义良性互动，但是实际上不知道适配器的另一端的谁在处理任务。
<img src="http://alistair.cockburn.us/get/2301" alt=""></p>
<blockquote>
<p>心得： 看的头痛！！！</p>
</blockquote>
]]></content>
    <summary type="html"><![CDATA[<p>读文章&lt;&lt;<a href="http://www.jdon.com/ddd.html" target="_blank">领域驱动设计(DDD:Domain-Driven Design)</a>&gt;&gt; </br>
Eric Evans的“Domain-Driven Design领域驱动设计”简称<strong>DDD</strong></p>
]]></summary>
    
      <category term="Design" scheme="http://youfei.github.io/tags/Design/"/>
    
      <category term="Design" scheme="http://youfei.github.io/categories/Design/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[svg]]></title>
    <link href="http://youfei.github.io/2014/03/12/svg-g-1/"/>
    <id>http://youfei.github.io/2014/03/12/svg-g-1/</id>
    <published>2014-03-12T03:03:30.000Z</published>
    <updated>2014-03-17T08:35:43.000Z</updated>
    <content type="html"><![CDATA[<p><strong>可缩放矢量图形(Scalable Vector Graphics，简称SVG)</strong>是一种使用XML来描述二维图形的语言(SVG严格遵从XML语法)。 </p>
<a id="more"></a>

<p><strong>SVG允许三种类型的图形对象：</strong></p>
<pre><code>- 矢量图形形状（例如由直线和曲线组成的路径）、
- 图像
- 文本。 
</code></pre><p>可以将图形对象（包括文本）分组、样式化、转换和组合到以前呈现的对象中。 
    SVG 功能集包括嵌套转换、剪切路径、alpha 蒙板和模板对象。
　　SVG绘图是交互式和动态的。 例如，可使用脚本来定义和触发动画。这一点与Flash相比很强大。Flash是二进制文件，动态创建和修改都比较困难。而SVG是文本文件，动态操作是相当容易的。而且，SVG直接提供了完成动画的相关元素，操作起来非常方便。
　　
<strong>SVG VS Canvas</strong>
SVG与其他Web标准兼容，并直接支持文档对象模型DOM。这一点也是与HTML5中的canvas相比很强大的地方。
这里注意， SVG内部也是用一个类似的canvas这样的东西来展示SVG图形，
到后面你会发现很多特性和HTML5的canvas还有点像；文中如果没明确说明是SVG的canvas的话，都代指HTML5中的canvas元素。因而，可以很方便的使用脚本实现SVG的很多高级应用。而且SVG的图形元素基本上都支持DOM中的标准事件。可将大量事件处理程序(如“onmouseover”和“onclick”)分配给任何SVG图形对象。 虽然SVG的渲染速度比不上canvas元素，但是胜在DOM操作很灵活，这个优势完全可以弥补速度上的劣势。</p>
<p><strong>特点</strong>
• SVG文件是纯粹的XML， 可被非常多的工具读取和修改(比如记事本)。
• SVG 与JPEG 和GIF图像比起来，尺寸更小，且可压缩性更强。
• SVG 是可伸缩的，可在图像质量不下降的情况下被放大，可在任何的分辨率下被高质量地打印。
• SVG 图像中的文本是可选的，同时也是可搜索的(很适合制作地图)。
• SVG 可以与 Java 技术一起运行。
• SVG 是开放的标准。</p>
<p><strong>Browser</strong>
IE9+, 可以在HTML 中直接运行</p>
<p><strong>渲染顺序</strong>
从前到后</p>
<blockquote>
<p>SVG是以XML定义的，所以是大小写敏感的，这点与HTML不一样.</p>
</blockquote>
<h1 id="2d-">2D图形绘制</h1>
<p><a href="http://www.cnblogs.com/dxy1982/archive/2012/04/06/2395729.html" target="_blank">http://www.cnblogs.com/dxy1982/archive/2012/04/06/2395729.html</a></p>
<h2 id="-">基本图形</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">svg</span> <span class="attribute">width</span>=<span class="value">"200"</span> <span class="attribute">height</span>=<span class="value">"250"</span>&gt;</span>
  <span class="tag">&lt;<span class="title">rect</span> <span class="attribute">x</span>=<span class="value">"10"</span> <span class="attribute">y</span>=<span class="value">"10"</span> <span class="attribute">width</span>=<span class="value">"30"</span> <span class="attribute">height</span>=<span class="value">"30"</span> <span class="attribute">stroke</span>=<span class="value">"black"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span> <span class="attribute">stroke-width</span>=<span class="value">"5"</span>/&gt;</span>
  <span class="tag">&lt;<span class="title">rect</span> <span class="attribute">x</span>=<span class="value">"60"</span> <span class="attribute">y</span>=<span class="value">"10"</span> <span class="attribute">rx</span>=<span class="value">"10"</span> <span class="attribute">ry</span>=<span class="value">"10"</span> <span class="attribute">width</span>=<span class="value">"30"</span> <span class="attribute">height</span>=<span class="value">"30"</span> <span class="attribute">stroke</span>=<span class="value">"black"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span> <span class="attribute">stroke-width</span>=<span class="value">"5"</span>/&gt;</span>

  <span class="tag">&lt;<span class="title">circle</span> <span class="attribute">cx</span>=<span class="value">"25"</span> <span class="attribute">cy</span>=<span class="value">"75"</span> <span class="attribute">r</span>=<span class="value">"20"</span> <span class="attribute">stroke</span>=<span class="value">"red"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span> <span class="attribute">stroke-width</span>=<span class="value">"5"</span>/&gt;</span>
  <span class="tag">&lt;<span class="title">ellipse</span> <span class="attribute">cx</span>=<span class="value">"75"</span> <span class="attribute">cy</span>=<span class="value">"75"</span> <span class="attribute">rx</span>=<span class="value">"20"</span> <span class="attribute">ry</span>=<span class="value">"5"</span> <span class="attribute">stroke</span>=<span class="value">"red"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span> <span class="attribute">stroke-width</span>=<span class="value">"5"</span>/&gt;</span>

  <span class="tag">&lt;<span class="title">line</span> <span class="attribute">x1</span>=<span class="value">"10"</span> <span class="attribute">x2</span>=<span class="value">"50"</span> <span class="attribute">y1</span>=<span class="value">"110"</span> <span class="attribute">y2</span>=<span class="value">"150"</span> <span class="attribute">stroke</span>=<span class="value">"orange"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span> <span class="attribute">stroke-width</span>=<span class="value">"5"</span>/&gt;</span>
  <span class="tag">&lt;<span class="title">polyline</span> <span class="attribute">points</span>=<span class="value">"60 110 65 120 70 115 75 130 80 125 85 140 90 135 95 150 100 145"</span>
      <span class="attribute">stroke</span>=<span class="value">"orange"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span> <span class="attribute">stroke-width</span>=<span class="value">"5"</span>/&gt;</span>

  <span class="tag">&lt;<span class="title">polygon</span> <span class="attribute">points</span>=<span class="value">"50 160 55 180 70 180 60 190 65 205 50 195 35 205 40 190 30 180 45 180"</span>
      <span class="attribute">stroke</span>=<span class="value">"green"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span> <span class="attribute">stroke-width</span>=<span class="value">"5"</span>/&gt;</span>

  <span class="tag">&lt;<span class="title">path</span> <span class="attribute">d</span>=<span class="value">"M20,230 Q40,205 50,230 T90,230"</span> <span class="attribute">fill</span>=<span class="value">"none"</span> <span class="attribute">stroke</span>=<span class="value">"blue"</span> <span class="attribute">stroke-width</span>=<span class="value">"5"</span>/&gt;</span>
<span class="tag">&lt;/<span class="title">svg</span>&gt;</span>
</pre></td></tr></table></figure>

<p><strong>矩形 - rect元素</strong>
x：矩形左上角的坐标(用户坐标系)的x值。
y：矩形左上角的坐标(用户坐标系)的y值。
width：矩形宽度。
height：矩形高度。
rx：实现圆角效果时，圆角沿x轴的半径。
ry：实现圆角效果时，圆角沿y轴的半径。</p>
<p><strong>圆 - circle元素</strong>
r：圆的半径。
cx：圆心坐标x值。
cy：圆心坐标y值。</p>
<p><strong>椭圆 - ellipse元素</strong>
rx：半长轴(x半径)。
ry：半短轴(y半径)。
cx：圆心坐标x值。
cy：圆心坐标y值。</p>
<p><strong>直线 - line元素</strong>
x1：起点x坐标。
y1：起点y坐标。
x2：终点x坐标。
y2：终点y坐标。</p>
<p><strong>折线 - polyline元素</strong>
points：一系列的用空格，逗号，换行符等分隔开的点。每个点必须有2个数字：x值和y值。所以下面3个点 (0,0), (1,1)和(2,2)可以写成：&quot;0 0, 1 1, 2 2&quot;。</p>
<p><strong>多边形 - polygon元素</strong>
points：一系列的用空格，逗号，换行符等分隔开的点。每个点必须有2个数字：x值和y值。所以下面3个点 (0,0), (1,1)和(2,2)可以写成：&quot;0 0, 1 1, 2 2&quot;</p>
<p><strong>路径 - path元素</strong>
这个是最通用，最强力的元素了；使用这个元素你可以实现任何其他的图形，不仅包括上面这些基本形状，也可以实现像贝塞尔曲线那样的复杂形状；此外，使用path可以实现平滑的过渡线段，虽然也可以使用polyline来实现这种效果，但是需要提供的点很多，而且放大了效果也不好。这个元素控制位置和形状的只有一个参数
 d：一系列绘制指令和绘制参数(点)组合成。
绘制指令分为绝对坐标指令和相对坐标指令两种，这两种指令使用的字母是一样的，就是大小写不一样，绝对指令使用大写字母，坐标也是绝对坐标；相对指令使用对应的小写字母，点的坐标表示的都是偏移量。</p>
<blockquote>
<p>绝对坐标绘制指令</p>
</blockquote>
<p>这组指令的参数代表的是绝对坐标。假设当前画笔所在的位置为(x0,y0)，则下面的绝对坐标指令代表的含义如下所示：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre>指令	参数	说明
M	x, y	将画笔移动到点(x,y)
L	x y	画笔从当前的点绘制线段到点(x,y)
H	x 	画笔从当前的点绘制水平线段到点(x,y0)
V	y 	画笔从当前的点绘制竖直线段到点(x0,y)
A	<span class="literal">rx</span> ry x<span class="attribute">-axis</span><span class="attribute">-rotation</span> large<span class="attribute">-arc</span><span class="attribute">-flag</span> sweep<span class="attribute">-flag</span> x y	画笔从当前的点绘制一段圆弧到点(x,y)
C	x1 y1, x2 y2, x y	画笔从当前的点绘制一段三次贝塞尔曲线到点(x,y)
S	x2 y2, x y	特殊版本的三次贝塞尔曲线(省略第一个控制点)
Q	x1 y1, x y 	绘制二次贝塞尔曲线到点(x,y)
T	x y	特殊版本的二次贝塞尔曲线(省略控制点)
Z	无参数	绘制闭合图形，如果d属性不指定Z命令，则绘制线段，而不是封闭图形。
</pre></td></tr></table></figure>

<p>移动画笔指令M，画直线指令：L，H，V，闭合指令Z都比较简单
<strong>绘制圆弧指令：A  rx ry x-axis-rotation large-arc-flag sweep-flag x y</strong>
rx,ry 是弧的半长轴、半短轴长度
x-axis-rotation 是此段弧所在的x轴与水平方向的夹角，即x轴的逆时针旋转角度，负数代表顺时针转动的角度。
large-arc-flag 为1 表示大角度弧线，0 代表小角度弧线。
sweep-flag 为1代表从起点到终点弧线绕中心顺时针方向，0 代表逆时针方向。
x,y 是弧终端坐标。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">svg</span> <span class="attribute">width</span>=<span class="value">"320px"</span> <span class="attribute">height</span>=<span class="value">"320px"</span>&gt;</span>
  <span class="tag">&lt;<span class="title">path</span> <span class="attribute">d</span>=<span class="value">"M 10 315
           L 110 215
           A 30 50 0 0 1 162.55 162.45
           L 172.55 152.45
           A 30 50 -45 0 1 215.1 109.9
           L 315 10"</span> 
		  <span class="attribute">stroke</span>=<span class="value">"black"</span> <span class="attribute">fill</span>=<span class="value">"green"</span> <span class="attribute">stroke-width</span>=<span class="value">"2"</span> <span class="attribute">fill-opacity</span>=<span class="value">"0.5"</span>/&gt;</span>
<span class="tag">&lt;/<span class="title">svg</span>&gt;</span>
</pre></td></tr></table></figure>

<p><strong>绘制三次贝塞尔曲线指令：C  x1 y1, x2 y2, x y</strong>
三次贝塞尔曲线有两个控制点，就是(x1,y1)和(x2,y2)，最后面(x,y)代表曲线的终点。体会下面的例子：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">svg</span> <span class="attribute">width</span>=<span class="value">"190px"</span> <span class="attribute">height</span>=<span class="value">"160px"</span>&gt;</span>
  <span class="tag">&lt;<span class="title">path</span> <span class="attribute">d</span>=<span class="value">"M10 10 C 20 20, 40 20, 50 10"</span> <span class="attribute">stroke</span>=<span class="value">"black"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span>/&gt;</span>
  <span class="tag">&lt;<span class="title">path</span> <span class="attribute">d</span>=<span class="value">"M70 10 C 70 20, 120 20, 120 10"</span> <span class="attribute">stroke</span>=<span class="value">"black"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span>/&gt;</span>
  <span class="tag">&lt;<span class="title">path</span> <span class="attribute">d</span>=<span class="value">"M130 10 C 120 20, 180 20, 170 10"</span> <span class="attribute">stroke</span>=<span class="value">"black"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span>/&gt;</span>
  <span class="tag">&lt;<span class="title">path</span> <span class="attribute">d</span>=<span class="value">"M10 60 C 20 80, 40 80, 50 60"</span> <span class="attribute">stroke</span>=<span class="value">"black"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span>/&gt;</span>
  <span class="tag">&lt;<span class="title">path</span> <span class="attribute">d</span>=<span class="value">"M70 60 C 70 80, 110 80, 110 60"</span> <span class="attribute">stroke</span>=<span class="value">"black"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span>/&gt;</span>
  <span class="tag">&lt;<span class="title">path</span> <span class="attribute">d</span>=<span class="value">"M130 60 C 120 80, 180 80, 170 60"</span> <span class="attribute">stroke</span>=<span class="value">"black"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span>/&gt;</span>
  <span class="tag">&lt;<span class="title">path</span> <span class="attribute">d</span>=<span class="value">"M10 110 C 20 140, 40 140, 50 110"</span> <span class="attribute">stroke</span>=<span class="value">"black"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span>/&gt;</span>
  <span class="tag">&lt;<span class="title">path</span> <span class="attribute">d</span>=<span class="value">"M70 110 C 70 140, 110 140, 110 110"</span> <span class="attribute">stroke</span>=<span class="value">"black"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span>/&gt;</span>
  <span class="tag">&lt;<span class="title">path</span> <span class="attribute">d</span>=<span class="value">"M130 110 C 120 140, 180 140, 170 110"</span> <span class="attribute">stroke</span>=<span class="value">"black"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span>/&gt;</span>
<span class="tag">&lt;/<span class="title">svg</span>&gt;</span>
</pre></td></tr></table></figure>

<p><strong>特殊版本的三次贝塞尔曲线：S  x2 y2, x y</strong>
很多时候，为了绘制平滑的曲线，需要多次连续绘制曲线。这个时候，为了平滑过渡，常常第二个曲线的控制点是第一个曲线控制点在曲线另外一边的映射点。这个时候可以使用这个简化版本。这里要注意的是，如果S指令前面没有其他的S指令或C指令，这个时候会认为两个控制点是一样的，退化成二次贝塞尔曲线的样子；如果S指令是用在另外一个S指令或者C指令后面，这个时候后面这个S指令的第一个控制点会默认设置为前面的这个曲线的第二个控制点的一个映射点，体会一下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">svg</span> <span class="attribute">width</span>=<span class="value">"190px"</span> <span class="attribute">height</span>=<span class="value">"160px"</span>&gt;</span>
  <span class="tag">&lt;<span class="title">path</span> <span class="attribute">d</span>=<span class="value">"M10 80 C 40 10, 65 10, 95 80 S 150 150, 180 80"</span> <span class="attribute">stroke</span>=<span class="value">"black"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span>/&gt;</span>
<span class="tag">&lt;/<span class="title">svg</span>&gt;</span>
</pre></td></tr></table></figure>

<p><strong>绘制二次贝塞尔曲线指令：Q  x1 y1, x y ， T x y  (特殊版本的二次贝塞尔曲线)</strong>
如果是连续的绘制曲线，同样可以使用简化版本T。同样的，只有T前面是Q或者T指令的时候，后面的T指令的控制点会默认设置为前面的曲线的控制点的映射点，体会一下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">svg</span> <span class="attribute">width</span>=<span class="value">"190px"</span> <span class="attribute">height</span>=<span class="value">"160px"</span>&gt;</span>
  <span class="tag">&lt;<span class="title">path</span> <span class="attribute">d</span>=<span class="value">"M10 80 Q 52.5 10, 95 80 T 180 80"</span> <span class="attribute">stroke</span>=<span class="value">"black"</span> <span class="attribute">fill</span>=<span class="value">"transparent"</span>/&gt;</span>
<span class="tag">&lt;/<span class="title">svg</span>&gt;</span>
</pre></td></tr></table></figure>

<p><strong>SVG path绘制注意事项</strong></p>
<blockquote>
<p>绘制带孔的图形时要注意：外层边的绘制需要是逆时针顺序的，里面的洞的边的顺序必须是顺时针的。只有这样绘制的图形填充效果才会正确。</p>
</blockquote>
<h1 id="svg-">SVG文本与图像</h1>
<ul>
<li>SVG不能执行自动换行</li>
<li>换行和回车变成空格，而多个空格压缩成单个空格</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">svg</span>&gt;</span>  
  <span class="tag">&lt;<span class="title">rect</span> <span class="attribute">width</span>=<span class="value">"300"</span> <span class="attribute">height</span>=<span class="value">"200"</span> <span class="attribute">fill</span>=<span class="value">"red"</span> /&gt;</span>  
  <span class="tag">&lt;<span class="title">circle</span> <span class="attribute">cx</span>=<span class="value">"150"</span> <span class="attribute">cy</span>=<span class="value">"100"</span> <span class="attribute">r</span>=<span class="value">"80"</span> <span class="attribute">fill</span>=<span class="value">"green"</span> /&gt;</span>  
  <span class="tag">&lt;<span class="title">text</span> <span class="attribute">x</span>=<span class="value">"150"</span> <span class="attribute">y</span>=<span class="value">"125"</span> <span class="attribute">font-size</span>=<span class="value">"60"</span> <span class="attribute">text-anchor</span>=<span class="value">"middle"</span> <span class="attribute">fill</span>=<span class="value">"white"</span>&gt;</span>SVG<span class="tag">&lt;/<span class="title">text</span>&gt;</span>  
<span class="tag">&lt;/<span class="title">svg</span>&gt;</span>
</pre></td></tr></table></figure>

<p>如上面的例子中所示，text元素可以设置下列的属性：</p>
<p>x,y是文本位置坐标。
text-anchor是文本显示的方向，其实也就是位置(x,y)处于文本的位置。这个属性有start,middle和end三种值。
start表示文本位置坐标(x,y)位于文本的开始处，文本从这点开始向右挨个显示。
middle表示(x,y)位于文本中间处，文本向左右两个方向显示，其实就是居中显示。
end表示(x,y)点位于文本结尾，文本向左挨个显示。
　　除了这些属性，下面的这些属性都既可以在CSS中指定，也可以直接在属性中指定:</p>
<p>fill,stroke：填充和描边颜色，具体使用在后面总结。
font的相关属性：font-family, font-style, font-weight, font-variant, font-stretch, font-size, font-size-adjust, kerning, letter-spacing, word-spacing and text-decoration。</p>
<blockquote>
<p>SVG中渲染图片 - image元素</p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>SVG中的<span class="keyword">image</span>元素可以直接支持显示光栅图片，使用很简单
</pre></td></tr></table></figure>

<p>这里需要注意几点：
1.如果没有设置x或y坐标，则默认是0。
2.如果没有设置width或height，则默认也是0.
3.如果显式的设置width或height为0，则会禁止渲染这幅图片。
4.图片的格式支持png,jpeg,jpg,svg等等，所以svg是支持嵌套svg的。 
5.image与其他元素一样，是svg的常规元素，所以它支持所有的裁剪，蒙板，滤镜，旋转等效果。</p>
<h1 id="-">笔画与填充</h1>
<p><strong>填充色 - fill属性</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>&lt;rect x=<span class="string">"10"</span> y=<span class="string">"10"</span> width=<span class="string">"100"</span> height=<span class="string">"100"</span> <span class="keyword">stroke</span>=<span class="string">"blue"</span> fill=<span class="string">"red"</span>
       fill-opacity=<span class="string">"0.5"</span> <span class="keyword">stroke</span>-opacity=<span class="string">"0.8"</span>/&gt;
</pre></td></tr></table></figure>

<p>上面例子中画了一个红色蓝边的矩形。注意几点：</p>
<ol>
<li>如果不提供fill属性，则默认会使用黑色填充,如果要取消填充，需要设置成none。</li>
<li>可以设置填充的透明度，就是fill-opacity，值的范围是0到1。</li>
<li>稍微复杂一点的是fill-rule属性。这个属性定义了判断点是不是属于填充范围的算法；除了inherit这个值外，还有两个取值：
 nonzero：这个值采用的算法是：从需要判定的点向任意方向发射线，然后计算图形与线段交点的处的走向；计算结果从0开始，每有一个交点处的线段是从左到右的，就加1；每有一个交点处的线段是从右到左的，就减1；这样计算完所有交点后，如果这个计算的结果不等于0，则该点在图形内，需要填充；如果该值等于0，则在图形外，不需要填充。看下面的示例：
 <img src="http://images.cnblogs.com/cnblogs_com/dxy1982/fillrule-nonzero.png" alt="">
 evenodd：这个值采用的算法是：从需要判定的点向任意方向发射线，然后计算图形与线段交点的个数，个数为奇数则改点在图形内，需要填充；个数为偶数则点在图形外，不需要填充。看下图的示例：
 <img src="http://images.cnblogs.com/cnblogs_com/dxy1982/fillrule-evenodd.png" alt=""></li>
</ol>
<p><strong>边框色 - stroke属性</strong></p>
<ol>
<li>如果不提供stroke属性，则默认不绘制图形边框。</li>
<li>可以设置边的透明度，就是stroke-opacity，值的范围是0到1。</li>
</ol>
]]></content>
    <summary type="html"><![CDATA[<p><strong>可缩放矢量图形(Scalable Vector Graphics，简称SVG)</strong>是一种使用XML来描述二维图形的语言(SVG严格遵从XML语法)。 </p>
]]></summary>
    
      <category term="svg" scheme="http://youfei.github.io/tags/svg/"/>
    
      <category term="svg" scheme="http://youfei.github.io/categories/svg/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Bootstrap笔记]]></title>
    <link href="http://youfei.github.io/2014/03/12/bootstrap-g-1/"/>
    <id>http://youfei.github.io/2014/03/12/bootstrap-g-1/</id>
    <published>2014-03-12T02:19:15.000Z</published>
    <updated>2014-03-12T02:20:44.000Z</updated>
    <content type="html"><![CDATA[<p>Bootstrap笔记</p>
<a id="more"></a>

<p>很有意思的小插件：<strong>Bootstrap 表单构造器</strong>
<a href="http://www.bootcss.com/p/bootstrap-form-builder/" target="_blank">http://www.bootcss.com/p/bootstrap-form-builder/</a></p>
]]></content>
    <summary type="html"><![CDATA[<p>Bootstrap笔记</p>
]]></summary>
    
      <category term="Bootstrap" scheme="http://youfei.github.io/tags/Bootstrap/"/>
    
      <category term="Bootstrap" scheme="http://youfei.github.io/categories/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mapinfo...]]></title>
    <link href="http://youfei.github.io/2014/03/07/mapinfo-g-1/"/>
    <id>http://youfei.github.io/2014/03/07/mapinfo-g-1/</id>
    <published>2014-03-07T05:41:36.000Z</published>
    <updated>2014-03-17T08:34:53.000Z</updated>
    <content type="html"><![CDATA[<p>Mapinfo的数据库采用混合型的空间数据库结构，分别使用不同的模块存储空间数据和属性数据。属性数据存储在关系数据库的若干属性表中，而空间数据则以Mapinfo的自定义格式保存于若干文件之中，两者之间通过一定的索引机制联系起来。为了提高查询和处理效率，Mapinfo采用层次结构对空间数据进行组织，即根据不同的专题将地图分层，每个图层由5个文件组成</p>
<a id="more"></a>

<h1 id="-">图层文件</h1>
<ul>
<li>属性数据的表结构文件(.TAB) </li>
</ul>
<p>它定义了地图属性数据的表结构，包括字段数、字段名称、字段类型和字段宽度、索引字段及相应图层的一些关键空间信息描述。TAB 文件实际上是一个文本文件。 </p>
<ul>
<li>属性数据文件(.DAT) </li>
</ul>
<p>它用于存放完整的地图属性数据。包括文件头，表结构描述，及各条属性数据记录。 </p>
<ul>
<li>交叉索引文件(.ID) </li>
</ul>
<p>它记录了地图中每一个空间对象在空间数据文件中的位置指针。指针的列的顺序与属性数据文件中属性数据记录存放的顺序一致。它实际上是一个空间对象的定位表。 </p>
<ul>
<li>空间数据文件(.MAP) </li>
</ul>
<p>它包含了各地图对象的空间属性。比如对象的几何类型、坐标信息和颜色信息等。还描述了与空间对象的属性数据记录在属性数据文件中的记录号，当用户从地图上查询某一地图对象时，就能够地查到其相关的属性信息。 </p>
<ul>
<li>索引文件(.IND) </li>
</ul>
<p>它不是必须的，只有当用户规定了数据库的索引字段后，系统才会自动产生它。 </p>
<h1 id="gis-cad-database-spatial-operation">GIS = CAD + DAtabASE + Spatial Operation</h1>
<h2 id="gis-">GIS 的工作原理</h2>
<p>1 空间模型
GIS 将现实世界抽象为互相联接不同特征的层面（LAYER）组合</p>
<p>2 地理参考系
空间数据包括绝对位置信息（如经纬度坐标）以及相对位置信息（包括地址、编码、统计调查值等）</p>
<p>3 矢量和栅格数据结构
GIS 数据包括矢量和栅格两种基本模式。
矢量数据以点、线、面方式编码并以（x，y）坐标串存储管理，是表现离散空间特性的最佳方式。
栅格数据（扫描图像或照片）是通过一系列网格单元表达连续地理特征。</p>
<h2 id="mapinfo-mapping-information">MapInfo = Mapping + Information</h2>
<p>栅格图像是由一行行细小的点（像素）组成，所以也可以称之为位图，是后续工作即图层分解的基础，又称作基图。</p>
<h3 id="-">栅格图像的获取</h3>
<p>1， 扫描仪/数码相机
2， 通过图形软件包将图像保存或转存为栅格文件格式，tif
3， 在MapInfo 购买已配准的栅格图像。</p>
<h3 id="mapinfo-7-">MapInfo 支持7中栅格图像：</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre>1，gif
2, jpg
3, tif
4, pcx
5, bmp
6, tda
7, bll （spot卫星图像）
</pre></td></tr></table></figure>

<p>地图对象：点，线，面</p>
<h3 id="-mapinfo-widget-tool-bar-"><strong>MapInfo widget tool bar</strong></h3>
<p>1 Web Services:
    从MapInfo Server获取数据，此处的Web Server指的是“MapInfo公司”的Web服务
2 DBMS 
    ODBC联接数据库
3 Drawing
    在Image上画图工具
4 Main
    各种Select工具：图片、工作区、图层、link</p>
<h3 id="-what-data-can-i-use-in-mapinfo-professional-"><strong>What Data Can I Use in MapInfo Professional?</strong></h3>
<p>Data file choices include:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="code"><pre>• Microsoft Access
• Microsoft Excel
• dBASE DBF
• ESRI ® shapefiles
• <span class="keyword">Raster</span> Images
• <span class="keyword">Grid</span> Images
• ASCII Delimited <span class="keyword">Text</span>		---》二进制文件，格式？
• Lotus <span class="number">1</span>–<span class="number">2</span>–<span class="number">3</span>
• Remote Databases (Oracle, SQL Server, PostGIS)
• Workspace
• Comma Delimited CSV files
</pre></td></tr></table></figure>

<blockquote>
<p>So we can choose Excel/CSV as Data Source</p>
<p>During the .TAB file creation process, the original file is in no way altered. The file retains its
original properties.</p>
</blockquote>
<h3 id="-support-for-raster-images-"><strong>Support for Raster Images</strong></h3>
<blockquote>
<p>支持栅格图像，需要 License</p>
</blockquote>
<p>When you bring in a raster image to MapInfo Professional, you may need to register it (specify its
map coordinates) so MapInfo Professional can display it properly. Choosing the Raster Image file
format from the Open dialog box will bring you to the Image Registration dialog box where you can
specify the appropriate map coordinates. Once you register the image, a process that creates a
.TAB file for the image, you can open it as you would open any table in a Map window. Images that
you purchase from MapInfo Professional will already be registered.</p>
<blockquote>
<p>For a full discussion of raster image display, see Registering SPOT Images in the Help System.</p>
</blockquote>
<p><strong>There is a two Giga Byte (2 GB) file limit on these files MapInfo Professional</strong></p>
<h3 id="-using-workspaces-"><strong>Using Workspaces</strong></h3>
<p><strong>A .WOR</strong> file is MapInfo Professional workspace file containing un-compiled MapBasic code that
MapInfo Professional interprets to open a session with tables, windows, and settings the way a user
left it. It is MapInfo Professional version specific depending on features used in it.
<strong>A .MWS</strong> workspace file originates from the MapXtreme product line and is comprised of XML code
to do things similar to a MapInfo Workspace *.wor with some limitations.</p>
<blockquote>
<p>whithout License, the layer can not be edited.</p>
</blockquote>
<h3 id="-supported-export-formats-"><strong>Supported Export Formats</strong></h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre>• Windows Bitmap (*<span class="preprocessor">.BMP</span>)
• Windows Metafile (*<span class="preprocessor">.WMF</span>)
• Windows Enhanced Metafile (*<span class="preprocessor">.EMF</span>)
• EMF + Metafile (*<span class="preprocessor">.EMF</span>)
• EMF + Dual Metafile (*<span class="preprocessor">.EMF</span>)
• JPEG File Interchange Format (*<span class="preprocessor">.JPG</span>)
• JPEG <span class="number">2000</span> (*<span class="preprocessor">.JP</span>2)
• Portable Network Graphics Format (*<span class="preprocessor">.PNG</span>)
• Tagged Image File Format (*TIF)
• TIFF CMYK (*<span class="preprocessor">.TIF</span>)
• TIFF CCITT Group <span class="number">4</span> (*<span class="preprocessor">.TIF</span>)
• TIFF LZW (*<span class="preprocessor">.TIF</span>)
• Graphic Interchange Format (*<span class="preprocessor">.GIF</span>)
• Photoshop <span class="number">3.0</span> (*<span class="preprocessor">.PSD</span>)
</pre></td></tr></table></figure>

<p><strong>mporting and Exporting Data in AutoCAD Format</strong></p>
<blockquote>
<p>Web Services – Sets refresh, timeout values, server options and other default settings for Proxy
Servers, WMS, WFS, Geocode server, Drivetime server, and Map Tile server web services.</p>
</blockquote>
]]></content>
    <summary type="html"><![CDATA[<p>Mapinfo的数据库采用混合型的空间数据库结构，分别使用不同的模块存储空间数据和属性数据。属性数据存储在关系数据库的若干属性表中，而空间数据则以Mapinfo的自定义格式保存于若干文件之中，两者之间通过一定的索引机制联系起来。为了提高查询和处理效率，Mapinfo采用层次结构对空间数据进行组织，即根据不同的专题将地图分层，每个图层由5个文件组成</p>
]]></summary>
    
      <category term="mapinfo" scheme="http://youfei.github.io/tags/mapinfo/"/>
    
      <category term="mapinfo" scheme="http://youfei.github.io/categories/mapinfo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[solr初读-1]]></title>
    <link href="http://youfei.github.io/2014/03/06/solr-g-1/"/>
    <id>http://youfei.github.io/2014/03/06/solr-g-1/</id>
    <published>2014-03-06T02:06:16.000Z</published>
    <updated>2014-03-06T06:13:20.000Z</updated>
    <content type="html"><![CDATA[<p>看Solr 的时候偶尔看到了一个博客，写的太和俺的胃口了,加到友情链接里面，嘿嘿</br>
<a href="http://blog.csdn.net/zyb243380456/article/details/7225768" target="_blank">zyb243380456的专栏</a></p>
<a id="more"></a>


<h1 id="1-solr-">1.solr认识</h1>
<p>solr是基于lucene开发包而搭建起来的一个依赖于Servlet容器的一个全文检索组件，他可以为自己的
web应用提供简单的检索服务，也可以搭建复杂的集群环境进行全文检索，例如如果索引文件很大大概
有7-90GB的索引文件就需要做分布式了应为这样的数据量一台机器的检索数据的速度太慢，如果需要
进行集群demo测试可以在本机多开启几个web应用服务器就可以了。</p>
<p><strong>Solr4 结构图</strong>
<img src="http://img1.51cto.com/attachment/201304/164703786.png" alt="Solr4 结构图*"></p>
<hr>
<h1 id="2-web-solr-">2.快速的为你的web应用提供solr全文检索服务</h1>
<h2 id="tomcat-uriencoding">Tomcat URIEncoding</h2>
<p><strong>server.xml</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">Connector</span> <span class="attribute">port</span>=<span class="value">"8080"</span> <span class="attribute">protocol</span>=<span class="value">"HTTP/1.1"</span>  
           <span class="attribute">connectionTimeout</span>=<span class="value">"20000"</span>  
           <span class="attribute">redirectPort</span>=<span class="value">"8443"</span> <span class="attribute">URIEncoding</span>=<span class="value">"UTF-8"</span>/&gt;</span>
</pre></td></tr></table></figure>

<h2 id="-jar-">需要的jar:</h2>
<p><strong>apache-solr-core-3.2.0.jar</strong> </br>
<strong>apache-solr-solrj-3.2.0.jar</strong>--&gt;用于提供测试solr全文检索的java客户端</p>
<h2 id="-solr-home-">如何配置你的<code>solr.home</code>的主要目录结构</h2>
<p> 可以以任意名字的目录进行配置, 但是在这个目录的里面需要按照solr的要求来配置
 在xxx目录里面有<strong>bin</strong>, <strong>data</strong>, <strong>conf</strong>和<strong>solr.xml</strong>三个目录和一个配置文件,这个配置文件用于
 配置<strong>CoreContainer</strong>容器的多实例通过这个配置实现</p>
<p> 在<code>bin</code>里面是solr插件的第三方jar包; 也就是你需要为solr添加的插件包放在这个里面</br></p>
<p> <code>data</code>下面有index,和spellcheck两个目录分别是存放索引文件和拼写检查的什么东西</br></p>
<p> 在<code>conf</code>下面全部是与当前solrcore实例相关的一些配置文件，例如 <code>solrconfig.xml</code>, <code>schema.xml</code></br></p>
<p> <code>scripts.conf</code>这三个文件是最重要的;</p>
<ul>
<li>第一个用于配置当前solrcore如何对外提供全文检索服务</li>
<li>第二个用于配置当前solrcore实例的索引文档的格式以及文档的字段信息</li>
<li>第三个用于做solr分布式索引分发以及同步的配置文件</li>
</ul>
<h2 id="solr-servlet-solr-home-">solr如何与servlet容器相关联[配置solr.home]</h2>
<blockquote>
<p>上面已经配置好solr的木要目录结构然后只要让solrDispatchFilter在实例化的时候找到这个目录就能够初始化我们的solr.home了</br></p>
<p>可以在过滤器或者监听器构造函数中通过设置jvm系统参数的形式</p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>  System<span class="preprocessor">.setProperty</span>(<span class="string">"solr.solr.home"</span>,<span class="string">"dir"</span>)<span class="comment">;</span>
</pre></td></tr></table></figure>

<blockquote>
<p>web.xml中进行描述,上面已经复制过通过在tomcat的JNDI容器中进行指定就是那个context.xml中</p>
</blockquote>
<p>在web.xml中配置SolrDispatchFilter.java</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="comment">&lt;!-- 过滤所有与solr相关的http请求  --&gt;</span>
<span class="tag">&lt;<span class="title">filter</span>&gt;</span>
	<span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>SolrRequestFilter<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span>
	<span class="tag">&lt;<span class="title">filter-class</span>&gt;</span>org.apache.solr.servlet.SolrDispatchFilter<span class="tag">&lt;/<span class="title">filter-class</span>&gt;</span>
	<span class="tag">&lt;<span class="title">init-param</span>&gt;</span>
	        <span class="comment">&lt;!-- 通过一特定开头的字符标志需要solr服务 --&gt;</span>
		<span class="tag">&lt;<span class="title">param-name</span>&gt;</span>path-prefix<span class="tag">&lt;/<span class="title">param-name</span>&gt;</span>
		<span class="tag">&lt;<span class="title">param-value</span>&gt;</span>solrservice<span class="tag">&lt;/<span class="title">param-value</span>&gt;</span>
	<span class="tag">&lt;/<span class="title">init-param</span>&gt;</span>
<span class="tag">&lt;/<span class="title">filter</span>&gt;</span>
<span class="tag">&lt;<span class="title">filter-mapping</span>&gt;</span>
 <span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>SolrRequestFilter<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span>
 <span class="tag">&lt;<span class="title">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="title">url-pattern</span>&gt;</span>
<span class="tag">&lt;/<span class="title">filter-mapping</span>&gt;</span>
</pre></td></tr></table></figure>

<hr>
<h1 id="3-solr-">3.solr相关包的概要</h1>
<h2 id="-jar-">首先需要的jar包有:</h2>
<h3 id="apache-solr-core-3-2-0-jar-">apache-solr-core-3.2.0.jar;</h3>
<p>这是jar包中所包含的包:</p>
<blockquote>
<p>org.apache.solr.analysis</br></p>
</blockquote>
<p>这个包主要解决分词问题，学习solr之前必须对lucene的简单结构
进行了解如何分词lucene中已经提到过</p>
<blockquote>
<p>org.apache.solr.client.solrj.embedded</br></p>
</blockquote>
<p>solrj主要提供方便的方式去应用solr全文检索的功能</p>
<blockquote>
<p>org.apache.solr.core</br></p>
</blockquote>
<p>包含的主要类介绍</br>
org.apache.solr.core.CoreContainer.java,</br>
org.apache.solr.core.Config.java,</br>
org.apache.solr.core.SolrConfig.java,</br>
org.apache.solr.core.SolrCore.java</br>
org.apache.solr.core.CoreDescriptor.java,</br>
org.apache.solr.core.DirectoryFactory.java,</br>
org.apache.solr.core.SolrResourceLoader.java</p>
<p>不管你有多少个solrcore实例那么solrcore的实例都会存放在我们的CoreContainer的</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="keyword">protected</span> final <span class="keyword">Map</span>&lt;<span class="typename">String</span>, SolrCore&gt; cores = <span class="keyword">new</span> LinkedHashMap&lt;<span class="typename">String</span>, SolrCore&gt;();
</pre></td></tr></table></figure>

<p>这个属性中也就是用于保存solrcore实例，那么solrCore是如何被创建的，他是根据SolrConfig创建的</br>
<strong>solrConfig</strong>继承自Config类Config类提供的xPath的方式去解析xml文件</br>
<strong>solrConfig</strong>对应到我们的SolrConfig.xml文件，然后SolrResourceLoader是用来加载配置文件的并且用于定位solr.home</br>
<strong>solr.home</strong>在SolrResourceLoader是怎么定位到<code>solr.home</code>的：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
</pre></td><td class="code"><pre><span class="keyword">public</span> static <span class="built_in">String</span> locateSolrHome() {
    <span class="built_in">String</span> home <span class="subst">=</span> <span class="built_in">null</span>;
    <span class="comment">// 功过JNDI的方式定位到solrHome的主要目录</span>
    <span class="comment">// 他可以在web.xml中这样配置</span>
    <span class="comment">//&lt;env-entry&gt;</span>
	<span class="comment">//&lt;env-entry-name&gt;solr/home&lt;/env-entry-name&gt;</span>
	<span class="comment">//&lt;env-entry-value&gt;C:\\apache-tomcat-6.0.35-windows-x64\\apache-tomcat-6.0.35\\webapps\\solr&lt;/env-entry-value&gt;</span>
	<span class="comment">//&lt;env-entry-type&gt;java.lang.String&lt;/env-entry-type&gt;</span>
    <span class="comment">//&lt;/env-entry&gt;</span>
    try {
      Context c <span class="subst">=</span> <span class="literal">new</span> InitialContext();
      home <span class="subst">=</span> (<span class="built_in">String</span>)c<span class="built_in">.</span>lookup(<span class="string">"java:comp/env/"</span><span class="subst">+</span>project<span class="subst">+</span><span class="string">"/home"</span>);
      <span class="keyword">log</span><span class="built_in">.</span>info(<span class="string">"Using JNDI solr.home: "</span><span class="subst">+</span>home );
    } catch (NoInitialContextException e) {
      <span class="keyword">log</span><span class="built_in">.</span>info(<span class="string">"JNDI not configured for "</span><span class="subst">+</span>project<span class="subst">+</span><span class="string">" (NoInitialContextEx)"</span>);
    } catch (NamingException e) {
      <span class="keyword">log</span><span class="built_in">.</span>info(<span class="string">"No /"</span><span class="subst">+</span>project<span class="subst">+</span><span class="string">"/home in JNDI"</span>);
    } catch( RuntimeException ex ) {
      <span class="keyword">log</span><span class="built_in">.</span>warn(<span class="string">"Odd RuntimeException while testing for JNDI: "</span> <span class="subst">+</span> ex<span class="built_in">.</span>getMessage());
    } 
    
    <span class="comment">// 如果JNDI没有找到主要目录的话就会尝试在System.getProperty("solr.solr.home");</span>
    <span class="comment">// 也就是JVM的系统参数中进行一个查找只要是在同一个JVM中都是可以找到的</span>
    <span class="comment">// 你也可以在某个监听器或者过滤器中指定solrhome他是这样指定的</span>
    <span class="comment">// 需要注意的是你的过滤器必须要在SolrDispatchFilter.java这个过滤器之前因为</span>
    <span class="comment">// 容器初始化过滤器的时候是根据配置文件的顺序进行实例话的</span>
    <span class="comment">// 在SolrDispatchFilter.java过滤器实例化的时候进行了很多的solr初始化服务包括容器的初始化等</span>
    <span class="comment">// 所以必须要在这个过滤器实例化之前指定solrhome的主要目录</span>
    <span class="comment">// System.setProperty("solr.solr.home","dir");</span>
    <span class="keyword">if</span>( home <span class="subst">==</span> <span class="built_in">null</span> ) {
      <span class="built_in">String</span> prop <span class="subst">=</span> project <span class="subst">+</span> <span class="string">".solr.home"</span>;
      home <span class="subst">=</span> System<span class="built_in">.</span>getProperty(prop);
      <span class="keyword">if</span>( home <span class="subst">!=</span> <span class="built_in">null</span> ) {
        <span class="keyword">log</span><span class="built_in">.</span>info(<span class="string">"using system property "</span><span class="subst">+</span>prop<span class="subst">+</span><span class="string">": "</span> <span class="subst">+</span> home );
      }
    }
    
    <span class="comment">// 如果上面的两种方式都没有找到就会到web应用的主目录下就行查找</span>
    <span class="comment">// 如果你的web应用名字叫test的话他就到test目录下去找solr这个目录</span>
    <span class="keyword">if</span>( home <span class="subst">==</span> <span class="built_in">null</span> ) {
      home <span class="subst">=</span> project <span class="subst">+</span> <span class="string">'/'</span>;
      <span class="keyword">log</span><span class="built_in">.</span>info(project <span class="subst">+</span> <span class="string">" home defaulted to '"</span> <span class="subst">+</span> home <span class="subst">+</span> <span class="string">"' (could not find system property or JNDI)"</span>);
    }
    <span class="keyword">return</span> normalizeDir( home );
  }
</pre></td></tr></table></figure>

<p>定位到<code>solr.home</code>的主要目录后也就可以根据特定的目录层次结构进行加载配置文件然后实例容器然后向容器中添加solrcore实例了。</br></p>
<p><strong>CoreDescriptor</strong>这个类主要是用来描述一个solrcore实例特征的相当于介绍这个solrcore有几个处理器，并且
有chema.xml文件在那个位置然后这个solrcore的名字叫什么他的数据索引文件存放在哪个位置等...</br>
<strong>DirectoryFactory</strong>这个类对应的lucene中的FSDirectory他是找到所有索引文件所在的目录。</br></p>
<blockquote>
<p>org.apache.solr.handler</p>
</blockquote>
<p>这个包中有提供了大部分solr提供的服务功能的实现</br>
处理器也就是处理提出的各种不同的solr的全文检索服务要求 </br>
包括crud和控制我们的容器对象和solrcore实例对象的一些处理方式</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>org<span class="preprocessor">.apache</span><span class="preprocessor">.solr</span><span class="preprocessor">.handler</span><span class="preprocessor">.admin</span><span class="preprocessor">.AdminHandlers</span><span class="preprocessor">.java</span>
</pre></td></tr></table></figure>

<p>AdminHandlers相当于<strong>solr.home</strong>的主人，他将掌管这个家庭的成员也就是solrcore实例，
等多方面的功能。</p>
<blockquote>
<p>org.apache.solr.handler.ReplicationHandler.java</p>
</blockquote>
<p>ReplicationHandler需要在做solr分布式的时候用到，在默认的情况下solr的<code>solrconfig.xml</code></br></p>
<p>主机和从机上的索引文件是一样的他是通过他们两个之间的版本号的差别来进行一个两个索引库之间的索引同步操作来实现solr的分布式索引库的维护，这个目的主要是为了提供更好和更快速的检索服务，</br></p>
<p>主机用于提供维护操作，而从机用于提供检索服务，我们还可以提供多个这样的组合,并且对外提供一台检索服务的机器,然后当有查询请求的时候,通过这台主机将查询语句发送到下面所有的从机上去.然后将这些查询结构做一个统一，</br></p>
<p>这样的功能solr已经提供的非常好了，只是如何去搭建大的分布式检索架构需要考虑一下主机的配置:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="code"><pre> <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/replication"</span> <span class="attribute">class</span>=<span class="value">"solr.ReplicationHandler"</span> &gt;</span>
      <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"master"</span>&gt;</span> 
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"replicateAfter"</span>&gt;</span>commit<span class="tag">&lt;/<span class="title">str</span>&gt;</span> <span class="comment">&lt;!--在索引分发后自动提交 --&gt;</span>
	    <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"httpConnTimeout"</span>&gt;</span>50000000<span class="tag">&lt;/<span class="title">str</span>&gt;</span> <span class="comment">&lt;!-- 当索引分连接达到这么长的时间后连接超时--&gt;</span>
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"httpReadTimeout"</span>&gt;</span>10000000<span class="tag">&lt;/<span class="title">str</span>&gt;</span>  <span class="comment">&lt;!-- 当读取索引文件达到这个时间的时候操作超时--&gt;</span>
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"confFiles"</span>&gt;</span>schema.xml,stopwords.txt,elevate.xml<span class="tag">&lt;/<span class="title">str</span>&gt;</span> <span class="comment">&lt;!-- 当有从机有要求和主机做同步的时候需要分发的配置文件 --&gt;</span>
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"commitReserveDuration"</span>&gt;</span>00:05:00<span class="tag">&lt;/<span class="title">str</span>&gt;</span> <span class="comment">&lt;!-- 提交受保护的时间段长度 --&gt;</span>
        <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>  
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>
  从机的配置:
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/replication"</span> <span class="attribute">class</span>=<span class="value">"solr.ReplicationHandler"</span> &gt;</span>
      <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"slave"</span>&gt;</span> 
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"masterUrl"</span>&gt;</span>http://localhost:8080/mysolr/collection1/replication<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
	    <span class="comment">&lt;!--translate is:http://host_name:port/webapp_name/solrcore_name/replicationHandler_name/ --&gt;</span>
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"pollInterval"</span>&gt;</span>00:05:00<span class="tag">&lt;/<span class="title">str</span>&gt;</span><span class="comment">&lt;!-- 间隔多长时间到master上去检测索引的version和generation--&gt;</span>   
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"compression"</span>&gt;</span>internal<span class="tag">&lt;/<span class="title">str</span>&gt;</span> 
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"httpConnTimeout"</span>&gt;</span>50000000<span class="tag">&lt;/<span class="title">str</span>&gt;</span> 
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"httpReadTimeout"</span>&gt;</span>10000000<span class="tag">&lt;/<span class="title">str</span>&gt;</span> 
           <span class="comment">&lt;!--  &lt;str name="httpBasicAuthUser"&gt;123&lt;/str&gt; 
           &lt;str name="httpBasicAuthPassword"&gt;123&lt;/str&gt; --&gt;</span><span class="comment">&lt;!-- 为了安全可以设置可以进行这些操作的请求的密码只有密码正确的请求才能执行分发操作--&gt;</span>
         <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>  
     <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>
</pre></td></tr></table></figure>

<blockquote>
<p>org.apache.solr.handler.RequestHandlerBase.java</p>
</blockquote>
<p>他是所有Handler的基类,他提供了最基本的操作方式</br>
其中重要的方法:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
</pre></td><td class="code"><pre><span class="comment">// 用于处理处理solr的服务请求操作</span>
<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleRequest</span>(SolrQueryRequest req, SolrQueryResponse rsp) {
    numRequests++;
    <span class="keyword">try</span> {
      SolrPluginUtils.setDefaults(req,defaults,appends,invariants);
      rsp.setHttpCaching(httpCaching);
      handleRequestBody( req, rsp );
      <span class="comment">// count timeouts</span>
      NamedList header = rsp.getResponseHeader();
      <span class="keyword">if</span>(header != <span class="keyword">null</span>) {
        Object partialResults = header.get(<span class="string">"partialResults"</span>);
        <span class="keyword">boolean</span> timedOut = partialResults == <span class="keyword">null</span> ? <span class="keyword">false</span> : (Boolean)partialResults;
        <span class="keyword">if</span>( timedOut ) {
          numTimeouts++;
          rsp.setHttpCaching(<span class="keyword">false</span>);
        }
      }
    } <span class="keyword">catch</span> (Exception e) {
      SolrException.log(SolrCore.log,e);
      <span class="keyword">if</span> (e <span class="keyword">instanceof</span> ParseException) {
        e = <span class="keyword">new</span> SolrException(SolrException.ErrorCode.BAD_REQUEST, e);
      }
      rsp.setException(e);
      numErrors++;
    }
    totalTime += rsp.getEndTime() - req.getStartTime();
  }


<span class="comment">// 这个方法是一个抽象方法也就是真正的实现实在重写这个方法的子类身上进行实现了</span>
<span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">handleRequestBody</span>( SolrQueryRequest req, SolrQueryResponse rsp ) <span class="keyword">throws</span> Exception;
<span class="comment">// 在replicationHandler中的实现:</span>
 <span class="annotation">@Override</span>
  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleRequestBody</span>(SolrQueryRequest req, SolrQueryResponse rsp) <span class="keyword">throws</span> Exception {
    rsp.setHttpCaching(<span class="keyword">false</span>);
    <span class="keyword">final</span> SolrParams solrParams = req.getParams();
    String command = solrParams.get(COMMAND);<span class="comment">// 得到与这个solr实例需要进行分布式操作的命令</span>
    <span class="keyword">if</span> (command == <span class="keyword">null</span>) {
      rsp.add(STATUS, OK_STATUS);
      rsp.add(<span class="string">"message"</span>, <span class="string">"No command"</span>);
      <span class="keyword">return</span>;
    }
    <span class="comment">// This command does not give the current index version of the master</span>
    <span class="comment">// 这个命令不提供当前主机的索引版本的信息</span>
    <span class="comment">// It gives the current 'replicateable' index version</span>
    <span class="comment">// 他提供当前需要复制的索引版本信息</span>
   <span class="keyword">if</span> (command.equals(CMD_INDEX_VERSION)) {
      IndexCommit commitPoint = indexCommitPoint;  <span class="comment">// make a copy so it won't change</span>
      <span class="keyword">if</span> (commitPoint != <span class="keyword">null</span> && replicationEnabled.get()) {
        <span class="comment">//</span>
        <span class="comment">// There is a race condition here.  The commit point may be changed / deleted by the time</span>
        <span class="comment">// we get around to reserving it.  This is a very small window though, and should not result</span>
        <span class="comment">// in a catastrophic failure, but will result in the client getting an empty file list for</span>
        <span class="comment">// the CMD_GET_FILE_LIST command.</span>
        <span class="comment">//</span>
        core.getDeletionPolicy().setReserveDuration(commitPoint.getVersion(), reserveCommitDuration);
        rsp.add(CMD_INDEX_VERSION, commitPoint.getVersion());
        rsp.add(GENERATION, commitPoint.getGeneration());
      } <span class="keyword">else</span> {
        <span class="comment">// This happens when replication is not configured to happen after startup and no commit/optimize</span>
        <span class="comment">// has happened yet.</span>
        rsp.add(CMD_INDEX_VERSION, <span class="number">0</span>L);
        rsp.add(GENERATION, <span class="number">0</span>L);
      }
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equals(CMD_GET_FILE)) {
      getFileStream(solrParams, rsp);
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equals(CMD_GET_FILE_LIST)) {
      getFileList(solrParams, rsp);
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equalsIgnoreCase(CMD_BACKUP)) {
      doSnapShoot(<span class="keyword">new</span> ModifiableSolrParams(solrParams), rsp,req);
      rsp.add(STATUS, OK_STATUS);
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equalsIgnoreCase(CMD_FETCH_INDEX)) {
      String masterUrl = solrParams.get(MASTER_URL);
      <span class="keyword">if</span> (!isSlave && masterUrl == <span class="keyword">null</span>) {
        rsp.add(STATUS,ERR_STATUS);
        rsp.add(<span class="string">"message"</span>,<span class="string">"No slave configured or no 'masterUrl' Specified"</span>);
        <span class="keyword">return</span>;
      }
      <span class="keyword">final</span> SolrParams paramsCopy = <span class="keyword">new</span> ModifiableSolrParams(solrParams);
      <span class="keyword">new</span> Thread() {
        <span class="annotation">@Override</span>
        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span>() {
          doFetch(paramsCopy);
        }
      }.start();
      rsp.add(STATUS, OK_STATUS);
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equalsIgnoreCase(CMD_DISABLE_POLL)) {
      <span class="keyword">if</span> (snapPuller != <span class="keyword">null</span>){
        snapPuller.disablePoll();
        rsp.add(STATUS, OK_STATUS);
      } <span class="keyword">else</span> {
        rsp.add(STATUS, ERR_STATUS);
        rsp.add(<span class="string">"message"</span>,<span class="string">"No slave configured"</span>);
      }
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equalsIgnoreCase(CMD_ENABLE_POLL)) {
      <span class="keyword">if</span> (snapPuller != <span class="keyword">null</span>){
        snapPuller.enablePoll();
        rsp.add(STATUS, OK_STATUS);
      }<span class="keyword">else</span> {
        rsp.add(STATUS,ERR_STATUS);
        rsp.add(<span class="string">"message"</span>,<span class="string">"No slave configured"</span>);
      }
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equalsIgnoreCase(CMD_ABORT_FETCH)) {
      <span class="keyword">if</span> (snapPuller != <span class="keyword">null</span>){
        snapPuller.abortPull();
        rsp.add(STATUS, OK_STATUS);
      } <span class="keyword">else</span> {
        rsp.add(STATUS,ERR_STATUS);
        rsp.add(<span class="string">"message"</span>,<span class="string">"No slave configured"</span>);
      }
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equals(CMD_FILE_CHECKSUM)) {
      <span class="comment">// this command is not used by anyone</span>
      getFileChecksum(solrParams, rsp);
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equals(CMD_SHOW_COMMITS)) {
      rsp.add(CMD_SHOW_COMMITS, getCommits());
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equals(CMD_DETAILS)) {
      rsp.add(CMD_DETAILS, getReplicationDetails(solrParams.getBool(<span class="string">"slave"</span>,<span class="keyword">true</span>)));
      RequestHandlerUtils.addExperimentalFormatWarning(rsp);
    } <span class="keyword">else</span> <span class="keyword">if</span> (CMD_ENABLE_REPL.equalsIgnoreCase(command)) {
      replicationEnabled.set(<span class="keyword">true</span>);
      rsp.add(STATUS, OK_STATUS);
   } <span class="keyword">else</span> <span class="keyword">if</span> (CMD_DISABLE_REPL.equalsIgnoreCase(command)) {
     replicationEnabled.set(<span class="keyword">false</span>);
     rsp.add(STATUS, OK_STATUS);
   }
  }
</pre></td></tr></table></figure>

<h3 id="org-apache-solr-highlight">org.apache.solr.highlight</h3>
<p>为检索到的文本提供高亮服务的包;</p>
<blockquote>
<p>org.apache.solr.request</p>
</blockquote>
<p>这个包主要通过<code>org.apache.solr.servlet.SolrRequestParser.java</code>类
根据HttpServletRequest对象的请求参数分析成符合solr应用的请求参数</br>
主要方法是:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="code"><pre> <span class="keyword">public</span> SolrQueryRequest <span class="title">parse</span>( SolrCore core, String path, HttpServletRequest req ) throws Exception
  {
    SolrRequestParser parser = standard;
    
    <span class="comment">// TODO -- in the future, we could pick a different parser based on the request</span>
    
    <span class="comment">// Pick the parser from the request...</span>
    ArrayList&lt;ContentStream&gt; streams = <span class="keyword">new</span> ArrayList&lt;ContentStream&gt;(<span class="number">1</span>);
    SolrParams <span class="keyword">params</span> = parser.parseParamsAndFillStreams( req, streams );
    SolrQueryRequest sreq = buildRequestFrom( core, <span class="keyword">params</span>, streams );

    <span class="comment">// Handlers and login will want to know the path. If it contains a ':'</span>
    <span class="comment">// the handler could use it for RESTful URLs</span>
    sreq.getContext().put( <span class="string">"path"</span>, path );<span class="comment">// 在一个solr的请求处理中也有solr请求的上下文</span>
    <span class="comment">// 应为处理这个请求的话这个请求将会被当作很多发放的参数所以设置一个方法的上下文环境</span>
    <span class="comment">// 保存许多很重要的执行信息</span>
    <span class="keyword">return</span> sreq;
}
</pre></td></tr></table></figure>

<blockquote>
<p>org.apache.solr.response</p>
</blockquote>
<p>关于solr的响应的信息的封装</p>
<blockquote>
<p>org.apache.solr.schema</p>
</blockquote>
<p>对应到封装schema.xml这个里面提供的一些功能的实现</p>
<blockquote>
<p>org.apache.solr.search
org.apache.solr.servlet
org.apache.solr.servlet.SolrDispatchFilter.java</p>
</blockquote>
<p>这个类是开启solr服务的关键过滤器一般需要在web.xml部署描述符中进行配置后
才能够提供solr全文检索服务,他的doFilter方法是所有solr服务的入口。</p>
<blockquote>
<p>org.apache.solr.spelling
org.apache.solr.update
org.apache.solr.util</p>
</blockquote>
<hr>
<h1 id="4-corecontainer-">4.如何配置多实例的CoreContainer容器</h1>
<p>在solr的主目录下找到solr.xml进行配置就行了然后指定好solrcore
实例子所在的索引库以及配置还有依赖包所在的目录</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">solr</span> <span class="attribute">persistent</span>=<span class="value">"false"</span>&gt;</span>
  <span class="comment">&lt;!--
  adminPath: RequestHandler path to manage cores.
  管理员path:请求处理器所映射的管理路径然后去管理容器中的solrcore实例
    If 'null' (or absent), cores will not be manageable via request handler
    如果是null或者缺省的话,容器中的实例将不能通过请求处理器进行有效的管理
    也就是同一个web应用下面有多个solrcore的应用在检索的时候需要指定你需要检索
    的是那个solrcore:
    http://host_name:port/webapp_name/solrcore_name/admin/cores/ 
    这样就可以进行管理容器中的solrcore实例
  --&gt;</span>
  <span class="tag">&lt;<span class="title">cores</span> <span class="attribute">adminPath</span>=<span class="value">"/admin/cores"</span> <span class="attribute">defaultCoreName</span>=<span class="value">"collection1"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">core</span> <span class="attribute">name</span>=<span class="value">"collection1"</span> <span class="attribute">instanceDir</span>=<span class="value">"."</span> /&gt;</span>
    <span class="tag">&lt;<span class="title">core</span> <span class="attribute">name</span>=<span class="value">"collection2"</span> <span class="attribute">instanceDir</span>=<span class="value">"f:\\hh"</span> /&gt;</span>
  <span class="tag">&lt;/<span class="title">cores</span>&gt;</span>
<span class="tag">&lt;/<span class="title">solr</span>&gt;</span>
</pre></td></tr></table></figure>

<hr>
<h1 id="5-solr-">5.分布式solr服务的搭建配置方式</h1>
<p>首先找到需要进行分布式应用的solrcore实例的配置所在目录然后在solrconfig.xml中</br>
 将用于处理分布式服务的请求处理器的配置加上去,还需要在scripts.conf中进行指定一些
 信息就可以了</p>
<blockquote>
<p>master</p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre> <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/replication"</span> <span class="attribute">class</span>=<span class="value">"solr.ReplicationHandler"</span> &gt;</span>
      <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"master"</span>&gt;</span> 
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"replicateAfter"</span>&gt;</span>commit<span class="tag">&lt;/<span class="title">str</span>&gt;</span> <span class="comment">&lt;!--在索引分发后自动提交 --&gt;</span>
	    <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"httpConnTimeout"</span>&gt;</span>50000000<span class="tag">&lt;/<span class="title">str</span>&gt;</span> <span class="comment">&lt;!-- 当索引分连接达到这么长的时间后连接超时--&gt;</span>
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"httpReadTimeout"</span>&gt;</span>10000000<span class="tag">&lt;/<span class="title">str</span>&gt;</span>  <span class="comment">&lt;!-- 当读取索引文件达到这个时间的时候操作超时--&gt;</span>
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"confFiles"</span>&gt;</span>schema.xml,stopwords.txt,elevate.xml<span class="tag">&lt;/<span class="title">str</span>&gt;</span> <span class="comment">&lt;!-- 当有从机有要求和主机做同步的时候需要分发的配置文件 --&gt;</span>
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"commitReserveDuration"</span>&gt;</span>00:05:00<span class="tag">&lt;/<span class="title">str</span>&gt;</span> <span class="comment">&lt;!-- 提交受保护的时间段长度 --&gt;</span>
        <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>  
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>
</pre></td></tr></table></figure>

<blockquote>
<p>slave</p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre>    <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/replication"</span> <span class="attribute">class</span>=<span class="value">"solr.ReplicationHandler"</span> &gt;</span>
      <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"slave"</span>&gt;</span> 
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"masterUrl"</span>&gt;</span>http://localhost:8080/mysolr/collection1/replication<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
	    <span class="comment">&lt;!--translate is:http://host_name:port/webapp_name/solrcore_name/replicationHandler_name/ --&gt;</span>
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"pollInterval"</span>&gt;</span>00:05:00<span class="tag">&lt;/<span class="title">str</span>&gt;</span><span class="comment">&lt;!-- 间隔多长时间到master上去检测索引的version和generation--&gt;</span>   
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"compression"</span>&gt;</span>internal<span class="tag">&lt;/<span class="title">str</span>&gt;</span> 
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"httpConnTimeout"</span>&gt;</span>50000000<span class="tag">&lt;/<span class="title">str</span>&gt;</span> 
            <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"httpReadTimeout"</span>&gt;</span>10000000<span class="tag">&lt;/<span class="title">str</span>&gt;</span> 
           <span class="comment">&lt;!--  &lt;str name="httpBasicAuthUser"&gt;123&lt;/str&gt; 
           &lt;str name="httpBasicAuthPassword"&gt;123&lt;/str&gt; --&gt;</span><span class="comment">&lt;!-- 为了安全可以设置可以进行这些操作的请求的密码只有密码正确的请求才能执行分发操作--&gt;</span>
         <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>  
     <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>
</pre></td></tr></table></figure>

<hr>
<h1 id="6-solr-http-">6.一个请求solr服务的http请求的执行顺序</h1>
<blockquote>
<p><a href="http://host_name:port/webapp_name/solrcore_name/someSolrServiceParameters" target="_blank">http://host_name:port/webapp_name/solrcore_name/someSolrServiceParameters</a> </br></p>
</blockquote>
<p>  因为配置了SolrDispatchFilter过滤器所以这个请求肯定会通过这个过滤器的doFilter方法。
  进入到doFilter方法后</br></p>
<p>  1 首先这个过滤器做为一个普通的类他拥有Corecontainer这个容器属性也就是说所有的solrcore实例都在这个类中可以拿到。
      那么这个拿到了什么都好说,并且他做的第一件事情是将这个coreContainer实例保存到了我们的请求中也就是HttpServletRequest对象的内置map属性中了，
      那么通过这个过滤器后我们还可以访问到很多与solr相关的东西
      <code>request.setAttribute(&quot;org.apache.solr.CoreContainer&quot;, cores);</code></br></p>
<p>  2 下一步是根据我们的httpServletRequest中的请求参数得到对应的solr请求对象也就是得到<code>solrQueryRequest</code>
    他是通过一个解析器来得到solrQueryRequest这个实例的在SolrQueryRequest的parse方法中需要传入 
    <code>public SolrQueryRequest parse( SolrCore core, String path, HttpServletRequest req )</code></p>
<p>  3 然后返回一个solrQueryRequest，也就是将httpServletRequest对象中的参数转换成solr容器知道这个请求
  需要什么东西的一个对象，请求什么服务的对象已经构造好了，然后就是构造怎么处理这个请求的一个请求处理器
  这个请求处理器在solrQueryRequest中已经描述出来了，所以只需要在一个集合中根据键值对进行取得就可以了
  这个处理器
  <code>handler = core.getRequestHandler( path );</code>
  在solrcore实例中已经配置好了许多这样的请求处理器只要从中拿一个就可以了。根据参数构造了需要什么样的服务的对象出来，并且针对这个服务的处理器出来了，</p>
<p>  4 下一步就是执行了<code>this.execute( req, handler, solrReq, solrRsp );</code>这一步是处理所有的solr服务的入口，如果想知道solr是怎么实现的一切都从这里开始。</p>
<hr>
<h1 id="7-solr-core-code-">7.solr分布式索引分发的全过程以及中间core code:</h1>
<blockquote>
<p>如何以http请求方式进行主从索引文件同步</p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre>&gt; master HTTP 管理 API：
      启用复制， <span class="keyword">http</span>://master_name:port/solr-master/replication?<span class="command"><span class="keyword">command</span>=<span class="title">enablereplication</span></span>
      禁用复制， <span class="keyword">http</span>://master_name:port/solr-master/replication?<span class="command"><span class="keyword">command</span>=<span class="title">disablereplication</span></span>
      备份：     <span class="keyword">http</span>://master_name:port/solr-master/replication?<span class="command"><span class="keyword">command</span>=<span class="title">backup</span></span>

&gt; slave TTTP 管理 API：
      复制索引，        <span class="keyword">http</span>://slave_host:port/solr-slave/replication?<span class="command"><span class="keyword">command</span>=<span class="title">fetchindex</span></span>
      终止索引的复制，  <span class="keyword">http</span>://slave_host:port/solr-slave/replication?<span class="command"><span class="keyword">command</span>=<span class="title">abortfetch</span></span>
      启动轮询复制索引，<span class="keyword">http</span>://slave_host:port/solr-slave/replication?<span class="command"><span class="keyword">command</span>=<span class="title">enablepoll</span></span>
      禁用轮询复制索引，<span class="keyword">http</span>://slave_host:port/solr-slave/replication?<span class="command"><span class="keyword">command</span>=<span class="title">disablepoll</span></span>
      索引详细，        <span class="keyword">http</span>://slave_host:port/solr-slave/replication?<span class="command"><span class="keyword">command</span>=<span class="title">details</span> </span>
    
&gt; public TTTP 管理 API:
      取索引版本号，    <span class="keyword">http</span>://host_name:port/solr-slave/replication?<span class="command"><span class="keyword">command</span>=<span class="title">indexversion</span></span>
</pre></td></tr></table></figure>


<blockquote>
<p>分布式处理的关键类:</p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>org<span class="preprocessor">.apache</span><span class="preprocessor">.solr</span><span class="preprocessor">.handler</span><span class="preprocessor">.ReplicationHandler</span><span class="preprocessor">.java</span>
org<span class="preprocessor">.apache</span><span class="preprocessor">.solr</span><span class="preprocessor">.handler</span><span class="preprocessor">.SnapPuller</span><span class="preprocessor">.java</span>
SnapPuller的内部类:SnapPuller$FileFetcher
</pre></td></tr></table></figure>

<blockquote>
<p>browser:发送get请求</p>
</blockquote>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="keyword">http</span>://slave_host:port/solr-slave/replication?<span class="command"><span class="keyword">command</span>=<span class="title">fetchindex</span></span>
</pre></td></tr></table></figure>

<p>经过SolrDispatchFilter过滤器的doFilter方法然后得到SolrQueryRequest对象和SolrRequestHandler对象实例，</br>
让后调用<code>this.execute( req, handler, solrReq, solrRsp );</code>方法进入ReplicationHandler内部的HandleRequest</br>这个发放是从父类继承过滤在父类中调用了子类的HandlRequestBody方法然后开始处理分布式相关的操作</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
</pre></td><td class="code"><pre><span class="annotation">@Override</span>
  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleRequestBody</span>(SolrQueryRequest req, SolrQueryResponse rsp) <span class="keyword">throws</span> Exception {
    rsp.setHttpCaching(<span class="keyword">false</span>);
    <span class="keyword">final</span> SolrParams solrParams = req.getParams();
    String command = solrParams.get(COMMAND);
    <span class="keyword">if</span> (command == <span class="keyword">null</span>) {
      rsp.add(STATUS, OK_STATUS);
      rsp.add(<span class="string">"message"</span>, <span class="string">"No command"</span>);
      <span class="keyword">return</span>;
    }
    <span class="comment">// This command does not give the current index version of the master</span>
    <span class="comment">// It gives the current 'replicateable' index version</span>
   <span class="keyword">if</span> (command.equals(CMD_INDEX_VERSION)) {
      IndexCommit commitPoint = indexCommitPoint;  <span class="comment">// make a copy so it won't change</span>
      <span class="keyword">if</span> (commitPoint != <span class="keyword">null</span> && replicationEnabled.get()) {
        <span class="comment">//</span>
        <span class="comment">// There is a race condition here.  The commit point may be changed / deleted by the time</span>
        <span class="comment">// we get around to reserving it.  This is a very small window though, and should not result</span>
        <span class="comment">// in a catastrophic failure, but will result in the client getting an empty file list for</span>
        <span class="comment">// the CMD_GET_FILE_LIST command.</span>
        <span class="comment">//</span>
        core.getDeletionPolicy().setReserveDuration(commitPoint.getVersion(), reserveCommitDuration);
        rsp.add(CMD_INDEX_VERSION, commitPoint.getVersion());
        rsp.add(GENERATION, commitPoint.getGeneration());
      } <span class="keyword">else</span> {
        <span class="comment">// This happens when replication is not configured to happen after startup and no commit/optimize</span>
        <span class="comment">// has happened yet.</span>
        rsp.add(CMD_INDEX_VERSION, <span class="number">0</span>L);
        rsp.add(GENERATION, <span class="number">0</span>L);
      }
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equals(CMD_GET_FILE)) {
      getFileStream(solrParams, rsp);
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equals(CMD_GET_FILE_LIST)) {
      getFileList(solrParams, rsp);
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equalsIgnoreCase(CMD_BACKUP)) {
      doSnapShoot(<span class="keyword">new</span> ModifiableSolrParams(solrParams), rsp,req);
      rsp.add(STATUS, OK_STATUS);
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equalsIgnoreCase(CMD_FETCH_INDEX)) {
      String masterUrl = solrParams.get(MASTER_URL);
      <span class="keyword">if</span> (!isSlave && masterUrl == <span class="keyword">null</span>) {
        rsp.add(STATUS,ERR_STATUS);
        rsp.add(<span class="string">"message"</span>,<span class="string">"No slave configured or no 'masterUrl' Specified"</span>);
        <span class="keyword">return</span>;
      }
      <span class="keyword">final</span> SolrParams paramsCopy = <span class="keyword">new</span> ModifiableSolrParams(solrParams);
      <span class="keyword">new</span> Thread() {
        <span class="annotation">@Override</span>
        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span>() {
          doFetch(paramsCopy);<span class="javadoc">/** 进行关键的处理*/</span>
        }
      }.start();
      rsp.add(STATUS, OK_STATUS);
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equalsIgnoreCase(CMD_DISABLE_POLL)) {
      <span class="keyword">if</span> (snapPuller != <span class="keyword">null</span>){
        snapPuller.disablePoll();
        rsp.add(STATUS, OK_STATUS);
      } <span class="keyword">else</span> {
        rsp.add(STATUS, ERR_STATUS);
        rsp.add(<span class="string">"message"</span>,<span class="string">"No slave configured"</span>);
      }
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equalsIgnoreCase(CMD_ENABLE_POLL)) {
      <span class="keyword">if</span> (snapPuller != <span class="keyword">null</span>){
        snapPuller.enablePoll();
        rsp.add(STATUS, OK_STATUS);
      }<span class="keyword">else</span> {
        rsp.add(STATUS,ERR_STATUS);
        rsp.add(<span class="string">"message"</span>,<span class="string">"No slave configured"</span>);
      }
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equalsIgnoreCase(CMD_ABORT_FETCH)) {
      <span class="keyword">if</span> (snapPuller != <span class="keyword">null</span>){
        snapPuller.abortPull();
        rsp.add(STATUS, OK_STATUS);
      } <span class="keyword">else</span> {
        rsp.add(STATUS,ERR_STATUS);
        rsp.add(<span class="string">"message"</span>,<span class="string">"No slave configured"</span>);
      }
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equals(CMD_FILE_CHECKSUM)) {
      <span class="comment">// this command is not used by anyone</span>
      getFileChecksum(solrParams, rsp);
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equals(CMD_SHOW_COMMITS)) {
      rsp.add(CMD_SHOW_COMMITS, getCommits());
    } <span class="keyword">else</span> <span class="keyword">if</span> (command.equals(CMD_DETAILS)) {
      rsp.add(CMD_DETAILS, getReplicationDetails(solrParams.getBool(<span class="string">"slave"</span>,<span class="keyword">true</span>)));
      RequestHandlerUtils.addExperimentalFormatWarning(rsp);
    } <span class="keyword">else</span> <span class="keyword">if</span> (CMD_ENABLE_REPL.equalsIgnoreCase(command)) {
      replicationEnabled.set(<span class="keyword">true</span>);
      rsp.add(STATUS, OK_STATUS);
   } <span class="keyword">else</span> <span class="keyword">if</span> (CMD_DISABLE_REPL.equalsIgnoreCase(command)) {
     replicationEnabled.set(<span class="keyword">false</span>);
     rsp.add(STATUS, OK_STATUS);
   }
  }
</pre></td></tr></table></figure>

<hr>
<h1 id="7-solrj-solrcore-api-">7.solrj提供了控制solrcore容器的api包括范围配置信息等</h1>
<blockquote>
<p>SolrRequest 的子类</p>
</blockquote>
<p> 用于控制一个web应用中的coreContainer容器如查询,添加实例,添加文档等对应到的有SolrResponse</p>
<hr>
<h1 id="-">参考</h1>
<p><a href="http://blog.csdn.net/zyb243380456/article/details/7225768" target="_blank">solr 应用全面解析，简单的应用，多实例，分布式索引分发,如何在客户端配置注册多实例</a></p>
]]></content>
    <summary type="html"><![CDATA[<p>看Solr 的时候偶尔看到了一个博客，写的太和俺的胃口了,加到友情链接里面，嘿嘿</br>
<a href="http://blog.csdn.net/zyb243380456/article/details/7225768" target="_blank">zyb243380456的专栏</a></p>
]]></summary>
    
      <category term="solr" scheme="http://youfei.github.io/tags/solr/"/>
    
      <category term="solr" scheme="http://youfei.github.io/categories/solr/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[solr初读-2]]></title>
    <link href="http://youfei.github.io/2014/03/06/solr-g-2/"/>
    <id>http://youfei.github.io/2014/03/06/solr-g-2/</id>
    <published>2014-03-06T02:06:16.000Z</published>
    <updated>2014-03-06T06:58:03.000Z</updated>
    <content type="html"><![CDATA[<h1 id="-">配置应用索引结构</h1>
<p><strong>$CATALINA_HOME\webapps\solr\solr\collection1\conf\schema.xml</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
</pre></td><td class="code"><pre><span class="pi">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>

<span class="tag">&lt;<span class="title">schema</span> <span class="attribute">name</span>=<span class="value">"example"</span> <span class="attribute">version</span>=<span class="value">"1.5"</span>&gt;</span>

	<span class="comment">&lt;!--  
        有效的字段属性:   
        name:强制的给字段指定一个名字  
        type: 从之前部分定义的类型中选择一个字段类型  
        indexed:字段是否应该被索引被索引后可以查询和排序  
        stored: true表示这个字段的值需要被保存和检索  
        multiValued:在一个文档中一个字段存在多个值要被索引  
        //被解析出来的时候就像  
        //&lt;country&gt;  
        //   &lt;arr&gt;  
        //      &lt;str&gt;中国&lt;/str&gt;  
        //      &lt;str&gt;美国&lt;/str&gt;  
        //      &lt;str&gt;德国&lt;/str&gt;  
        //   &lt;/arr&gt;  
        //  &lt;/country&gt;  
        omitNorms: false  
        termVectors: [false]  
        termOffsets:   
        default:如果该字段没有被赋值指定一个默认的赋值  
    --&gt;</span> 
<span class="tag">&lt;<span class="title">fields</span>&gt;</span>
   
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"_version_"</span> <span class="attribute">type</span>=<span class="value">"long"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"_root_"</span> <span class="attribute">type</span>=<span class="value">"string"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"false"</span>/&gt;</span>

   <span class="comment">&lt;!-- Only remove the "id" field if you have a very good reason to. While not strictly
     required, it is highly recommended. A &lt;uniqueKey&gt; is present in almost all Solr 
     installations. See the &lt;uniqueKey&gt; declaration below where &lt;uniqueKey&gt; is set to "id".
   --&gt;</span>   
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"id"</span> <span class="attribute">type</span>=<span class="value">"string"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">required</span>=<span class="value">"true"</span> <span class="attribute">multiValued</span>=<span class="value">"false"</span> /&gt;</span> 
        
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"sku"</span> <span class="attribute">type</span>=<span class="value">"text_en_splitting_tight"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">omitNorms</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"name"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"manu"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">omitNorms</span>=<span class="value">"true"</span>/&gt;</span>

&gt;   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"cat"</span> <span class="attribute">type</span>=<span class="value">"string"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>
&gt;   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"features"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>
&gt;	<span class="comment">&lt;!-- multiValued="true" 指复合组件，表示该field的是有其他多个field组合而成，通过copyField实现--&gt;</span>
 
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"includes"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">termVectors</span>=<span class="value">"true"</span> <span class="attribute">termPositions</span>=<span class="value">"true"</span> <span class="attribute">termOffsets</span>=<span class="value">"true"</span> /&gt;</span>

   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"weight"</span> <span class="attribute">type</span>=<span class="value">"float"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"price"</span>  <span class="attribute">type</span>=<span class="value">"float"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"popularity"</span> <span class="attribute">type</span>=<span class="value">"int"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span> /&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"inStock"</span> <span class="attribute">type</span>=<span class="value">"boolean"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span> /&gt;</span>

   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"store"</span> <span class="attribute">type</span>=<span class="value">"location"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>

   <span class="comment">&lt;!-- Common metadata fields, named specifically to match up with
     SolrCell metadata when parsing rich documents such as Word, PDF.
     Some fields are multiValued only because Tika currently may return
     multiple values for them. Some metadata is parsed from the documents,
     but there are some which come from the client context:
       "content_type": From the HTTP headers of incoming stream
       "resourcename": From SolrCell request param resource.name
   --&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"title"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"subject"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"description"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"comments"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"author"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"keywords"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"category"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"resourcename"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"url"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"content_type"</span> <span class="attribute">type</span>=<span class="value">"string"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"last_modified"</span> <span class="attribute">type</span>=<span class="value">"date"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"links"</span> <span class="attribute">type</span>=<span class="value">"string"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>

   <span class="comment">&lt;!-- Main body of document extracted by SolrCell.
        NOTE: This field is not indexed by default, since it is also copied to "text"
        using copyField below. This is to save space. Use this field for returning and
        highlighting document content. Use the "text" field to search the content. --&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"content"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"false"</span> <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>
   

   <span class="comment">&lt;!-- catchall field, containing all other searchable text fields (implemented via copyField further on in this schema  --&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"text"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"false"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>

   <span class="comment">&lt;!-- catchall text field that indexes tokens both normally and in reverse for efficient leading wildcard queries. --&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"text_rev"</span> <span class="attribute">type</span>=<span class="value">"text_general_rev"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"false"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>

   <span class="comment">&lt;!-- non-tokenized version of manufacturer to make it easier to sort or group results by manufacturer.  copied from "manu" via copyField --&gt;</span>
   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"manu_exact"</span> <span class="attribute">type</span>=<span class="value">"string"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"false"</span>/&gt;</span>

   <span class="tag">&lt;<span class="title">field</span> <span class="attribute">name</span>=<span class="value">"payloads"</span> <span class="attribute">type</span>=<span class="value">"payloads"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>


   <span class="comment">&lt;!--
     Some fields such as popularity and manu_exact could be modified to
     leverage doc values:
     &lt;field name="popularity" type="int" indexed="true" stored="true" docValues="true" /&gt;
     &lt;field name="manu_exact" type="string" indexed="false" stored="false" docValues="true" /&gt;
     &lt;field name="cat" type="string" indexed="true" stored="true" docValues="true" multiValued="true"/&gt;


     Although it would make indexing slightly slower and the index bigger, it
     would also make the index faster to load, more memory-efficient and more
     NRT-friendly.
     --&gt;</span>

   <span class="comment">&lt;!-- Dynamic field definitions allow using convention over configuration
       for fields via the specification of patterns to match field names. 
       EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
       RESTRICTION: the glob-like pattern in the name attribute must have
       a "*" only at the start or the end.  --&gt;</span>
   
   <span class="comment">&lt;!--  
        动态字段定义通过*来定义   
        &lt;dynamicField name="*_ti" type="tint" indexed="true" stored="true"/&gt;  
    --&gt;</span>  
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_i"</span>  <span class="attribute">type</span>=<span class="value">"int"</span>    <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_is"</span> <span class="attribute">type</span>=<span class="value">"int"</span>    <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>  <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_s"</span>  <span class="attribute">type</span>=<span class="value">"string"</span>  <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span> /&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_ss"</span> <span class="attribute">type</span>=<span class="value">"string"</span>  <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_l"</span>  <span class="attribute">type</span>=<span class="value">"long"</span>   <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_ls"</span> <span class="attribute">type</span>=<span class="value">"long"</span>   <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>  <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_t"</span>  <span class="attribute">type</span>=<span class="value">"text_general"</span>    <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_txt"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span>   <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_en"</span>  <span class="attribute">type</span>=<span class="value">"text_en"</span>    <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_b"</span>  <span class="attribute">type</span>=<span class="value">"boolean"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_bs"</span> <span class="attribute">type</span>=<span class="value">"boolean"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>  <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_f"</span>  <span class="attribute">type</span>=<span class="value">"float"</span>  <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_fs"</span> <span class="attribute">type</span>=<span class="value">"float"</span>  <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>  <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_d"</span>  <span class="attribute">type</span>=<span class="value">"double"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_ds"</span> <span class="attribute">type</span>=<span class="value">"double"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>  <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>

   <span class="comment">&lt;!-- Type used to index the lat and lon components for the "location" FieldType --&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_coordinate"</span>  <span class="attribute">type</span>=<span class="value">"tdouble"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"false"</span> /&gt;</span>

   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_dt"</span>  <span class="attribute">type</span>=<span class="value">"date"</span>    <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_dts"</span> <span class="attribute">type</span>=<span class="value">"date"</span>    <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_p"</span>  <span class="attribute">type</span>=<span class="value">"location"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>

   <span class="comment">&lt;!-- some trie-coded dynamic fields for faster range queries --&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_ti"</span> <span class="attribute">type</span>=<span class="value">"tint"</span>    <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_tl"</span> <span class="attribute">type</span>=<span class="value">"tlong"</span>   <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_tf"</span> <span class="attribute">type</span>=<span class="value">"tfloat"</span>  <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_td"</span> <span class="attribute">type</span>=<span class="value">"tdouble"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_tdt"</span> <span class="attribute">type</span>=<span class="value">"tdate"</span>  <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>

   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_pi"</span>  <span class="attribute">type</span>=<span class="value">"pint"</span>    <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"*_c"</span>   <span class="attribute">type</span>=<span class="value">"currency"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span>  <span class="attribute">stored</span>=<span class="value">"true"</span>/&gt;</span>

   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"ignored_*"</span> <span class="attribute">type</span>=<span class="value">"ignored"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"attr_*"</span> <span class="attribute">type</span>=<span class="value">"text_general"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">stored</span>=<span class="value">"true"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span>/&gt;</span>

   <span class="tag">&lt;<span class="title">dynamicField</span> <span class="attribute">name</span>=<span class="value">"random_*"</span> <span class="attribute">type</span>=<span class="value">"random"</span> /&gt;</span>

   <span class="comment">&lt;!-- uncomment the following to ignore any fields that don't already match an existing 
        field name or dynamic field, rather than reporting them as an error. 
        alternately, change the type="ignored" to some other type e.g. "text" if you want 
        unknown fields indexed and/or stored by default --&gt;</span> 
   <span class="comment">&lt;!--dynamicField name="*" type="ignored" multiValued="true" /--&gt;</span>
   
 <span class="tag">&lt;/<span class="title">fields</span>&gt;</span>


 <span class="comment">&lt;!-- Field to use to determine and enforce document uniqueness. 
      Unless this field is marked with required="false", it will be a required field
   --&gt;</span>

&gt; <span class="tag">&lt;<span class="title">uniqueKey</span>&gt;</span>id<span class="tag">&lt;/<span class="title">uniqueKey</span>&gt;</span>
&gt; <span class="comment">&lt;!--可以看成是table的ID --&gt;</span>

 <span class="comment">&lt;!-- DEPRECATED: The defaultSearchField is consulted by various query parsers when
  parsing a query string that isn't explicit about the field.  Machine (non-user)
  generated queries are best made explicit, or they can use the "df" request parameter
  which takes precedence over this.
  Note: Un-commenting defaultSearchField will be insufficient if your request handler
  in solrconfig.xml defines "df", which takes precedence. That would need to be removed.
 &lt;defaultSearchField&gt;text&lt;/defaultSearchField&gt; --&gt;</span>

 <span class="comment">&lt;!-- DEPRECATED: The defaultOperator (AND|OR) is consulted by various query parsers
  when parsing a query string to determine if a clause of the query should be marked as
  required or optional, assuming the clause isn't already marked by some operator.
  The default is OR, which is generally assumed so it is not a good idea to change it
  globally here.  The "q.op" request parameter takes precedence over this.
 &lt;solrQueryParser defaultOperator="OR"/&gt; --&gt;</span>
 <span class="comment">&lt;!--  
        defaultOperator="AND|OR"   
        为查询解析器指定默认的查询单元关联符号  
        系统默认：&lt;solrQueryParser defaultOperator="OR"/&gt; 最好别改！
 --&gt;</span>

  <span class="comment">&lt;!-- copyField commands copy one field to another at the time a document
        is added to the index.  It's used either to index the same field differently,
        or to add multiple fields to the same field for easier/faster searching.  --&gt;</span>
	<span class="comment">&lt;!--  
        复制字段命令在文档被添加到索引的时,复制一个字段到另外一个字段。   
        索引同一个字段的不同方式,添加多个字段到同一个字段为了快速简单的查询  
        &lt;copyField source="cat" dest="text"/&gt;  
          
        在添加文档的时候将cat这个字段的文本和text这个目标字段的文本索引到一起   
        &lt;copyField source="*_t" dest="text" maxChars="3000"/&gt;  
    --&gt;</span>

   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"cat"</span> <span class="attribute">dest</span>=<span class="value">"text"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"name"</span> <span class="attribute">dest</span>=<span class="value">"text"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"manu"</span> <span class="attribute">dest</span>=<span class="value">"text"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"features"</span> <span class="attribute">dest</span>=<span class="value">"text"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"includes"</span> <span class="attribute">dest</span>=<span class="value">"text"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"manu"</span> <span class="attribute">dest</span>=<span class="value">"manu_exact"</span>/&gt;</span>

   <span class="comment">&lt;!-- Copy the price into a currency enabled field (default USD) --&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"price"</span> <span class="attribute">dest</span>=<span class="value">"price_c"</span>/&gt;</span>

   <span class="comment">&lt;!-- Text fields from SolrCell to search by default in our catch-all field --&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"title"</span> <span class="attribute">dest</span>=<span class="value">"text"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"author"</span> <span class="attribute">dest</span>=<span class="value">"text"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"description"</span> <span class="attribute">dest</span>=<span class="value">"text"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"keywords"</span> <span class="attribute">dest</span>=<span class="value">"text"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"content"</span> <span class="attribute">dest</span>=<span class="value">"text"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"content_type"</span> <span class="attribute">dest</span>=<span class="value">"text"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"resourcename"</span> <span class="attribute">dest</span>=<span class="value">"text"</span>/&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"url"</span> <span class="attribute">dest</span>=<span class="value">"text"</span>/&gt;</span>

   <span class="comment">&lt;!-- Create a string version of author for faceting --&gt;</span>
   <span class="tag">&lt;<span class="title">copyField</span> <span class="attribute">source</span>=<span class="value">"author"</span> <span class="attribute">dest</span>=<span class="value">"author_s"</span>/&gt;</span>
	
   <span class="comment">&lt;!-- Above, multiple source fields are copied to the [text] field. 
	  Another way to map multiple source fields to the same 
	  destination field is to use the dynamic field syntax. 
	  copyField also supports a maxChars to copy setting.  --&gt;</span>
	   
   <span class="comment">&lt;!-- &lt;copyField source="*_t" dest="text" maxChars="3000"/&gt; --&gt;</span>

   <span class="comment">&lt;!-- copy name to alphaNameSort, a field designed for sorting by name --&gt;</span>
   <span class="comment">&lt;!-- &lt;copyField source="name" dest="alphaNameSort"/&gt; --&gt;</span>
 
  <span class="tag">&lt;<span class="title">types</span>&gt;</span>
    <span class="comment">&lt;!-- field type definitions. The "name" attribute is
       just a label to be used by field definitions.  The "class"
       attribute and any other attributes determine the real
       behavior of the fieldType.
         Class names starting with "solr" refer to java classes in a
       standard package such as org.apache.solr.analysis
    --&gt;</span>

    <span class="comment">&lt;!-- The StrField type is not analyzed, but indexed/stored verbatim.
       It supports doc values but in that case the field needs to be
       single-valued and either required or have a default value.
      --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"string"</span> <span class="attribute">class</span>=<span class="value">"solr.StrField"</span> <span class="attribute">sortMissingLast</span>=<span class="value">"true"</span> /&gt;</span>

    <span class="comment">&lt;!-- boolean type: "true" or "false" --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"boolean"</span> <span class="attribute">class</span>=<span class="value">"solr.BoolField"</span> <span class="attribute">sortMissingLast</span>=<span class="value">"true"</span>/&gt;</span>

    <span class="comment">&lt;!-- sortMissingLast and sortMissingFirst attributes are optional attributes are
         currently supported on types that are sorted internally as strings
         and on numeric types.
	     This includes "string","boolean", and, as of 3.5 (and 4.x),
	     int, float, long, date, double, including the "Trie" variants.
       - If sortMissingLast="true", then a sort on this field will cause documents
         without the field to come after documents with the field,
         regardless of the requested sort order (asc or desc).
       - If sortMissingFirst="true", then a sort on this field will cause documents
         without the field to come before documents with the field,
         regardless of the requested sort order.
       - If sortMissingLast="false" and sortMissingFirst="false" (the default),
         then default lucene sorting will be used which places docs without the
         field first in an ascending sort and last in a descending sort.
    --&gt;</span>    

    <span class="comment">&lt;!--
      Default numeric field types. For faster range queries, consider the tint/tfloat/tlong/tdouble types.

      These fields support doc values, but they require the field to be
      single-valued and either be required or have a default value.
    --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"int"</span> <span class="attribute">class</span>=<span class="value">"solr.TrieIntField"</span> <span class="attribute">precisionStep</span>=<span class="value">"0"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"0"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"float"</span> <span class="attribute">class</span>=<span class="value">"solr.TrieFloatField"</span> <span class="attribute">precisionStep</span>=<span class="value">"0"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"0"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"long"</span> <span class="attribute">class</span>=<span class="value">"solr.TrieLongField"</span> <span class="attribute">precisionStep</span>=<span class="value">"0"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"0"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"double"</span> <span class="attribute">class</span>=<span class="value">"solr.TrieDoubleField"</span> <span class="attribute">precisionStep</span>=<span class="value">"0"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"0"</span>/&gt;</span>

    <span class="comment">&lt;!--
     Numeric field types that index each value at various levels of precision
     to accelerate range queries when the number of values between the range
     endpoints is large. See the javadoc for NumericRangeQuery for internal
     implementation details.

     Smaller precisionStep values (specified in bits) will lead to more tokens
     indexed per value, slightly larger index size, and faster range queries.
     A precisionStep of 0 disables indexing at different precision levels.
    --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"tint"</span> <span class="attribute">class</span>=<span class="value">"solr.TrieIntField"</span> <span class="attribute">precisionStep</span>=<span class="value">"8"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"0"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"tfloat"</span> <span class="attribute">class</span>=<span class="value">"solr.TrieFloatField"</span> <span class="attribute">precisionStep</span>=<span class="value">"8"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"0"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"tlong"</span> <span class="attribute">class</span>=<span class="value">"solr.TrieLongField"</span> <span class="attribute">precisionStep</span>=<span class="value">"8"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"0"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"tdouble"</span> <span class="attribute">class</span>=<span class="value">"solr.TrieDoubleField"</span> <span class="attribute">precisionStep</span>=<span class="value">"8"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"0"</span>/&gt;</span>

    <span class="comment">&lt;!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
         is a more restricted form of the canonical representation of dateTime
         http://www.w3.org/TR/xmlschema-2/#dateTime    
         The trailing "Z" designates UTC time and is mandatory.
         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
         All other components are mandatory.

         Expressions can also be used to denote calculations that should be
         performed relative to "NOW" to determine the value, ie...

               NOW/HOUR
                  ... Round to the start of the current hour
               NOW-1DAY
                  ... Exactly 1 day prior to now
               NOW/DAY+6MONTHS+3DAYS
                  ... 6 months and 3 days in the future from the start of
                      the current day
                      
         Consult the DateField javadocs for more information.

         Note: For faster range queries, consider the tdate type
      --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"date"</span> <span class="attribute">class</span>=<span class="value">"solr.TrieDateField"</span> <span class="attribute">precisionStep</span>=<span class="value">"0"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"0"</span>/&gt;</span>

    <span class="comment">&lt;!-- A Trie based date field for faster date range queries and date faceting. --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"tdate"</span> <span class="attribute">class</span>=<span class="value">"solr.TrieDateField"</span> <span class="attribute">precisionStep</span>=<span class="value">"6"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"0"</span>/&gt;</span>


    <span class="comment">&lt;!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldtype</span> <span class="attribute">name</span>=<span class="value">"binary"</span> <span class="attribute">class</span>=<span class="value">"solr.BinaryField"</span>/&gt;</span>

    <span class="comment">&lt;!--
      Note:
      These should only be used for compatibility with existing indexes (created with lucene or older Solr versions).
      Use Trie based fields instead. As of Solr 3.5 and 4.x, Trie based fields support sortMissingFirst/Last
      
      Plain numeric field types that store and index the text
      value verbatim (and hence don't correctly support range queries, since the
      lexicographic ordering isn't equal to the numeric ordering)
    --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"pint"</span> <span class="attribute">class</span>=<span class="value">"solr.IntField"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"plong"</span> <span class="attribute">class</span>=<span class="value">"solr.LongField"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"pfloat"</span> <span class="attribute">class</span>=<span class="value">"solr.FloatField"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"pdouble"</span> <span class="attribute">class</span>=<span class="value">"solr.DoubleField"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"pdate"</span> <span class="attribute">class</span>=<span class="value">"solr.DateField"</span> <span class="attribute">sortMissingLast</span>=<span class="value">"true"</span>/&gt;</span>

    <span class="comment">&lt;!-- The "RandomSortField" is not used to store or search any
         data.  You can declare fields of this type it in your schema
         to generate pseudo-random orderings of your docs for sorting 
         or function purposes.  The ordering is generated based on the field
         name and the version of the index. As long as the index version
         remains unchanged, and the same field name is reused,
         the ordering of the docs will be consistent.  
         If you want different psuedo-random orderings of documents,
         for the same version of the index, use a dynamicField and
         change the field name in the request.
     --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"random"</span> <span class="attribute">class</span>=<span class="value">"solr.RandomSortField"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> /&gt;</span>

    <span class="comment">&lt;!-- solr.TextField allows the specification of custom text analyzers
         specified as a tokenizer and a list of token filters. Different
         analyzers may be specified for indexing and querying.

         The optional positionIncrementGap puts space between multiple fields of
         this type on the same document, with the purpose of preventing false phrase
         matching across fields.

         For more info on customizing your analyzer chain, please see
         http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
     --&gt;</span>

    <span class="comment">&lt;!-- One can also specify an existing Analyzer class that has a
         default constructor via the class attribute on the analyzer element.
         Example:
    &lt;fieldType name="text_greek" class="solr.TextField"&gt;
      &lt;analyzer class="org.apache.lucene.analysis.el.GreekAnalyzer"/&gt;
    &lt;/fieldType&gt;
    --&gt;</span>

    <span class="comment">&lt;!-- A text field that only splits on whitespace for exact matching of words --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_ws"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.WhitespaceTokenizerFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>

    <span class="comment">&lt;!-- A general text field that has reasonable, generic
         cross-language defaults: it tokenizes with StandardTokenizer,
	 removes stop words from case-insensitive "stopwords.txt"
	 (empty by default), and down cases.  At query time only, it
	 also applies synonyms. --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_general"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span> <span class="attribute">type</span>=<span class="value">"index"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"stopwords.txt"</span> /&gt;</span>
        <span class="comment">&lt;!-- in this example, we will only use synonyms at query time
        &lt;filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/&gt;
        --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span> <span class="attribute">type</span>=<span class="value">"query"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"stopwords.txt"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SynonymFilterFactory"</span> <span class="attribute">synonyms</span>=<span class="value">"synonyms.txt"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">expand</span>=<span class="value">"true"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>

    <span class="comment">&lt;!-- A text field with defaults appropriate for English: it
         tokenizes with StandardTokenizer, removes English stop words
         (lang/stopwords_en.txt), down cases, protects words from protwords.txt, and
         finally applies Porter's stemming.  The query time analyzer
         also applies synonyms from synonyms.txt. --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_en"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span> <span class="attribute">type</span>=<span class="value">"index"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- in this example, we will only use synonyms at query time
        &lt;filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/&gt;
        --&gt;</span>
        <span class="comment">&lt;!-- Case insensitive stop word removal.
        --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span>
                <span class="attribute">ignoreCase</span>=<span class="value">"true"</span>
                <span class="attribute">words</span>=<span class="value">"lang/stopwords_en.txt"</span>
                /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
	<span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.EnglishPossessiveFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.KeywordMarkerFilterFactory"</span> <span class="attribute">protected</span>=<span class="value">"protwords.txt"</span>/&gt;</span>
	<span class="comment">&lt;!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
        &lt;filter class="solr.EnglishMinimalStemFilterFactory"/&gt;
	--&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.PorterStemFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span> <span class="attribute">type</span>=<span class="value">"query"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SynonymFilterFactory"</span> <span class="attribute">synonyms</span>=<span class="value">"synonyms.txt"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">expand</span>=<span class="value">"true"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span>
                <span class="attribute">ignoreCase</span>=<span class="value">"true"</span>
                <span class="attribute">words</span>=<span class="value">"lang/stopwords_en.txt"</span>
                /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
	<span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.EnglishPossessiveFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.KeywordMarkerFilterFactory"</span> <span class="attribute">protected</span>=<span class="value">"protwords.txt"</span>/&gt;</span>
	<span class="comment">&lt;!-- Optionally you may want to use this less aggressive stemmer instead of PorterStemFilterFactory:
        &lt;filter class="solr.EnglishMinimalStemFilterFactory"/&gt;
	--&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.PorterStemFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>

    <span class="comment">&lt;!-- A text field with defaults appropriate for English, plus
	 aggressive word-splitting and autophrase features enabled.
	 This field is just like text_en, except it adds
	 WordDelimiterFilter to enable splitting and matching of
	 words on case-change, alpha numeric boundaries, and
	 non-alphanumeric chars.  This means certain compound word
	 cases will work, for example query "wi fi" will match
	 document "WiFi" or "wi-fi".
        --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_en_splitting"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span> <span class="attribute">autoGeneratePhraseQueries</span>=<span class="value">"true"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span> <span class="attribute">type</span>=<span class="value">"index"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.WhitespaceTokenizerFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- in this example, we will only use synonyms at query time
        &lt;filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/&gt;
        --&gt;</span>
        <span class="comment">&lt;!-- Case insensitive stop word removal.
        --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span>
                <span class="attribute">ignoreCase</span>=<span class="value">"true"</span>
                <span class="attribute">words</span>=<span class="value">"lang/stopwords_en.txt"</span>
                /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.WordDelimiterFilterFactory"</span> <span class="attribute">generateWordParts</span>=<span class="value">"1"</span> <span class="attribute">generateNumberParts</span>=<span class="value">"1"</span> <span class="attribute">catenateWords</span>=<span class="value">"1"</span> <span class="attribute">catenateNumbers</span>=<span class="value">"1"</span> <span class="attribute">catenateAll</span>=<span class="value">"0"</span> <span class="attribute">splitOnCaseChange</span>=<span class="value">"1"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.KeywordMarkerFilterFactory"</span> <span class="attribute">protected</span>=<span class="value">"protwords.txt"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.PorterStemFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span> <span class="attribute">type</span>=<span class="value">"query"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.WhitespaceTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SynonymFilterFactory"</span> <span class="attribute">synonyms</span>=<span class="value">"synonyms.txt"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">expand</span>=<span class="value">"true"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span>
                <span class="attribute">ignoreCase</span>=<span class="value">"true"</span>
                <span class="attribute">words</span>=<span class="value">"lang/stopwords_en.txt"</span>
                /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.WordDelimiterFilterFactory"</span> <span class="attribute">generateWordParts</span>=<span class="value">"1"</span> <span class="attribute">generateNumberParts</span>=<span class="value">"1"</span> <span class="attribute">catenateWords</span>=<span class="value">"0"</span> <span class="attribute">catenateNumbers</span>=<span class="value">"0"</span> <span class="attribute">catenateAll</span>=<span class="value">"0"</span> <span class="attribute">splitOnCaseChange</span>=<span class="value">"1"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.KeywordMarkerFilterFactory"</span> <span class="attribute">protected</span>=<span class="value">"protwords.txt"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.PorterStemFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>

    <span class="comment">&lt;!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
         but may be good for SKUs.  Can insert dashes in the wrong place and still match. --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_en_splitting_tight"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span> <span class="attribute">autoGeneratePhraseQueries</span>=<span class="value">"true"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.WhitespaceTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SynonymFilterFactory"</span> <span class="attribute">synonyms</span>=<span class="value">"synonyms.txt"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">expand</span>=<span class="value">"false"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_en.txt"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.WordDelimiterFilterFactory"</span> <span class="attribute">generateWordParts</span>=<span class="value">"0"</span> <span class="attribute">generateNumberParts</span>=<span class="value">"0"</span> <span class="attribute">catenateWords</span>=<span class="value">"1"</span> <span class="attribute">catenateNumbers</span>=<span class="value">"1"</span> <span class="attribute">catenateAll</span>=<span class="value">"0"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.KeywordMarkerFilterFactory"</span> <span class="attribute">protected</span>=<span class="value">"protwords.txt"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.EnglishMinimalStemFilterFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- this filter can remove any duplicate tokens that appear at the same position - sometimes
             possible with WordDelimiterFilter in conjuncton with stemming. --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.RemoveDuplicatesTokenFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>

    <span class="comment">&lt;!-- Just like text_general except it reverses the characters of
	 each token, to enable more efficient leading wildcard queries. --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_general_rev"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span> <span class="attribute">type</span>=<span class="value">"index"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"stopwords.txt"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.ReversedWildcardFilterFactory"</span> <span class="attribute">withOriginal</span>=<span class="value">"true"</span>
           <span class="attribute">maxPosAsterisk</span>=<span class="value">"3"</span> <span class="attribute">maxPosQuestion</span>=<span class="value">"2"</span> <span class="attribute">maxFractionAsterisk</span>=<span class="value">"0.33"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span> <span class="attribute">type</span>=<span class="value">"query"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SynonymFilterFactory"</span> <span class="attribute">synonyms</span>=<span class="value">"synonyms.txt"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">expand</span>=<span class="value">"true"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"stopwords.txt"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>

    <span class="comment">&lt;!-- charFilter + WhitespaceTokenizer  --&gt;</span>
    <span class="comment">&lt;!--
    &lt;fieldType name="text_char_norm" class="solr.TextField" positionIncrementGap="100" &gt;
      &lt;analyzer&gt;
        &lt;charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/&gt;
        &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
      &lt;/analyzer&gt;
    &lt;/fieldType&gt;
    --&gt;</span>

    <span class="comment">&lt;!-- This is an example of using the KeywordTokenizer along
         With various TokenFilterFactories to produce a sortable field
         that does not include some properties of the source text
      --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"alphaOnlySort"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">sortMissingLast</span>=<span class="value">"true"</span> <span class="attribute">omitNorms</span>=<span class="value">"true"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span>
        <span class="comment">&lt;!-- KeywordTokenizer does no actual tokenizing, so the entire
             input string is preserved as a single token
          --&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.KeywordTokenizerFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- The LowerCase TokenFilter does what you expect, which can be
             when you want your sorting to be case insensitive
          --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span> /&gt;</span>
        <span class="comment">&lt;!-- The TrimFilter removes any leading or trailing whitespace --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.TrimFilterFactory"</span> /&gt;</span>
        <span class="comment">&lt;!-- The PatternReplaceFilter gives you the flexibility to use
             Java Regular expression to replace any sequence of characters
             matching a pattern with an arbitrary replacement string, 
             which may include back references to portions of the original
             string matched by the pattern.
             
             See the Java Regular Expression documentation for more
             information on pattern and replacement string syntax.
             
             http://java.sun.com/j2se/1.6.0/docs/api/java/util/regex/package-summary.html
          --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.PatternReplaceFilterFactory"</span>
                <span class="attribute">pattern</span>=<span class="value">"([^a-z])"</span> <span class="attribute">replacement</span>=<span class="value">""</span> <span class="attribute">replace</span>=<span class="value">"all"</span>
        /&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="tag">&lt;<span class="title">fieldtype</span> <span class="attribute">name</span>=<span class="value">"phonetic"</span> <span class="attribute">stored</span>=<span class="value">"false"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> &gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.DoubleMetaphoneFilterFactory"</span> <span class="attribute">inject</span>=<span class="value">"false"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldtype</span>&gt;</span>

    <span class="tag">&lt;<span class="title">fieldtype</span> <span class="attribute">name</span>=<span class="value">"payloads"</span> <span class="attribute">stored</span>=<span class="value">"false"</span> <span class="attribute">indexed</span>=<span class="value">"true"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> &gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.WhitespaceTokenizerFactory"</span>/&gt;</span>
        <span class="comment">&lt;!--
        The DelimitedPayloadTokenFilter can put payloads on tokens... for example,
        a token of "foo|1.4"  would be indexed as "foo" with a payload of 1.4f
        Attributes of the DelimitedPayloadTokenFilterFactory : 
         "delimiter" - a one character delimiter. Default is | (pipe)
	 "encoder" - how to encode the following value into a playload
	    float -&gt; org.apache.lucene.analysis.payloads.FloatEncoder,
	    integer -&gt; o.a.l.a.p.IntegerEncoder
	    identity -&gt; o.a.l.a.p.IdentityEncoder
            Fully Qualified class name implementing PayloadEncoder, Encoder must have a no arg constructor.
         --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.DelimitedPayloadTokenFilterFactory"</span> <span class="attribute">encoder</span>=<span class="value">"float"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldtype</span>&gt;</span>

    <span class="comment">&lt;!-- lowercases the entire field value, keeping it as a single token.  --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"lowercase"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.KeywordTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span> /&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>

    <span class="comment">&lt;!-- 
      Example of using PathHierarchyTokenizerFactory at index time, so
      queries for paths match documents at that path, or in descendent paths
    --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"descendent_path"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span> <span class="attribute">type</span>=<span class="value">"index"</span>&gt;</span>
	<span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.PathHierarchyTokenizerFactory"</span> <span class="attribute">delimiter</span>=<span class="value">"/"</span> /&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span> <span class="attribute">type</span>=<span class="value">"query"</span>&gt;</span>
	<span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.KeywordTokenizerFactory"</span> /&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    <span class="comment">&lt;!-- 
      Example of using PathHierarchyTokenizerFactory at query time, so
      queries for paths match documents at that path, or in ancestor paths
    --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"ancestor_path"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span> <span class="attribute">type</span>=<span class="value">"index"</span>&gt;</span>
	<span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.KeywordTokenizerFactory"</span> /&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span> <span class="attribute">type</span>=<span class="value">"query"</span>&gt;</span>
	<span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.PathHierarchyTokenizerFactory"</span> <span class="attribute">delimiter</span>=<span class="value">"/"</span> /&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>

    <span class="comment">&lt;!-- since fields of this type are by default not stored or indexed,
         any data added to them will be ignored outright.  --&gt;</span> 
    <span class="tag">&lt;<span class="title">fieldtype</span> <span class="attribute">name</span>=<span class="value">"ignored"</span> <span class="attribute">stored</span>=<span class="value">"false"</span> <span class="attribute">indexed</span>=<span class="value">"false"</span> <span class="attribute">multiValued</span>=<span class="value">"true"</span> <span class="attribute">class</span>=<span class="value">"solr.StrField"</span> /&gt;</span>

    <span class="comment">&lt;!-- This point type indexes the coordinates as separate fields (subFields)
      If subFieldType is defined, it references a type, and a dynamic field
      definition is created matching *___&lt;typename&gt;.  Alternately, if 
      subFieldSuffix is defined, that is used to create the subFields.
      Example: if subFieldType="double", then the coordinates would be
        indexed in fields myloc_0___double,myloc_1___double.
      Example: if subFieldSuffix="_d" then the coordinates would be indexed
        in fields myloc_0_d,myloc_1_d
      The subFields are an implementation detail of the fieldType, and end
      users normally should not need to know about them.
     --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"point"</span> <span class="attribute">class</span>=<span class="value">"solr.PointType"</span> <span class="attribute">dimension</span>=<span class="value">"2"</span> <span class="attribute">subFieldSuffix</span>=<span class="value">"_d"</span>/&gt;</span>

    <span class="comment">&lt;!-- A specialized field for geospatial search. If indexed, this fieldType must not be multivalued. --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"location"</span> <span class="attribute">class</span>=<span class="value">"solr.LatLonType"</span> <span class="attribute">subFieldSuffix</span>=<span class="value">"_coordinate"</span>/&gt;</span>

    <span class="comment">&lt;!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
      For more information about this and other Spatial fields new to Solr 4, see:
      http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
    --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"location_rpt"</span> <span class="attribute">class</span>=<span class="value">"solr.SpatialRecursivePrefixTreeFieldType"</span>
        <span class="attribute">geo</span>=<span class="value">"true"</span> <span class="attribute">distErrPct</span>=<span class="value">"0.025"</span> <span class="attribute">maxDistErr</span>=<span class="value">"0.000009"</span> <span class="attribute">units</span>=<span class="value">"degrees"</span> /&gt;</span>

   <span class="comment">&lt;!-- Money/currency field type. See http://wiki.apache.org/solr/MoneyFieldType
        Parameters:
          defaultCurrency: Specifies the default currency if none specified. Defaults to "USD"
          precisionStep:   Specifies the precisionStep for the TrieLong field used for the amount
          providerClass:   Lets you plug in other exchange provider backend:
                           solr.FileExchangeRateProvider is the default and takes one parameter:
                             currencyConfig: name of an xml file holding exchange rates
                           solr.OpenExchangeRatesOrgProvider uses rates from openexchangerates.org:
                             ratesFileLocation: URL or path to rates JSON file (default latest.json on the web)
                             refreshInterval: Number of minutes between each rates fetch (default: 1440, min: 60)
   --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"currency"</span> <span class="attribute">class</span>=<span class="value">"solr.CurrencyField"</span> <span class="attribute">precisionStep</span>=<span class="value">"8"</span> <span class="attribute">defaultCurrency</span>=<span class="value">"USD"</span> <span class="attribute">currencyConfig</span>=<span class="value">"currency.xml"</span> /&gt;</span>
             


   <span class="comment">&lt;!-- some examples for different languages (generally ordered by ISO code) --&gt;</span>

    <span class="comment">&lt;!-- Arabic --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_ar"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- for any non-arabic --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_ar.txt"</span> /&gt;</span>
        <span class="comment">&lt;!-- normalizes ﻯ to ﻱ, etc --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.ArabicNormalizationFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.ArabicStemFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>

    <span class="comment">&lt;!-- Bulgarian --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_bg"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span> 
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_bg.txt"</span> /&gt;</span> 
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.BulgarianStemFilterFactory"</span>/&gt;</span>       
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Catalan --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_ca"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- removes l', etc --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.ElisionFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">articles</span>=<span class="value">"lang/contractions_ca.txt"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_ca.txt"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SnowballPorterFilterFactory"</span> <span class="attribute">language</span>=<span class="value">"Catalan"</span>/&gt;</span>       
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- CJK bigram (see text_ja for a Japanese configuration using morphological analysis) --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_cjk"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- normalize width before bigram, as e.g. half-width dakuten combine  --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.CJKWidthFilterFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- for any non-CJK --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.CJKBigramFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>

    <span class="comment">&lt;!-- Kurdish --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_ckb"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SoraniNormalizationFilterFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- for any latin text --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_ckb.txt"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SoraniStemFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>

    <span class="comment">&lt;!-- Czech --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_cz"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_cz.txt"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.CzechStemFilterFactory"</span>/&gt;</span>       
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Danish --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_da"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_da.txt"</span> <span class="attribute">format</span>=<span class="value">"snowball"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SnowballPorterFilterFactory"</span> <span class="attribute">language</span>=<span class="value">"Danish"</span>/&gt;</span>       
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- German --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_de"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_de.txt"</span> <span class="attribute">format</span>=<span class="value">"snowball"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.GermanNormalizationFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.GermanLightStemFilterFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- less aggressive: &lt;filter class="solr.GermanMinimalStemFilterFactory"/&gt; --&gt;</span>
        <span class="comment">&lt;!-- more aggressive: &lt;filter class="solr.SnowballPorterFilterFactory" language="German2"/&gt; --&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Greek --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_el"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- greek specific lowercase for sigma --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.GreekLowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"false"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_el.txt"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.GreekStemFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Spanish --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_es"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_es.txt"</span> <span class="attribute">format</span>=<span class="value">"snowball"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SpanishLightStemFilterFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- more aggressive: &lt;filter class="solr.SnowballPorterFilterFactory" language="Spanish"/&gt; --&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Basque --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_eu"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_eu.txt"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SnowballPorterFilterFactory"</span> <span class="attribute">language</span>=<span class="value">"Basque"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Persian --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_fa"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span>
        <span class="comment">&lt;!-- for ZWNJ --&gt;</span>
        <span class="tag">&lt;<span class="title">charFilter</span> <span class="attribute">class</span>=<span class="value">"solr.PersianCharFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.ArabicNormalizationFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.PersianNormalizationFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_fa.txt"</span> /&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Finnish --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_fi"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_fi.txt"</span> <span class="attribute">format</span>=<span class="value">"snowball"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SnowballPorterFilterFactory"</span> <span class="attribute">language</span>=<span class="value">"Finnish"</span>/&gt;</span>
        <span class="comment">&lt;!-- less aggressive: &lt;filter class="solr.FinnishLightStemFilterFactory"/&gt; --&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- French --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_fr"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- removes l', etc --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.ElisionFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">articles</span>=<span class="value">"lang/contractions_fr.txt"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_fr.txt"</span> <span class="attribute">format</span>=<span class="value">"snowball"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.FrenchLightStemFilterFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- less aggressive: &lt;filter class="solr.FrenchMinimalStemFilterFactory"/&gt; --&gt;</span>
        <span class="comment">&lt;!-- more aggressive: &lt;filter class="solr.SnowballPorterFilterFactory" language="French"/&gt; --&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Irish --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_ga"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- removes d', etc --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.ElisionFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">articles</span>=<span class="value">"lang/contractions_ga.txt"</span>/&gt;</span>
        <span class="comment">&lt;!-- removes n-, etc. position increments is intentionally false! --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/hyphenations_ga.txt"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.IrishLowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_ga.txt"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SnowballPorterFilterFactory"</span> <span class="attribute">language</span>=<span class="value">"Irish"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Galician --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_gl"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_gl.txt"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.GalicianStemFilterFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- less aggressive: &lt;filter class="solr.GalicianMinimalStemFilterFactory"/&gt; --&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Hindi --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_hi"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- normalizes unicode representation --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.IndicNormalizationFilterFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- normalizes variation in spelling --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.HindiNormalizationFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_hi.txt"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.HindiStemFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Hungarian --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_hu"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_hu.txt"</span> <span class="attribute">format</span>=<span class="value">"snowball"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SnowballPorterFilterFactory"</span> <span class="attribute">language</span>=<span class="value">"Hungarian"</span>/&gt;</span>
        <span class="comment">&lt;!-- less aggressive: &lt;filter class="solr.HungarianLightStemFilterFactory"/&gt; --&gt;</span>   
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Armenian --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_hy"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_hy.txt"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SnowballPorterFilterFactory"</span> <span class="attribute">language</span>=<span class="value">"Armenian"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Indonesian --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_id"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_id.txt"</span> /&gt;</span>
        <span class="comment">&lt;!-- for a less aggressive approach (only inflectional suffixes), set stemDerivational to false --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.IndonesianStemFilterFactory"</span> <span class="attribute">stemDerivational</span>=<span class="value">"true"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Italian --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_it"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- removes l', etc --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.ElisionFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">articles</span>=<span class="value">"lang/contractions_it.txt"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_it.txt"</span> <span class="attribute">format</span>=<span class="value">"snowball"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.ItalianLightStemFilterFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- more aggressive: &lt;filter class="solr.SnowballPorterFilterFactory" language="Italian"/&gt; --&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Japanese using morphological analysis (see text_cjk for a configuration using bigramming)

         NOTE: If you want to optimize search for precision, use default operator AND in your query
         parser config with &lt;solrQueryParser defaultOperator="AND"/&gt; further down in this file.  Use 
         OR if you would like to optimize for recall (default).
    --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_ja"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span> <span class="attribute">autoGeneratePhraseQueries</span>=<span class="value">"false"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span>
      <span class="comment">&lt;!-- Kuromoji Japanese morphological analyzer/tokenizer (JapaneseTokenizer)

           Kuromoji has a search mode (default) that does segmentation useful for search.  A heuristic
           is used to segment compounds into its parts and the compound itself is kept as synonym.

           Valid values for attribute mode are:
              normal: regular segmentation
              search: segmentation useful for search with synonyms compounds (default)
            extended: same as search mode, but unigrams unknown words (experimental)

           For some applications it might be good to use search mode for indexing and normal mode for
           queries to reduce recall and prevent parts of compounds from being matched and highlighted.
           Use &lt;analyzer type="index"&gt; and &lt;analyzer type="query"&gt; for this and mode normal in query.

           Kuromoji also has a convenient user dictionary feature that allows overriding the statistical
           model with your own entries for segmentation, part-of-speech tags and readings without a need
           to specify weights.  Notice that user dictionaries have not been subject to extensive testing.

           User dictionary attributes are:
                     userDictionary: user dictionary filename
             userDictionaryEncoding: user dictionary encoding (default is UTF-8)

           See lang/userdict_ja.txt for a sample user dictionary file.

           Punctuation characters are discarded by default.  Use discardPunctuation="false" to keep them.

           See http://wiki.apache.org/solr/JapaneseLanguageSupport for more on Japanese language support.
        --&gt;</span>
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.JapaneseTokenizerFactory"</span> <span class="attribute">mode</span>=<span class="value">"search"</span>/&gt;</span>
        <span class="comment">&lt;!--&lt;tokenizer class="solr.JapaneseTokenizerFactory" mode="search" userDictionary="lang/userdict_ja.txt"/&gt;--&gt;</span>
        <span class="comment">&lt;!-- Reduces inflected verbs and adjectives to their base/dictionary forms (辞書形) --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.JapaneseBaseFormFilterFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- Removes tokens with certain part-of-speech tags --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.JapanesePartOfSpeechStopFilterFactory"</span> <span class="attribute">tags</span>=<span class="value">"lang/stoptags_ja.txt"</span> /&gt;</span>
        <span class="comment">&lt;!-- Normalizes full-width romaji to half-width and half-width kana to full-width (Unicode NFKC subset) --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.CJKWidthFilterFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- Removes common tokens typically not useful for search, but have a negative effect on ranking --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_ja.txt"</span> /&gt;</span>
        <span class="comment">&lt;!-- Normalizes common katakana spelling variations by removing any last long sound character (U+30FC) --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.JapaneseKatakanaStemFilterFactory"</span> <span class="attribute">minimumLength</span>=<span class="value">"4"</span>/&gt;</span>
        <span class="comment">&lt;!-- Lower-cases romaji characters --&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Latvian --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_lv"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_lv.txt"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LatvianStemFilterFactory"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Dutch --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_nl"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_nl.txt"</span> <span class="attribute">format</span>=<span class="value">"snowball"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StemmerOverrideFilterFactory"</span> <span class="attribute">dictionary</span>=<span class="value">"lang/stemdict_nl.txt"</span> <span class="attribute">ignoreCase</span>=<span class="value">"false"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SnowballPorterFilterFactory"</span> <span class="attribute">language</span>=<span class="value">"Dutch"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Norwegian --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_no"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_no.txt"</span> <span class="attribute">format</span>=<span class="value">"snowball"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SnowballPorterFilterFactory"</span> <span class="attribute">language</span>=<span class="value">"Norwegian"</span>/&gt;</span>
        <span class="comment">&lt;!-- less aggressive: &lt;filter class="solr.NorwegianLightStemFilterFactory" variant="nb"/&gt; --&gt;</span>
        <span class="comment">&lt;!-- singular/plural: &lt;filter class="solr.NorwegianMinimalStemFilterFactory" variant="nb"/&gt; --&gt;</span>
        <span class="comment">&lt;!-- The "light" and "minimal" stemmers support variants: nb=Bokmål, nn=Nynorsk, no=Both --&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Portuguese --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_pt"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_pt.txt"</span> <span class="attribute">format</span>=<span class="value">"snowball"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.PortugueseLightStemFilterFactory"</span>/&gt;</span>
        <span class="comment">&lt;!-- less aggressive: &lt;filter class="solr.PortugueseMinimalStemFilterFactory"/&gt; --&gt;</span>
        <span class="comment">&lt;!-- more aggressive: &lt;filter class="solr.SnowballPorterFilterFactory" language="Portuguese"/&gt; --&gt;</span>
        <span class="comment">&lt;!-- most aggressive: &lt;filter class="solr.PortugueseStemFilterFactory"/&gt; --&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Romanian --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_ro"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_ro.txt"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SnowballPorterFilterFactory"</span> <span class="attribute">language</span>=<span class="value">"Romanian"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Russian --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_ru"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_ru.txt"</span> <span class="attribute">format</span>=<span class="value">"snowball"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SnowballPorterFilterFactory"</span> <span class="attribute">language</span>=<span class="value">"Russian"</span>/&gt;</span>
        <span class="comment">&lt;!-- less aggressive: &lt;filter class="solr.RussianLightStemFilterFactory"/&gt; --&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Swedish --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_sv"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_sv.txt"</span> <span class="attribute">format</span>=<span class="value">"snowball"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SnowballPorterFilterFactory"</span> <span class="attribute">language</span>=<span class="value">"Swedish"</span>/&gt;</span>
        <span class="comment">&lt;!-- less aggressive: &lt;filter class="solr.SwedishLightStemFilterFactory"/&gt; --&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Thai --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_th"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.LowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.ThaiWordFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"true"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_th.txt"</span> /&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>
    
    <span class="comment">&lt;!-- Turkish --&gt;</span>
    <span class="tag">&lt;<span class="title">fieldType</span> <span class="attribute">name</span>=<span class="value">"text_tr"</span> <span class="attribute">class</span>=<span class="value">"solr.TextField"</span> <span class="attribute">positionIncrementGap</span>=<span class="value">"100"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">analyzer</span>&gt;</span> 
        <span class="tag">&lt;<span class="title">tokenizer</span> <span class="attribute">class</span>=<span class="value">"solr.StandardTokenizerFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.TurkishLowerCaseFilterFactory"</span>/&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.StopFilterFactory"</span> <span class="attribute">ignoreCase</span>=<span class="value">"false"</span> <span class="attribute">words</span>=<span class="value">"lang/stopwords_tr.txt"</span> /&gt;</span>
        <span class="tag">&lt;<span class="title">filter</span> <span class="attribute">class</span>=<span class="value">"solr.SnowballPorterFilterFactory"</span> <span class="attribute">language</span>=<span class="value">"Turkish"</span>/&gt;</span>
      <span class="tag">&lt;/<span class="title">analyzer</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">fieldType</span>&gt;</span>

 <span class="tag">&lt;/<span class="title">types</span>&gt;</span>
  
  <span class="comment">&lt;!-- Similarity is the scoring routine for each document vs. a query.
       A custom Similarity or SimilarityFactory may be specified here, but 
       the default is fine for most applications.  
       For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
    --&gt;</span>
  <span class="comment">&lt;!--
     &lt;similarity class="com.example.solr.CustomSimilarityFactory"&gt;
       &lt;str name="paramkey"&gt;param value&lt;/str&gt;
     &lt;/similarity&gt;
    --&gt;</span>

<span class="tag">&lt;/<span class="title">schema</span>&gt;</span>
</pre></td></tr></table></figure>

<p><strong>$CATALINA_HOME\webapps\solr\solr\collection1\conf\solrconfig.xml</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263
1264
1265
1266
1267
1268
1269
1270
1271
1272
1273
1274
1275
1276
1277
1278
1279
1280
1281
1282
1283
1284
1285
1286
1287
1288
1289
1290
1291
1292
1293
1294
1295
1296
1297
1298
1299
1300
1301
1302
1303
1304
1305
1306
1307
1308
1309
1310
1311
1312
1313
1314
1315
1316
1317
1318
1319
1320
1321
1322
1323
1324
1325
1326
1327
1328
1329
1330
1331
1332
1333
1334
1335
1336
1337
1338
1339
1340
1341
1342
1343
1344
1345
1346
1347
1348
1349
1350
1351
1352
1353
1354
1355
1356
1357
1358
1359
1360
1361
1362
1363
1364
1365
1366
1367
1368
1369
1370
1371
1372
1373
1374
1375
1376
1377
1378
1379
1380
1381
1382
1383
1384
1385
1386
1387
1388
1389
1390
1391
1392
1393
1394
1395
1396
1397
1398
1399
1400
1401
1402
1403
1404
1405
1406
1407
1408
1409
1410
1411
1412
1413
1414
1415
1416
1417
1418
1419
1420
1421
1422
1423
1424
1425
1426
1427
1428
1429
1430
1431
1432
1433
1434
1435
1436
1437
1438
1439
1440
1441
1442
1443
1444
1445
1446
1447
1448
1449
1450
1451
1452
1453
1454
1455
1456
1457
1458
1459
1460
1461
1462
1463
1464
1465
1466
1467
1468
1469
1470
1471
1472
1473
1474
1475
1476
1477
1478
1479
1480
1481
1482
1483
1484
1485
1486
1487
1488
1489
1490
1491
1492
1493
1494
1495
1496
1497
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1508
1509
1510
1511
1512
1513
1514
1515
1516
1517
1518
1519
1520
1521
1522
1523
1524
1525
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
1536
1537
1538
1539
1540
1541
1542
1543
1544
1545
1546
1547
1548
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1559
1560
1561
1562
1563
1564
1565
1566
1567
1568
1569
1570
1571
1572
1573
1574
1575
1576
1577
1578
1579
1580
1581
1582
1583
1584
1585
1586
1587
1588
1589
1590
1591
1592
1593
1594
1595
1596
1597
1598
1599
1600
1601
1602
1603
1604
1605
1606
1607
1608
1609
1610
1611
1612
1613
1614
1615
1616
1617
1618
1619
1620
1621
1622
1623
1624
1625
1626
1627
1628
1629
1630
1631
1632
1633
1634
1635
1636
1637
1638
1639
1640
1641
1642
1643
1644
1645
1646
1647
1648
1649
1650
1651
1652
1653
1654
1655
1656
1657
1658
1659
1660
1661
1662
1663
1664
1665
1666
1667
1668
1669
1670
1671
1672
1673
1674
1675
1676
1677
1678
1679
1680
1681
1682
1683
1684
1685
1686
1687
1688
1689
1690
1691
1692
1693
1694
1695
1696
1697
1698
1699
1700
1701
1702
1703
1704
1705
1706
1707
1708
1709
1710
1711
1712
1713
1714
1715
1716
1717
1718
1719
1720
1721
1722
1723
1724
1725
1726
1727
1728
1729
1730
1731
1732
1733
1734
1735
1736
1737
1738
1739
1740
1741
1742
1743
1744
1745
1746
1747
1748
1749
1750
1751
1752
1753
1754
1755
1756
1757
1758
1759
1760
1761
1762
1763
1764
1765
1766
1767
1768
1769
1770
1771
1772
1773
1774
1775
1776
1777
1778
1779
1780
1781
1782
1783
1784
1785
1786
1787
1788
1789
1790
1791
1792
1793
1794
1795
1796
1797
1798
1799
1800
1801
1802
1803
1804
1805
1806
1807
1808
1809
1810
1811
1812
1813
1814
1815
1816
1817
1818
1819
1820
1821
1822
1823
1824
1825
1826
1827
1828
1829
1830
1831
1832
1833
1834
1835
1836
1837
1838
1839
1840
1841
1842
1843
1844
1845
1846
1847
1848
1849
1850
1851
1852
1853
1854
1855
1856
1857
1858
1859
1860
1861
1862
1863
1864
1865
1866
1867
1868
1869
1870
1871
1872
1873
</pre></td><td class="code"><pre><span class="pi">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="comment">&lt;!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
--&gt;</span>

<span class="comment">&lt;!-- 
     For more details about configurations options that may appear in
     this file, see http://wiki.apache.org/solr/SolrConfigXml. 
--&gt;</span>
<span class="tag">&lt;<span class="title">config</span>&gt;</span>
  <span class="comment">&lt;!-- In all configuration below, a prefix of "solr." for class names
       is an alias that causes solr to search appropriate packages,
       including org.apache.solr.(search|update|request|core|analysis)

       You may also specify a fully qualified Java classname if you
       have your own custom plugins.
    --&gt;</span>

  <span class="comment">&lt;!-- Controls what version of Lucene various components of Solr
       adhere to.  Generally, you want to use the latest version to
       get all bug fixes and improvements. It is highly recommended
       that you fully re-index after changing this setting as it can
       affect both how text is indexed and queried.
  --&gt;</span>
  <span class="tag">&lt;<span class="title">luceneMatchVersion</span>&gt;</span>4.7<span class="tag">&lt;/<span class="title">luceneMatchVersion</span>&gt;</span>

  <span class="comment">&lt;!-- &lt;lib/&gt; directives can be used to instruct Solr to load an Jars
       identified and use them to resolve any "plugins" specified in
       your solrconfig.xml or schema.xml (ie: Analyzers, Request
       Handlers, etc...).

       All directories and paths are resolved relative to the
       instanceDir.

       Please note that &lt;lib/&gt; directives are processed in the order
       that they appear in your solrconfig.xml file, and are "stacked" 
       on top of each other when building a ClassLoader - so if you have 
       plugin jars with dependencies on other jars, the "lower level" 
       dependency jars should be loaded first.

       If a "./lib" directory exists in your instanceDir, all files
       found in it are included as if you had used the following
       syntax...
       
              &lt;lib dir="./lib" /&gt;
    --&gt;</span>

  <span class="comment">&lt;!-- A 'dir' option by itself adds any files found in the directory 
       to the classpath, this is useful for including all jars in a
       directory.

       When a 'regex' is specified in addition to a 'dir', only the
       files in that directory which completely match the regex
       (anchored on both ends) will be included.

       If a 'dir' option (with or without a regex) is used and nothing
       is found that matches, a warning will be logged.

       The examples below can be used to load some solr-contribs along 
       with their external dependencies.
    --&gt;</span>
  <span class="tag">&lt;<span class="title">lib</span> <span class="attribute">dir</span>=<span class="value">"../../../contrib/extraction/lib"</span> <span class="attribute">regex</span>=<span class="value">".*\.jar"</span> /&gt;</span>
  <span class="tag">&lt;<span class="title">lib</span> <span class="attribute">dir</span>=<span class="value">"../../../dist/"</span> <span class="attribute">regex</span>=<span class="value">"solr-cell-\d.*\.jar"</span> /&gt;</span>

  <span class="tag">&lt;<span class="title">lib</span> <span class="attribute">dir</span>=<span class="value">"../../../contrib/clustering/lib/"</span> <span class="attribute">regex</span>=<span class="value">".*\.jar"</span> /&gt;</span>
  <span class="tag">&lt;<span class="title">lib</span> <span class="attribute">dir</span>=<span class="value">"../../../dist/"</span> <span class="attribute">regex</span>=<span class="value">"solr-clustering-\d.*\.jar"</span> /&gt;</span>

  <span class="tag">&lt;<span class="title">lib</span> <span class="attribute">dir</span>=<span class="value">"../../../contrib/langid/lib/"</span> <span class="attribute">regex</span>=<span class="value">".*\.jar"</span> /&gt;</span>
  <span class="tag">&lt;<span class="title">lib</span> <span class="attribute">dir</span>=<span class="value">"../../../dist/"</span> <span class="attribute">regex</span>=<span class="value">"solr-langid-\d.*\.jar"</span> /&gt;</span>

  <span class="tag">&lt;<span class="title">lib</span> <span class="attribute">dir</span>=<span class="value">"../../../contrib/velocity/lib"</span> <span class="attribute">regex</span>=<span class="value">".*\.jar"</span> /&gt;</span>
  <span class="tag">&lt;<span class="title">lib</span> <span class="attribute">dir</span>=<span class="value">"../../../dist/"</span> <span class="attribute">regex</span>=<span class="value">"solr-velocity-\d.*\.jar"</span> /&gt;</span>

  <span class="comment">&lt;!-- an exact 'path' can be used instead of a 'dir' to specify a 
       specific jar file.  This will cause a serious error to be logged 
       if it can't be loaded.
    --&gt;</span>
  <span class="comment">&lt;!--
     &lt;lib path="../a-jar-that-does-not-exist.jar" /&gt; 
  --&gt;</span>
  
  <span class="comment">&lt;!-- Data Directory

       Used to specify an alternate directory to hold all index data
       other than the default ./data under the Solr home.  If
       replication is in use, this should match the replication
       configuration.
    --&gt;</span>
  <span class="tag">&lt;<span class="title">dataDir</span>&gt;</span>${solr.data.dir:}<span class="tag">&lt;/<span class="title">dataDir</span>&gt;</span>


  <span class="comment">&lt;!-- The DirectoryFactory to use for indexes.
       
       solr.StandardDirectoryFactory is filesystem
       based and tries to pick the best implementation for the current
       JVM and platform.  solr.NRTCachingDirectoryFactory, the default,
       wraps solr.StandardDirectoryFactory and caches small files in memory
       for better NRT performance.

       One can force a particular implementation via solr.MMapDirectoryFactory,
       solr.NIOFSDirectoryFactory, or solr.SimpleFSDirectoryFactory.

       solr.RAMDirectoryFactory is memory based, not
       persistent, and doesn't work with replication.
    --&gt;</span>
  <span class="tag">&lt;<span class="title">directoryFactory</span> <span class="attribute">name</span>=<span class="value">"DirectoryFactory"</span> 
                    <span class="attribute">class</span>=<span class="value">"${solr.directoryFactory:solr.NRTCachingDirectoryFactory}"</span>&gt;</span>
    
         
    <span class="comment">&lt;!-- These will be used if you are using the solr.HdfsDirectoryFactory,
         otherwise they will be ignored. If you don't plan on using hdfs,
         you can safely remove this section. --&gt;</span>      
    <span class="comment">&lt;!-- The root directory that collection data should be written to. --&gt;</span>     
    <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"solr.hdfs.home"</span>&gt;</span>${solr.hdfs.home:}<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="comment">&lt;!-- The hadoop configuration files to use for the hdfs client. --&gt;</span>    
    <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"solr.hdfs.confdir"</span>&gt;</span>${solr.hdfs.confdir:}<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="comment">&lt;!-- Enable/Disable the hdfs cache. --&gt;</span>    
    <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"solr.hdfs.blockcache.enabled"</span>&gt;</span>${solr.hdfs.blockcache.enabled:true}<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    
  <span class="tag">&lt;/<span class="title">directoryFactory</span>&gt;</span> 

  <span class="comment">&lt;!-- The CodecFactory for defining the format of the inverted index.
       The default implementation is SchemaCodecFactory, which is the official Lucene
       index format, but hooks into the schema to provide per-field customization of
       the postings lists and per-document values in the fieldType element
       (postingsFormat/docValuesFormat). Note that most of the alternative implementations
       are experimental, so if you choose to customize the index format, its a good
       idea to convert back to the official format e.g. via IndexWriter.addIndexes(IndexReader)
       before upgrading to a newer version to avoid unnecessary reindexing.
  --&gt;</span>
  <span class="tag">&lt;<span class="title">codecFactory</span> <span class="attribute">class</span>=<span class="value">"solr.SchemaCodecFactory"</span>/&gt;</span>

  <span class="comment">&lt;!-- To enable dynamic schema REST APIs, use the following for &lt;schemaFactory&gt;:
  
       &lt;schemaFactory class="ManagedIndexSchemaFactory"&gt;
         &lt;bool name="mutable"&gt;true&lt;/bool&gt;
         &lt;str name="managedSchemaResourceName"&gt;managed-schema&lt;/str&gt;
       &lt;/schemaFactory&gt;
       
       When ManagedIndexSchemaFactory is specified, Solr will load the schema from
       he resource named in 'managedSchemaResourceName', rather than from schema.xml.
       Note that the managed schema resource CANNOT be named schema.xml.  If the managed
       schema does not exist, Solr will create it after reading schema.xml, then rename
       'schema.xml' to 'schema.xml.bak'. 
       
       Do NOT hand edit the managed schema - external modifications will be ignored and
       overwritten as a result of schema modification REST API calls.

       When ManagedIndexSchemaFactory is specified with mutable = true, schema
       modification REST API calls will be allowed; otherwise, error responses will be
       sent back for these requests. 
  --&gt;</span>
  <span class="tag">&lt;<span class="title">schemaFactory</span> <span class="attribute">class</span>=<span class="value">"ClassicIndexSchemaFactory"</span>/&gt;</span>

  <span class="comment">&lt;!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       Index Config - These settings control low-level behavior of indexing
       Most example settings here show the default value, but are commented
       out, to more easily see where customizations have been made.
       
       Note: This replaces &lt;indexDefaults&gt; and &lt;mainIndex&gt; from older versions
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ --&gt;</span>
  <span class="tag">&lt;<span class="title">indexConfig</span>&gt;</span>
    <span class="comment">&lt;!-- maxFieldLength was removed in 4.0. To get similar behavior, include a 
         LimitTokenCountFilterFactory in your fieldType definition. E.g. 
     &lt;filter class="solr.LimitTokenCountFilterFactory" maxTokenCount="10000"/&gt;
    --&gt;</span>
    <span class="comment">&lt;!-- Maximum time to wait for a write lock (ms) for an IndexWriter. Default: 1000 --&gt;</span>
    <span class="comment">&lt;!-- &lt;writeLockTimeout&gt;1000&lt;/writeLockTimeout&gt;  --&gt;</span>

    <span class="comment">&lt;!-- The maximum number of simultaneous threads that may be
         indexing documents at once in IndexWriter; if more than this
         many threads arrive they will wait for others to finish.
         Default in Solr/Lucene is 8. --&gt;</span>
    <span class="comment">&lt;!-- &lt;maxIndexingThreads&gt;8&lt;/maxIndexingThreads&gt;  --&gt;</span>

    <span class="comment">&lt;!-- Expert: Enabling compound file will use less files for the index, 
         using fewer file descriptors on the expense of performance decrease. 
         Default in Lucene is "true". Default in Solr is "false" (since 3.6) --&gt;</span>
    <span class="comment">&lt;!-- &lt;useCompoundFile&gt;false&lt;/useCompoundFile&gt; --&gt;</span>

    <span class="comment">&lt;!-- ramBufferSizeMB sets the amount of RAM that may be used by Lucene
         indexing for buffering added documents and deletions before they are
         flushed to the Directory.
         maxBufferedDocs sets a limit on the number of documents buffered
         before flushing.
         If both ramBufferSizeMB and maxBufferedDocs is set, then
         Lucene will flush based on whichever limit is hit first.
         The default is 100 MB.  --&gt;</span>
    <span class="comment">&lt;!-- &lt;ramBufferSizeMB&gt;100&lt;/ramBufferSizeMB&gt; --&gt;</span>
    <span class="comment">&lt;!-- &lt;maxBufferedDocs&gt;1000&lt;/maxBufferedDocs&gt; --&gt;</span>

    <span class="comment">&lt;!-- Expert: Merge Policy 
         The Merge Policy in Lucene controls how merging of segments is done.
         The default since Solr/Lucene 3.3 is TieredMergePolicy.
         The default since Lucene 2.3 was the LogByteSizeMergePolicy,
         Even older versions of Lucene used LogDocMergePolicy.
      --&gt;</span>
    <span class="comment">&lt;!--
        &lt;mergePolicy class="org.apache.lucene.index.TieredMergePolicy"&gt;
          &lt;int name="maxMergeAtOnce"&gt;10&lt;/int&gt;
          &lt;int name="segmentsPerTier"&gt;10&lt;/int&gt;
        &lt;/mergePolicy&gt;
      --&gt;</span>
       
    <span class="comment">&lt;!-- Merge Factor
         The merge factor controls how many segments will get merged at a time.
         For TieredMergePolicy, mergeFactor is a convenience parameter which
         will set both MaxMergeAtOnce and SegmentsPerTier at once.
         For LogByteSizeMergePolicy, mergeFactor decides how many new segments
         will be allowed before they are merged into one.
         Default is 10 for both merge policies.
      --&gt;</span>
    <span class="comment">&lt;!-- 
    &lt;mergeFactor&gt;10&lt;/mergeFactor&gt;
      --&gt;</span>

    <span class="comment">&lt;!-- Expert: Merge Scheduler
         The Merge Scheduler in Lucene controls how merges are
         performed.  The ConcurrentMergeScheduler (Lucene 2.3 default)
         can perform merges in the background using separate threads.
         The SerialMergeScheduler (Lucene 2.2 default) does not.
     --&gt;</span>
    <span class="comment">&lt;!-- 
       &lt;mergeScheduler class="org.apache.lucene.index.ConcurrentMergeScheduler"/&gt;
       --&gt;</span>

    <span class="comment">&lt;!-- LockFactory 

         This option specifies which Lucene LockFactory implementation
         to use.
      
         single = SingleInstanceLockFactory - suggested for a
                  read-only index or when there is no possibility of
                  another process trying to modify the index.
         native = NativeFSLockFactory - uses OS native file locking.
                  Do not use when multiple solr webapps in the same
                  JVM are attempting to share a single index.
         simple = SimpleFSLockFactory  - uses a plain file for locking

         Defaults: 'native' is default for Solr3.6 and later, otherwise
                   'simple' is the default

         More details on the nuances of each LockFactory...
         http://wiki.apache.org/lucene-java/AvailableLockFactories
    --&gt;</span>
    <span class="tag">&lt;<span class="title">lockType</span>&gt;</span>${solr.lock.type:native}<span class="tag">&lt;/<span class="title">lockType</span>&gt;</span>

    <span class="comment">&lt;!-- Unlock On Startup

         If true, unlock any held write or commit locks on startup.
         This defeats the locking mechanism that allows multiple
         processes to safely access a lucene index, and should be used
         with care. Default is "false".

         This is not needed if lock type is 'single'
     --&gt;</span>
    <span class="comment">&lt;!--
    &lt;unlockOnStartup&gt;false&lt;/unlockOnStartup&gt;
      --&gt;</span>
    
    <span class="comment">&lt;!-- Expert: Controls how often Lucene loads terms into memory
         Default is 128 and is likely good for most everyone.
      --&gt;</span>
    <span class="comment">&lt;!-- &lt;termIndexInterval&gt;128&lt;/termIndexInterval&gt; --&gt;</span>

    <span class="comment">&lt;!-- If true, IndexReaders will be opened/reopened from the IndexWriter
         instead of from the Directory. Hosts in a master/slave setup
         should have this set to false while those in a SolrCloud
         cluster need to be set to true. Default: true
      --&gt;</span>
    <span class="comment">&lt;!-- 
    &lt;nrtMode&gt;true&lt;/nrtMode&gt;
      --&gt;</span>

    <span class="comment">&lt;!-- Commit Deletion Policy
         Custom deletion policies can be specified here. The class must
         implement org.apache.lucene.index.IndexDeletionPolicy.

         The default Solr IndexDeletionPolicy implementation supports
         deleting index commit points on number of commits, age of
         commit point and optimized status.
         
         The latest commit point should always be preserved regardless
         of the criteria.
    --&gt;</span>
    <span class="comment">&lt;!-- 
    &lt;deletionPolicy class="solr.SolrDeletionPolicy"&gt;
    --&gt;</span>
      <span class="comment">&lt;!-- The number of commit points to be kept --&gt;</span>
      <span class="comment">&lt;!-- &lt;str name="maxCommitsToKeep"&gt;1&lt;/str&gt; --&gt;</span>
      <span class="comment">&lt;!-- The number of optimized commit points to be kept --&gt;</span>
      <span class="comment">&lt;!-- &lt;str name="maxOptimizedCommitsToKeep"&gt;0&lt;/str&gt; --&gt;</span>
      <span class="comment">&lt;!--
          Delete all commit points once they have reached the given age.
          Supports DateMathParser syntax e.g.
        --&gt;</span>
      <span class="comment">&lt;!--
         &lt;str name="maxCommitAge"&gt;30MINUTES&lt;/str&gt;
         &lt;str name="maxCommitAge"&gt;1DAY&lt;/str&gt;
      --&gt;</span>
    <span class="comment">&lt;!-- 
    &lt;/deletionPolicy&gt;
    --&gt;</span>

    <span class="comment">&lt;!-- Lucene Infostream
       
         To aid in advanced debugging, Lucene provides an "InfoStream"
         of detailed information when indexing.

         Setting the value to true will instruct the underlying Lucene
         IndexWriter to write its info stream to solr's log. By default,
         this is enabled here, and controlled through log4j.properties.
      --&gt;</span>
     <span class="tag">&lt;<span class="title">infoStream</span>&gt;</span>true<span class="tag">&lt;/<span class="title">infoStream</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">indexConfig</span>&gt;</span>


  <span class="comment">&lt;!-- JMX
       
       This example enables JMX if and only if an existing MBeanServer
       is found, use this if you want to configure JMX through JVM
       parameters. Remove this to disable exposing Solr configuration
       and statistics to JMX.

       For more details see http://wiki.apache.org/solr/SolrJmx
    --&gt;</span>
  <span class="tag">&lt;<span class="title">jmx</span> /&gt;</span>
  <span class="comment">&lt;!-- If you want to connect to a particular server, specify the
       agentId 
    --&gt;</span>
  <span class="comment">&lt;!-- &lt;jmx agentId="myAgent" /&gt; --&gt;</span>
  <span class="comment">&lt;!-- If you want to start a new MBeanServer, specify the serviceUrl --&gt;</span>
  <span class="comment">&lt;!-- &lt;jmx serviceUrl="service:jmx:rmi:///jndi/rmi://localhost:9999/solr"/&gt;
    --&gt;</span>

  <span class="comment">&lt;!-- The default high-performance update handler --&gt;</span>
  <span class="tag">&lt;<span class="title">updateHandler</span> <span class="attribute">class</span>=<span class="value">"solr.DirectUpdateHandler2"</span>&gt;</span>

    <span class="comment">&lt;!-- Enables a transaction log, used for real-time get, durability, and
         and solr cloud replica recovery.  The log can grow as big as
         uncommitted changes to the index, so use of a hard autoCommit
         is recommended (see below).
         "dir" - the target directory for transaction logs, defaults to the
                solr data directory.  --&gt;</span> 
    <span class="tag">&lt;<span class="title">updateLog</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"dir"</span>&gt;</span>${solr.ulog.dir:}<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">updateLog</span>&gt;</span>
 
    <span class="comment">&lt;!-- AutoCommit

         Perform a hard commit automatically under certain conditions.
         Instead of enabling autoCommit, consider using "commitWithin"
         when adding documents. 

         http://wiki.apache.org/solr/UpdateXmlMessages

         maxDocs - Maximum number of documents to add since the last
                   commit before automatically triggering a new commit.

         maxTime - Maximum amount of time in ms that is allowed to pass
                   since a document was added before automatically
                   triggering a new commit. 
         openSearcher - if false, the commit causes recent index changes
           to be flushed to stable storage, but does not cause a new
           searcher to be opened to make those changes visible.

         If the updateLog is enabled, then it's highly recommended to
         have some sort of hard autoCommit to limit the log size.
      --&gt;</span>
     <span class="tag">&lt;<span class="title">autoCommit</span>&gt;</span> 
       <span class="tag">&lt;<span class="title">maxTime</span>&gt;</span>${solr.autoCommit.maxTime:15000}<span class="tag">&lt;/<span class="title">maxTime</span>&gt;</span> 
       <span class="tag">&lt;<span class="title">openSearcher</span>&gt;</span>false<span class="tag">&lt;/<span class="title">openSearcher</span>&gt;</span> 
     <span class="tag">&lt;/<span class="title">autoCommit</span>&gt;</span>

    <span class="comment">&lt;!-- softAutoCommit is like autoCommit except it causes a
         'soft' commit which only ensures that changes are visible
         but does not ensure that data is synced to disk.  This is
         faster and more near-realtime friendly than a hard commit.
      --&gt;</span>

     <span class="tag">&lt;<span class="title">autoSoftCommit</span>&gt;</span> 
       <span class="tag">&lt;<span class="title">maxTime</span>&gt;</span>${solr.autoSoftCommit.maxTime:-1}<span class="tag">&lt;/<span class="title">maxTime</span>&gt;</span> 
     <span class="tag">&lt;/<span class="title">autoSoftCommit</span>&gt;</span>

    <span class="comment">&lt;!-- Update Related Event Listeners
         
         Various IndexWriter related events can trigger Listeners to
         take actions.

         postCommit - fired after every commit or optimize command
         postOptimize - fired after every optimize command
      --&gt;</span>
    <span class="comment">&lt;!-- The RunExecutableListener executes an external command from a
         hook such as postCommit or postOptimize.
         
         exe - the name of the executable to run
         dir - dir to use as the current working directory. (default=".")
         wait - the calling thread waits until the executable returns. 
                (default="true")
         args - the arguments to pass to the program.  (default is none)
         env - environment variables to set.  (default is none)
      --&gt;</span>
    <span class="comment">&lt;!-- This example shows how RunExecutableListener could be used
         with the script based replication...
         http://wiki.apache.org/solr/CollectionDistribution
      --&gt;</span>
    <span class="comment">&lt;!--
       &lt;listener event="postCommit" class="solr.RunExecutableListener"&gt;
         &lt;str name="exe"&gt;solr/bin/snapshooter&lt;/str&gt;
         &lt;str name="dir"&gt;.&lt;/str&gt;
         &lt;bool name="wait"&gt;true&lt;/bool&gt;
         &lt;arr name="args"&gt; &lt;str&gt;arg1&lt;/str&gt; &lt;str&gt;arg2&lt;/str&gt; &lt;/arr&gt;
         &lt;arr name="env"&gt; &lt;str&gt;MYVAR=val1&lt;/str&gt; &lt;/arr&gt;
       &lt;/listener&gt;
      --&gt;</span>

  <span class="tag">&lt;/<span class="title">updateHandler</span>&gt;</span>
  
  <span class="comment">&lt;!-- IndexReaderFactory

       Use the following format to specify a custom IndexReaderFactory,
       which allows for alternate IndexReader implementations.

       ** Experimental Feature **

       Please note - Using a custom IndexReaderFactory may prevent
       certain other features from working. The API to
       IndexReaderFactory may change without warning or may even be
       removed from future releases if the problems cannot be
       resolved.


       ** Features that may not work with custom IndexReaderFactory **

       The ReplicationHandler assumes a disk-resident index. Using a
       custom IndexReader implementation may cause incompatibility
       with ReplicationHandler and may cause replication to not work
       correctly. See SOLR-1366 for details.

    --&gt;</span>
  <span class="comment">&lt;!--
  &lt;indexReaderFactory name="IndexReaderFactory" class="package.class"&gt;
    &lt;str name="someArg"&gt;Some Value&lt;/str&gt;
  &lt;/indexReaderFactory &gt;
  --&gt;</span>
  <span class="comment">&lt;!-- By explicitly declaring the Factory, the termIndexDivisor can
       be specified.
    --&gt;</span>
  <span class="comment">&lt;!--
     &lt;indexReaderFactory name="IndexReaderFactory" 
                         class="solr.StandardIndexReaderFactory"&gt;
       &lt;int name="setTermIndexDivisor"&gt;12&lt;/int&gt;
     &lt;/indexReaderFactory &gt;
    --&gt;</span>

  <span class="comment">&lt;!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
       Query section - these settings control query time things like caches
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ --&gt;</span>
  <span class="tag">&lt;<span class="title">query</span>&gt;</span>
    <span class="comment">&lt;!-- Max Boolean Clauses

         Maximum number of clauses in each BooleanQuery,  an exception
         is thrown if exceeded.

         ** WARNING **
         
         This option actually modifies a global Lucene property that
         will affect all SolrCores.  If multiple solrconfig.xml files
         disagree on this property, the value at any given moment will
         be based on the last SolrCore to be initialized.
         
      --&gt;</span>
    <span class="tag">&lt;<span class="title">maxBooleanClauses</span>&gt;</span>1024<span class="tag">&lt;/<span class="title">maxBooleanClauses</span>&gt;</span>


    <span class="comment">&lt;!-- Solr Internal Query Caches

         There are two implementations of cache available for Solr,
         LRUCache, based on a synchronized LinkedHashMap, and
         FastLRUCache, based on a ConcurrentHashMap.  

         FastLRUCache has faster gets and slower puts in single
         threaded operation and thus is generally faster than LRUCache
         when the hit ratio of the cache is high (&gt; 75%), and may be
         faster under other scenarios on multi-cpu systems.
    --&gt;</span>

    <span class="comment">&lt;!-- Filter Cache

         Cache used by SolrIndexSearcher for filters (DocSets),
         unordered sets of *all* documents that match a query.  When a
         new searcher is opened, its caches may be prepopulated or
         "autowarmed" using data from caches in the old searcher.
         autowarmCount is the number of items to prepopulate.  For
         LRUCache, the autowarmed items will be the most recently
         accessed items.

         Parameters:
           class - the SolrCache implementation LRUCache or
               (LRUCache or FastLRUCache)
           size - the maximum number of entries in the cache
           initialSize - the initial capacity (number of entries) of
               the cache.  (see java.util.HashMap)
           autowarmCount - the number of entries to prepopulate from
               and old cache.  
      --&gt;</span>
    <span class="tag">&lt;<span class="title">filterCache</span> <span class="attribute">class</span>=<span class="value">"solr.FastLRUCache"</span>
                 <span class="attribute">size</span>=<span class="value">"512"</span>
                 <span class="attribute">initialSize</span>=<span class="value">"512"</span>
                 <span class="attribute">autowarmCount</span>=<span class="value">"0"</span>/&gt;</span>

    <span class="comment">&lt;!-- Query Result Cache
         
         Caches results of searches - ordered lists of document ids
         (DocList) based on a query, a sort, and the range of documents requested.  
      --&gt;</span>
    <span class="tag">&lt;<span class="title">queryResultCache</span> <span class="attribute">class</span>=<span class="value">"solr.LRUCache"</span>
                     <span class="attribute">size</span>=<span class="value">"512"</span>
                     <span class="attribute">initialSize</span>=<span class="value">"512"</span>
                     <span class="attribute">autowarmCount</span>=<span class="value">"0"</span>/&gt;</span>
   
    <span class="comment">&lt;!-- Document Cache

         Caches Lucene Document objects (the stored fields for each
         document).  Since Lucene internal document ids are transient,
         this cache will not be autowarmed.  
      --&gt;</span>
    <span class="tag">&lt;<span class="title">documentCache</span> <span class="attribute">class</span>=<span class="value">"solr.LRUCache"</span>
                   <span class="attribute">size</span>=<span class="value">"512"</span>
                   <span class="attribute">initialSize</span>=<span class="value">"512"</span>
                   <span class="attribute">autowarmCount</span>=<span class="value">"0"</span>/&gt;</span>
    
    <span class="comment">&lt;!-- custom cache currently used by block join --&gt;</span> 
    <span class="tag">&lt;<span class="title">cache</span> <span class="attribute">name</span>=<span class="value">"perSegFilter"</span>
      <span class="attribute">class</span>=<span class="value">"solr.search.LRUCache"</span>
      <span class="attribute">size</span>=<span class="value">"10"</span>
      <span class="attribute">initialSize</span>=<span class="value">"0"</span>
      <span class="attribute">autowarmCount</span>=<span class="value">"10"</span>
      <span class="attribute">regenerator</span>=<span class="value">"solr.NoOpRegenerator"</span> /&gt;</span>

    <span class="comment">&lt;!-- Field Value Cache
         
         Cache used to hold field values that are quickly accessible
         by document id.  The fieldValueCache is created by default
         even if not configured here.
      --&gt;</span>
    <span class="comment">&lt;!--
       &lt;fieldValueCache class="solr.FastLRUCache"
                        size="512"
                        autowarmCount="128"
                        showItems="32" /&gt;
      --&gt;</span>

    <span class="comment">&lt;!-- Custom Cache

         Example of a generic cache.  These caches may be accessed by
         name through SolrIndexSearcher.getCache(),cacheLookup(), and
         cacheInsert().  The purpose is to enable easy caching of
         user/application level data.  The regenerator argument should
         be specified as an implementation of solr.CacheRegenerator 
         if autowarming is desired.  
      --&gt;</span>
    <span class="comment">&lt;!--
       &lt;cache name="myUserCache"
              class="solr.LRUCache"
              size="4096"
              initialSize="1024"
              autowarmCount="1024"
              regenerator="com.mycompany.MyRegenerator"
              /&gt;
      --&gt;</span>


    <span class="comment">&lt;!-- Lazy Field Loading

         If true, stored fields that are not requested will be loaded
         lazily.  This can result in a significant speed improvement
         if the usual case is to not load all stored fields,
         especially if the skipped fields are large compressed text
         fields.
    --&gt;</span>
    <span class="tag">&lt;<span class="title">enableLazyFieldLoading</span>&gt;</span>true<span class="tag">&lt;/<span class="title">enableLazyFieldLoading</span>&gt;</span>

   <span class="comment">&lt;!-- Use Filter For Sorted Query

        A possible optimization that attempts to use a filter to
        satisfy a search.  If the requested sort does not include
        score, then the filterCache will be checked for a filter
        matching the query. If found, the filter will be used as the
        source of document ids, and then the sort will be applied to
        that.

        For most situations, this will not be useful unless you
        frequently get the same search repeatedly with different sort
        options, and none of them ever use "score"
     --&gt;</span>
   <span class="comment">&lt;!--
      &lt;useFilterForSortedQuery&gt;true&lt;/useFilterForSortedQuery&gt;
     --&gt;</span>

   <span class="comment">&lt;!-- Result Window Size

        An optimization for use with the queryResultCache.  When a search
        is requested, a superset of the requested number of document ids
        are collected.  For example, if a search for a particular query
        requests matching documents 10 through 19, and queryWindowSize is 50,
        then documents 0 through 49 will be collected and cached.  Any further
        requests in that range can be satisfied via the cache.  
     --&gt;</span>
   <span class="tag">&lt;<span class="title">queryResultWindowSize</span>&gt;</span>20<span class="tag">&lt;/<span class="title">queryResultWindowSize</span>&gt;</span>

   <span class="comment">&lt;!-- Maximum number of documents to cache for any entry in the
        queryResultCache. 
     --&gt;</span>
   <span class="tag">&lt;<span class="title">queryResultMaxDocsCached</span>&gt;</span>200<span class="tag">&lt;/<span class="title">queryResultMaxDocsCached</span>&gt;</span>

   <span class="comment">&lt;!-- Query Related Event Listeners

        Various IndexSearcher related events can trigger Listeners to
        take actions.

        newSearcher - fired whenever a new searcher is being prepared
        and there is a current searcher handling requests (aka
        registered).  It can be used to prime certain caches to
        prevent long request times for certain requests.

        firstSearcher - fired whenever a new searcher is being
        prepared but there is no current registered searcher to handle
        requests or to gain autowarming data from.

        
     --&gt;</span>
    <span class="comment">&lt;!-- QuerySenderListener takes an array of NamedList and executes a
         local query request for each NamedList in sequence. 
      --&gt;</span>
    <span class="tag">&lt;<span class="title">listener</span> <span class="attribute">event</span>=<span class="value">"newSearcher"</span> <span class="attribute">class</span>=<span class="value">"solr.QuerySenderListener"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">arr</span> <span class="attribute">name</span>=<span class="value">"queries"</span>&gt;</span>
        <span class="comment">&lt;!--
           &lt;lst&gt;&lt;str name="q"&gt;solr&lt;/str&gt;&lt;str name="sort"&gt;price asc&lt;/str&gt;&lt;/lst&gt;
           &lt;lst&gt;&lt;str name="q"&gt;rocks&lt;/str&gt;&lt;str name="sort"&gt;weight asc&lt;/str&gt;&lt;/lst&gt;
          --&gt;</span>
      <span class="tag">&lt;/<span class="title">arr</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">listener</span>&gt;</span>
    <span class="tag">&lt;<span class="title">listener</span> <span class="attribute">event</span>=<span class="value">"firstSearcher"</span> <span class="attribute">class</span>=<span class="value">"solr.QuerySenderListener"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">arr</span> <span class="attribute">name</span>=<span class="value">"queries"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">lst</span>&gt;</span>
          <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"q"</span>&gt;</span>static firstSearcher warming in solrconfig.xml<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">arr</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">listener</span>&gt;</span>

    <span class="comment">&lt;!-- Use Cold Searcher

         If a search request comes in and there is no current
         registered searcher, then immediately register the still
         warming searcher and use it.  If "false" then all requests
         will block until the first searcher is done warming.
      --&gt;</span>
    <span class="tag">&lt;<span class="title">useColdSearcher</span>&gt;</span>false<span class="tag">&lt;/<span class="title">useColdSearcher</span>&gt;</span>

    <span class="comment">&lt;!-- Max Warming Searchers
         
         Maximum number of searchers that may be warming in the
         background concurrently.  An error is returned if this limit
         is exceeded.

         Recommend values of 1-2 for read-only slaves, higher for
         masters w/o cache warming.
      --&gt;</span>
    <span class="tag">&lt;<span class="title">maxWarmingSearchers</span>&gt;</span>2<span class="tag">&lt;/<span class="title">maxWarmingSearchers</span>&gt;</span>

  <span class="tag">&lt;/<span class="title">query</span>&gt;</span>


  <span class="comment">&lt;!-- Request Dispatcher

       This section contains instructions for how the SolrDispatchFilter
       should behave when processing requests for this SolrCore.

       handleSelect is a legacy option that affects the behavior of requests
       such as /select?qt=XXX

       handleSelect="true" will cause the SolrDispatchFilter to process
       the request and dispatch the query to a handler specified by the 
       "qt" param, assuming "/select" isn't already registered.

       handleSelect="false" will cause the SolrDispatchFilter to
       ignore "/select" requests, resulting in a 404 unless a handler
       is explicitly registered with the name "/select"

       handleSelect="true" is not recommended for new users, but is the default
       for backwards compatibility
    --&gt;</span>
  <span class="tag">&lt;<span class="title">requestDispatcher</span> <span class="attribute">handleSelect</span>=<span class="value">"false"</span> &gt;</span>
    <span class="comment">&lt;!-- Request Parsing

         These settings indicate how Solr Requests may be parsed, and
         what restrictions may be placed on the ContentStreams from
         those requests

         enableRemoteStreaming - enables use of the stream.file
         and stream.url parameters for specifying remote streams.

         multipartUploadLimitInKB - specifies the max size (in KiB) of
         Multipart File Uploads that Solr will allow in a Request.
         
         formdataUploadLimitInKB - specifies the max size (in KiB) of
         form data (application/x-www-form-urlencoded) sent via
         POST. You can use POST to pass request parameters not
         fitting into the URL.
         
         addHttpRequestToContext - if set to true, it will instruct
         the requestParsers to include the original HttpServletRequest
         object in the context map of the SolrQueryRequest under the 
         key "httpRequest". It will not be used by any of the existing
         Solr components, but may be useful when developing custom 
         plugins.
         
         *** WARNING ***
         The settings below authorize Solr to fetch remote files, You
         should make sure your system has some authentication before
         using enableRemoteStreaming="true"

      --&gt;</span> 
    <span class="tag">&lt;<span class="title">requestParsers</span> <span class="attribute">enableRemoteStreaming</span>=<span class="value">"true"</span> 
                    <span class="attribute">multipartUploadLimitInKB</span>=<span class="value">"2048000"</span>
                    <span class="attribute">formdataUploadLimitInKB</span>=<span class="value">"2048"</span>
                    <span class="attribute">addHttpRequestToContext</span>=<span class="value">"false"</span>/&gt;</span>

    <span class="comment">&lt;!-- HTTP Caching

         Set HTTP caching related parameters (for proxy caches and clients).

         The options below instruct Solr not to output any HTTP Caching
         related headers
      --&gt;</span>
    <span class="tag">&lt;<span class="title">httpCaching</span> <span class="attribute">never304</span>=<span class="value">"true"</span> /&gt;</span>
    <span class="comment">&lt;!-- If you include a &lt;cacheControl&gt; directive, it will be used to
         generate a Cache-Control header (as well as an Expires header
         if the value contains "max-age=")
         
         By default, no Cache-Control header is generated.
         
         You can use the &lt;cacheControl&gt; option even if you have set
         never304="true"
      --&gt;</span>
    <span class="comment">&lt;!--
       &lt;httpCaching never304="true" &gt;
         &lt;cacheControl&gt;max-age=30, public&lt;/cacheControl&gt; 
       &lt;/httpCaching&gt;
      --&gt;</span>
    <span class="comment">&lt;!-- To enable Solr to respond with automatically generated HTTP
         Caching headers, and to response to Cache Validation requests
         correctly, set the value of never304="false"
         
         This will cause Solr to generate Last-Modified and ETag
         headers based on the properties of the Index.

         The following options can also be specified to affect the
         values of these headers...

         lastModFrom - the default value is "openTime" which means the
         Last-Modified value (and validation against If-Modified-Since
         requests) will all be relative to when the current Searcher
         was opened.  You can change it to lastModFrom="dirLastMod" if
         you want the value to exactly correspond to when the physical
         index was last modified.

         etagSeed="..." is an option you can change to force the ETag
         header (and validation against If-None-Match requests) to be
         different even if the index has not changed (ie: when making
         significant changes to your config file)

         (lastModifiedFrom and etagSeed are both ignored if you use
         the never304="true" option)
      --&gt;</span>
    <span class="comment">&lt;!--
       &lt;httpCaching lastModifiedFrom="openTime"
                    etagSeed="Solr"&gt;
         &lt;cacheControl&gt;max-age=30, public&lt;/cacheControl&gt; 
       &lt;/httpCaching&gt;
      --&gt;</span>
  <span class="tag">&lt;/<span class="title">requestDispatcher</span>&gt;</span>

  <span class="comment">&lt;!-- Request Handlers 

       http://wiki.apache.org/solr/SolrRequestHandler

       Incoming queries will be dispatched to a specific handler by name
       based on the path specified in the request.

       Legacy behavior: If the request path uses "/select" but no Request
       Handler has that name, and if handleSelect="true" has been specified in
       the requestDispatcher, then the Request Handler is dispatched based on
       the qt parameter.  Handlers without a leading '/' are accessed this way
       like so: http://host/app/[core/]select?qt=name  If no qt is
       given, then the requestHandler that declares default="true" will be
       used or the one named "standard".

       If a Request Handler is declared with startup="lazy", then it will
       not be initialized until the first request that uses it.

    --&gt;</span>
  <span class="comment">&lt;!-- SearchHandler

       http://wiki.apache.org/solr/SearchHandler

       For processing Search Queries, the primary Request Handler
       provided with Solr is "SearchHandler" It delegates to a sequent
       of SearchComponents (see below) and supports distributed
       queries across multiple shards
    --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/select"</span> <span class="attribute">class</span>=<span class="value">"solr.SearchHandler"</span>&gt;</span>
    <span class="comment">&lt;!-- default values for query parameters can be specified, these
         will be overridden by parameters in the request
      --&gt;</span>
     <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"echoParams"</span>&gt;</span>explicit<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"rows"</span>&gt;</span>10<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"df"</span>&gt;</span>text<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
     <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
    <span class="comment">&lt;!-- In addition to defaults, "appends" params can be specified
         to identify values which should be appended to the list of
         multi-val params from the query (or the existing "defaults").
      --&gt;</span>
    <span class="comment">&lt;!-- In this example, the param "fq=instock:true" would be appended to
         any query time fq params the user may specify, as a mechanism for
         partitioning the index, independent of any user selected filtering
         that may also be desired (perhaps as a result of faceted searching).

         NOTE: there is *absolutely* nothing a client can do to prevent these
         "appends" values from being used, so don't use this mechanism
         unless you are sure you always want it.
      --&gt;</span>
    <span class="comment">&lt;!--
       &lt;lst name="appends"&gt;
         &lt;str name="fq"&gt;inStock:true&lt;/str&gt;
       &lt;/lst&gt;
      --&gt;</span>
    <span class="comment">&lt;!-- "invariants" are a way of letting the Solr maintainer lock down
         the options available to Solr clients.  Any params values
         specified here are used regardless of what values may be specified
         in either the query, the "defaults", or the "appends" params.

         In this example, the facet.field and facet.query params would
         be fixed, limiting the facets clients can use.  Faceting is
         not turned on by default - but if the client does specify
         facet=true in the request, these are the only facets they
         will be able to see counts for; regardless of what other
         facet.field or facet.query params they may specify.

         NOTE: there is *absolutely* nothing a client can do to prevent these
         "invariants" values from being used, so don't use this mechanism
         unless you are sure you always want it.
      --&gt;</span>
    <span class="comment">&lt;!--
       &lt;lst name="invariants"&gt;
         &lt;str name="facet.field"&gt;cat&lt;/str&gt;
         &lt;str name="facet.field"&gt;manu_exact&lt;/str&gt;
         &lt;str name="facet.query"&gt;price:[* TO 500]&lt;/str&gt;
         &lt;str name="facet.query"&gt;price:[500 TO *]&lt;/str&gt;
       &lt;/lst&gt;
      --&gt;</span>
    <span class="comment">&lt;!-- If the default list of SearchComponents is not desired, that
         list can either be overridden completely, or components can be
         prepended or appended to the default list.  (see below)
      --&gt;</span>
    <span class="comment">&lt;!--
       &lt;arr name="components"&gt;
         &lt;str&gt;nameOfCustomComponent1&lt;/str&gt;
         &lt;str&gt;nameOfCustomComponent2&lt;/str&gt;
       &lt;/arr&gt;
      --&gt;</span>
    <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>

  <span class="comment">&lt;!-- A request handler that returns indented JSON by default --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/query"</span> <span class="attribute">class</span>=<span class="value">"solr.SearchHandler"</span>&gt;</span>
     <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"echoParams"</span>&gt;</span>explicit<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"wt"</span>&gt;</span>json<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"indent"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"df"</span>&gt;</span>text<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
     <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>


  <span class="comment">&lt;!-- realtime get handler, guaranteed to return the latest stored fields of
       any document, without the need to commit or open a new searcher.  The
       current implementation relies on the updateLog feature being enabled.

       ** WARNING **
       Do NOT disable the realtime get handler at /get if you are using
       SolrCloud otherwise any leader election will cause a full sync in ALL
       replicas for the shard in question. Similarly, a replica recovery will
       also always fetch the complete index from the leader because a partial
       sync will not be possible in the absence of this handler.
  --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/get"</span> <span class="attribute">class</span>=<span class="value">"solr.RealTimeGetHandler"</span>&gt;</span>
     <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"omitHeader"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"wt"</span>&gt;</span>json<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"indent"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
     <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>

 
  <span class="comment">&lt;!-- A Robust Example 
       
       This example SearchHandler declaration shows off usage of the
       SearchHandler with many defaults declared

       Note that multiple instances of the same Request Handler
       (SearchHandler) can be registered multiple times with different
       names (and different init parameters)
    --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/browse"</span> <span class="attribute">class</span>=<span class="value">"solr.SearchHandler"</span>&gt;</span>
     <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"echoParams"</span>&gt;</span>explicit<span class="tag">&lt;/<span class="title">str</span>&gt;</span>

       <span class="comment">&lt;!-- VelocityResponseWriter settings --&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"wt"</span>&gt;</span>velocity<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"v.template"</span>&gt;</span>browse<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"v.layout"</span>&gt;</span>layout<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"title"</span>&gt;</span>Solritas<span class="tag">&lt;/<span class="title">str</span>&gt;</span>

       <span class="comment">&lt;!-- Query settings --&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"defType"</span>&gt;</span>edismax<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"qf"</span>&gt;</span>
          text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
          title^10.0 description^5.0 keywords^5.0 author^2.0 resourcename^1.0
       <span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"df"</span>&gt;</span>text<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"mm"</span>&gt;</span>100%<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"q.alt"</span>&gt;</span>*:*<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"rows"</span>&gt;</span>10<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"fl"</span>&gt;</span>*,score<span class="tag">&lt;/<span class="title">str</span>&gt;</span>

       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"mlt.qf"</span>&gt;</span>
         text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
         title^10.0 description^5.0 keywords^5.0 author^2.0 resourcename^1.0
       <span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"mlt.fl"</span>&gt;</span>text,features,name,sku,id,manu,cat,title,description,keywords,author,resourcename<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"mlt.count"</span>&gt;</span>3<span class="tag">&lt;/<span class="title">int</span>&gt;</span>

       <span class="comment">&lt;!-- Faceting defaults --&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"facet"</span>&gt;</span>on<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"facet.field"</span>&gt;</span>cat<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"facet.field"</span>&gt;</span>manu_exact<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"facet.field"</span>&gt;</span>content_type<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"facet.field"</span>&gt;</span>author_s<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"facet.query"</span>&gt;</span>ipod<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"facet.query"</span>&gt;</span>GB<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"facet.mincount"</span>&gt;</span>1<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"facet.pivot"</span>&gt;</span>cat,inStock<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"facet.range.other"</span>&gt;</span>after<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"facet.range"</span>&gt;</span>price<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"f.price.facet.range.start"</span>&gt;</span>0<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
       <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"f.price.facet.range.end"</span>&gt;</span>600<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
       <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"f.price.facet.range.gap"</span>&gt;</span>50<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"facet.range"</span>&gt;</span>popularity<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"f.popularity.facet.range.start"</span>&gt;</span>0<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
       <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"f.popularity.facet.range.end"</span>&gt;</span>10<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
       <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"f.popularity.facet.range.gap"</span>&gt;</span>3<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"facet.range"</span>&gt;</span>manufacturedate_dt<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"f.manufacturedate_dt.facet.range.start"</span>&gt;</span>NOW/YEAR-10YEARS<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"f.manufacturedate_dt.facet.range.end"</span>&gt;</span>NOW<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"f.manufacturedate_dt.facet.range.gap"</span>&gt;</span>+1YEAR<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"f.manufacturedate_dt.facet.range.other"</span>&gt;</span>before<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"f.manufacturedate_dt.facet.range.other"</span>&gt;</span>after<span class="tag">&lt;/<span class="title">str</span>&gt;</span>

       <span class="comment">&lt;!-- Highlighting defaults --&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl"</span>&gt;</span>on<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl.fl"</span>&gt;</span>content features title name<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl.encoder"</span>&gt;</span>html<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl.simple.pre"</span>&gt;</span>&lt;b&gt;<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl.simple.post"</span>&gt;</span>&lt;/b&gt;<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"f.title.hl.fragsize"</span>&gt;</span>0<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"f.title.hl.alternateField"</span>&gt;</span>title<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"f.name.hl.fragsize"</span>&gt;</span>0<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"f.name.hl.alternateField"</span>&gt;</span>name<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"f.content.hl.snippets"</span>&gt;</span>3<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"f.content.hl.fragsize"</span>&gt;</span>200<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"f.content.hl.alternateField"</span>&gt;</span>content<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"f.content.hl.maxAlternateFieldLength"</span>&gt;</span>750<span class="tag">&lt;/<span class="title">str</span>&gt;</span>

       <span class="comment">&lt;!-- Spell checking defaults --&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck"</span>&gt;</span>on<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.extendedResults"</span>&gt;</span>false<span class="tag">&lt;/<span class="title">str</span>&gt;</span>       
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.count"</span>&gt;</span>5<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.alternativeTermCount"</span>&gt;</span>2<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.maxResultsForSuggest"</span>&gt;</span>5<span class="tag">&lt;/<span class="title">str</span>&gt;</span>       
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.collate"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.collateExtendedResults"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">str</span>&gt;</span>  
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.maxCollationTries"</span>&gt;</span>5<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.maxCollations"</span>&gt;</span>3<span class="tag">&lt;/<span class="title">str</span>&gt;</span>           
     <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>

     <span class="comment">&lt;!-- append spellchecking to our list of components --&gt;</span>
     <span class="tag">&lt;<span class="title">arr</span> <span class="attribute">name</span>=<span class="value">"last-components"</span>&gt;</span>
       <span class="tag">&lt;<span class="title">str</span>&gt;</span>spellcheck<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
     <span class="tag">&lt;/<span class="title">arr</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>


  <span class="comment">&lt;!-- Update Request Handler.  
       
       http://wiki.apache.org/solr/UpdateXmlMessages

       The canonical Request Handler for Modifying the Index through
       commands specified using XML, JSON, CSV, or JAVABIN

       Note: Since solr1.1 requestHandlers requires a valid content
       type header if posted in the body. For example, curl now
       requires: -H 'Content-type:text/xml; charset=utf-8'
       
       To override the request content type and force a specific 
       Content-type, use the request parameter: 
         ?update.contentType=text/csv
       
       This handler will pick a response format to match the input
       if the 'wt' parameter is not explicit
    --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/update"</span> <span class="attribute">class</span>=<span class="value">"solr.UpdateRequestHandler"</span>&gt;</span>
    <span class="comment">&lt;!-- See below for information on defining 
         updateRequestProcessorChains that can be used by name 
         on each Update Request
      --&gt;</span>
    <span class="comment">&lt;!--
       &lt;lst name="defaults"&gt;
         &lt;str name="update.chain"&gt;dedupe&lt;/str&gt;
       &lt;/lst&gt;
       --&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>

  <span class="comment">&lt;!-- for back compat with clients using /update/json and /update/csv --&gt;</span>  
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/update/json"</span> <span class="attribute">class</span>=<span class="value">"solr.UpdateRequestHandler"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
         <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"stream.contentType"</span>&gt;</span>application/json<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/update/csv"</span> <span class="attribute">class</span>=<span class="value">"solr.UpdateRequestHandler"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
         <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"stream.contentType"</span>&gt;</span>application/csv<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
       <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>

  <span class="comment">&lt;!-- Solr Cell Update Request Handler

       http://wiki.apache.org/solr/ExtractingRequestHandler 

    --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/update/extract"</span> 
                  <span class="attribute">startup</span>=<span class="value">"lazy"</span>
                  <span class="attribute">class</span>=<span class="value">"solr.extraction.ExtractingRequestHandler"</span> &gt;</span>
    <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"lowernames"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"uprefix"</span>&gt;</span>ignored_<span class="tag">&lt;/<span class="title">str</span>&gt;</span>

      <span class="comment">&lt;!-- capture link hrefs but ignore div attributes --&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"captureAttr"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"fmap.a"</span>&gt;</span>links<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"fmap.div"</span>&gt;</span>ignored_<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>


  <span class="comment">&lt;!-- Field Analysis Request Handler

       RequestHandler that provides much the same functionality as
       analysis.jsp. Provides the ability to specify multiple field
       types and field names in the same request and outputs
       index-time and query-time analysis for each of them.

       Request parameters are:
       analysis.fieldname - field name whose analyzers are to be used

       analysis.fieldtype - field type whose analyzers are to be used
       analysis.fieldvalue - text for index-time analysis
       q (or analysis.q) - text for query time analysis
       analysis.showmatch (true|false) - When set to true and when
           query analysis is performed, the produced tokens of the
           field value analysis will be marked as "matched" for every
           token that is produces by the query analysis
   --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/analysis/field"</span> 
                  <span class="attribute">startup</span>=<span class="value">"lazy"</span>
                  <span class="attribute">class</span>=<span class="value">"solr.FieldAnalysisRequestHandler"</span> /&gt;</span>


  <span class="comment">&lt;!-- Document Analysis Handler

       http://wiki.apache.org/solr/AnalysisRequestHandler

       An analysis handler that provides a breakdown of the analysis
       process of provided documents. This handler expects a (single)
       content stream with the following format:

       &lt;docs&gt;
         &lt;doc&gt;
           &lt;field name="id"&gt;1&lt;/field&gt;
           &lt;field name="name"&gt;The Name&lt;/field&gt;
           &lt;field name="text"&gt;The Text Value&lt;/field&gt;
         &lt;/doc&gt;
         &lt;doc&gt;...&lt;/doc&gt;
         &lt;doc&gt;...&lt;/doc&gt;
         ...
       &lt;/docs&gt;

    Note: Each document must contain a field which serves as the
    unique key. This key is used in the returned response to associate
    an analysis breakdown to the analyzed document.

    Like the FieldAnalysisRequestHandler, this handler also supports
    query analysis by sending either an "analysis.query" or "q"
    request parameter that holds the query text to be analyzed. It
    also supports the "analysis.showmatch" parameter which when set to
    true, all field tokens that match the query tokens will be marked
    as a "match". 
  --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/analysis/document"</span> 
                  <span class="attribute">class</span>=<span class="value">"solr.DocumentAnalysisRequestHandler"</span> 
                  <span class="attribute">startup</span>=<span class="value">"lazy"</span> /&gt;</span>

  <span class="comment">&lt;!-- Admin Handlers

       Admin Handlers - This will register all the standard admin
       RequestHandlers.  
    --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/admin/"</span> 
                  <span class="attribute">class</span>=<span class="value">"solr.admin.AdminHandlers"</span> /&gt;</span>
  <span class="comment">&lt;!-- This single handler is equivalent to the following... --&gt;</span>
  <span class="comment">&lt;!--
     &lt;requestHandler name="/admin/luke"       class="solr.admin.LukeRequestHandler" /&gt;
     &lt;requestHandler name="/admin/system"     class="solr.admin.SystemInfoHandler" /&gt;
     &lt;requestHandler name="/admin/plugins"    class="solr.admin.PluginInfoHandler" /&gt;
     &lt;requestHandler name="/admin/threads"    class="solr.admin.ThreadDumpHandler" /&gt;
     &lt;requestHandler name="/admin/properties" class="solr.admin.PropertiesRequestHandler" /&gt;
     &lt;requestHandler name="/admin/file"       class="solr.admin.ShowFileRequestHandler" &gt;
    --&gt;</span>
  <span class="comment">&lt;!-- If you wish to hide files under ${solr.home}/conf, explicitly
       register the ShowFileRequestHandler using the definition below. 
       NOTE: The glob pattern ('*') is the only pattern supported at present, *.xml will
             not exclude all files ending in '.xml'. Use it to exclude _all_ updates
    --&gt;</span>
  <span class="comment">&lt;!--
     &lt;requestHandler name="/admin/file" 
                     class="solr.admin.ShowFileRequestHandler" &gt;
       &lt;lst name="invariants"&gt;
         &lt;str name="hidden"&gt;synonyms.txt&lt;/str&gt; 
         &lt;str name="hidden"&gt;anotherfile.txt&lt;/str&gt; 
         &lt;str name="hidden"&gt;*&lt;/str&gt; 
       &lt;/lst&gt;
     &lt;/requestHandler&gt;
    --&gt;</span>

  <span class="comment">&lt;!--
    Enabling this request handler (which is NOT a default part of the admin handler) will allow the Solr UI to edit
    all the config files. This is intended for secure/development use ONLY! Leaving available and publically
    accessible is a security vulnerability and should be done with extreme caution!
  --&gt;</span>
  <span class="comment">&lt;!-- ping/healthcheck --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/admin/ping"</span> <span class="attribute">class</span>=<span class="value">"solr.PingRequestHandler"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"invariants"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"q"</span>&gt;</span>solrpingquery<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
    <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"echoParams"</span>&gt;</span>all<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
    <span class="comment">&lt;!-- An optional feature of the PingRequestHandler is to configure the 
         handler with a "healthcheckFile" which can be used to enable/disable 
         the PingRequestHandler.
         relative paths are resolved against the data dir 
      --&gt;</span>
    <span class="comment">&lt;!-- &lt;str name="healthcheckFile"&gt;server-enabled.txt&lt;/str&gt; --&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>

  <span class="comment">&lt;!-- Echo the request contents back to the client --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/debug/dump"</span> <span class="attribute">class</span>=<span class="value">"solr.DumpRequestHandler"</span> &gt;</span>
    <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
     <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"echoParams"</span>&gt;</span>explicit<span class="tag">&lt;/<span class="title">str</span>&gt;</span> 
     <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"echoHandler"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>
  
  <span class="comment">&lt;!-- Solr Replication

       The SolrReplicationHandler supports replicating indexes from a
       "master" used for indexing and "slaves" used for queries.

       http://wiki.apache.org/solr/SolrReplication 

       It is also necessary for SolrCloud to function (in Cloud mode, the
       replication handler is used to bulk transfer segments when nodes 
       are added or need to recover).

       https://wiki.apache.org/solr/SolrCloud/
    --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/replication"</span> <span class="attribute">class</span>=<span class="value">"solr.ReplicationHandler"</span> &gt;</span> 
    <span class="comment">&lt;!--
       To enable simple master/slave replication, uncomment one of the 
       sections below, depending on whether this solr instance should be
       the "master" or a "slave".  If this instance is a "slave" you will 
       also need to fill in the masterUrl to point to a real machine.
    --&gt;</span>
    <span class="comment">&lt;!--
       &lt;lst name="master"&gt;
         &lt;str name="replicateAfter"&gt;commit&lt;/str&gt;
         &lt;str name="replicateAfter"&gt;startup&lt;/str&gt;
         &lt;str name="confFiles"&gt;schema.xml,stopwords.txt&lt;/str&gt;
       &lt;/lst&gt;
    --&gt;</span>
    <span class="comment">&lt;!--
       &lt;lst name="slave"&gt;
         &lt;str name="masterUrl"&gt;http://your-master-hostname:8983/solr&lt;/str&gt;
         &lt;str name="pollInterval"&gt;00:00:60&lt;/str&gt;
       &lt;/lst&gt;
    --&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>

  <span class="comment">&lt;!-- Search Components

       Search components are registered to SolrCore and used by 
       instances of SearchHandler (which can access them by name)
       
       By default, the following components are available:
       
       &lt;searchComponent name="query"     class="solr.QueryComponent" /&gt;
       &lt;searchComponent name="facet"     class="solr.FacetComponent" /&gt;
       &lt;searchComponent name="mlt"       class="solr.MoreLikeThisComponent" /&gt;
       &lt;searchComponent name="highlight" class="solr.HighlightComponent" /&gt;
       &lt;searchComponent name="stats"     class="solr.StatsComponent" /&gt;
       &lt;searchComponent name="debug"     class="solr.DebugComponent" /&gt;
   
       Default configuration in a requestHandler would look like:

       &lt;arr name="components"&gt;
         &lt;str&gt;query&lt;/str&gt;
         &lt;str&gt;facet&lt;/str&gt;
         &lt;str&gt;mlt&lt;/str&gt;
         &lt;str&gt;highlight&lt;/str&gt;
         &lt;str&gt;stats&lt;/str&gt;
         &lt;str&gt;debug&lt;/str&gt;
       &lt;/arr&gt;

       If you register a searchComponent to one of the standard names, 
       that will be used instead of the default.

       To insert components before or after the 'standard' components, use:
    
       &lt;arr name="first-components"&gt;
         &lt;str&gt;myFirstComponentName&lt;/str&gt;
       &lt;/arr&gt;
    
       &lt;arr name="last-components"&gt;
         &lt;str&gt;myLastComponentName&lt;/str&gt;
       &lt;/arr&gt;

       NOTE: The component registered with the name "debug" will
       always be executed after the "last-components" 
       
     --&gt;</span>
  
   <span class="comment">&lt;!-- Spell Check

        The spell check component can return a list of alternative spelling
        suggestions.  

        http://wiki.apache.org/solr/SpellCheckComponent
     --&gt;</span>
  <span class="tag">&lt;<span class="title">searchComponent</span> <span class="attribute">name</span>=<span class="value">"spellcheck"</span> <span class="attribute">class</span>=<span class="value">"solr.SpellCheckComponent"</span>&gt;</span>

    <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"queryAnalyzerFieldType"</span>&gt;</span>text_general<span class="tag">&lt;/<span class="title">str</span>&gt;</span>

    <span class="comment">&lt;!-- Multiple "Spell Checkers" can be declared and used by this
         component
      --&gt;</span>

    <span class="comment">&lt;!-- a spellchecker built from a field of the main index --&gt;</span>
    <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"spellchecker"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"name"</span>&gt;</span>default<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"field"</span>&gt;</span>text<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"classname"</span>&gt;</span>solr.DirectSolrSpellChecker<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="comment">&lt;!-- the spellcheck distance measure used, the default is the internal levenshtein --&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"distanceMeasure"</span>&gt;</span>internal<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="comment">&lt;!-- minimum accuracy needed to be considered a valid spellcheck suggestion --&gt;</span>
      <span class="tag">&lt;<span class="title">float</span> <span class="attribute">name</span>=<span class="value">"accuracy"</span>&gt;</span>0.5<span class="tag">&lt;/<span class="title">float</span>&gt;</span>
      <span class="comment">&lt;!-- the maximum #edits we consider when enumerating terms: can be 1 or 2 --&gt;</span>
      <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"maxEdits"</span>&gt;</span>2<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
      <span class="comment">&lt;!-- the minimum shared prefix when enumerating terms --&gt;</span>
      <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"minPrefix"</span>&gt;</span>1<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
      <span class="comment">&lt;!-- maximum number of inspections per result. --&gt;</span>
      <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"maxInspections"</span>&gt;</span>5<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
      <span class="comment">&lt;!-- minimum length of a query term to be considered for correction --&gt;</span>
      <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"minQueryLength"</span>&gt;</span>4<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
      <span class="comment">&lt;!-- maximum threshold of documents a query term can appear to be considered for correction --&gt;</span>
      <span class="tag">&lt;<span class="title">float</span> <span class="attribute">name</span>=<span class="value">"maxQueryFrequency"</span>&gt;</span>0.01<span class="tag">&lt;/<span class="title">float</span>&gt;</span>
      <span class="comment">&lt;!-- uncomment this to require suggestions to occur in 1% of the documents
      	&lt;float name="thresholdTokenFrequency"&gt;.01&lt;/float&gt;
      --&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
    
    <span class="comment">&lt;!-- a spellchecker that can break or combine words.  See "/spell" handler below for usage --&gt;</span>
    <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"spellchecker"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"name"</span>&gt;</span>wordbreak<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"classname"</span>&gt;</span>solr.WordBreakSolrSpellChecker<span class="tag">&lt;/<span class="title">str</span>&gt;</span>      
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"field"</span>&gt;</span>name<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"combineWords"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"breakWords"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"maxChanges"</span>&gt;</span>10<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>

    <span class="comment">&lt;!-- a spellchecker that uses a different distance measure --&gt;</span>
    <span class="comment">&lt;!--
       &lt;lst name="spellchecker"&gt;
         &lt;str name="name"&gt;jarowinkler&lt;/str&gt;
         &lt;str name="field"&gt;spell&lt;/str&gt;
         &lt;str name="classname"&gt;solr.DirectSolrSpellChecker&lt;/str&gt;
         &lt;str name="distanceMeasure"&gt;
           org.apache.lucene.search.spell.JaroWinklerDistance
         &lt;/str&gt;
       &lt;/lst&gt;
     --&gt;</span>

    <span class="comment">&lt;!-- a spellchecker that use an alternate comparator 

         comparatorClass be one of:
          1. score (default)
          2. freq (Frequency first, then score)
          3. A fully qualified class name
      --&gt;</span>
    <span class="comment">&lt;!--
       &lt;lst name="spellchecker"&gt;
         &lt;str name="name"&gt;freq&lt;/str&gt;
         &lt;str name="field"&gt;lowerfilt&lt;/str&gt;
         &lt;str name="classname"&gt;solr.DirectSolrSpellChecker&lt;/str&gt;
         &lt;str name="comparatorClass"&gt;freq&lt;/str&gt;
      --&gt;</span>

    <span class="comment">&lt;!-- A spellchecker that reads the list of words from a file --&gt;</span>
    <span class="comment">&lt;!--
       &lt;lst name="spellchecker"&gt;
         &lt;str name="classname"&gt;solr.FileBasedSpellChecker&lt;/str&gt;
         &lt;str name="name"&gt;file&lt;/str&gt;
         &lt;str name="sourceLocation"&gt;spellings.txt&lt;/str&gt;
         &lt;str name="characterEncoding"&gt;UTF-8&lt;/str&gt;
         &lt;str name="spellcheckIndexDir"&gt;spellcheckerFile&lt;/str&gt;
       &lt;/lst&gt;
      --&gt;</span>
  <span class="tag">&lt;/<span class="title">searchComponent</span>&gt;</span>
  
  <span class="comment">&lt;!-- A request handler for demonstrating the spellcheck component.  

       NOTE: This is purely as an example.  The whole purpose of the
       SpellCheckComponent is to hook it into the request handler that
       handles your normal user queries so that a separate request is
       not needed to get suggestions.

       IN OTHER WORDS, THERE IS REALLY GOOD CHANCE THE SETUP BELOW IS
       NOT WHAT YOU WANT FOR YOUR PRODUCTION SYSTEM!
       
       See http://wiki.apache.org/solr/SpellCheckComponent for details
       on the request parameters.
    --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/spell"</span> <span class="attribute">class</span>=<span class="value">"solr.SearchHandler"</span> <span class="attribute">startup</span>=<span class="value">"lazy"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"df"</span>&gt;</span>text<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="comment">&lt;!-- Solr will use suggestions from both the 'default' spellchecker
           and from the 'wordbreak' spellchecker and combine them.
           collations (re-written queries) can include a combination of
           corrections from both spellcheckers --&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.dictionary"</span>&gt;</span>default<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.dictionary"</span>&gt;</span>wordbreak<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck"</span>&gt;</span>on<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.extendedResults"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">str</span>&gt;</span>       
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.count"</span>&gt;</span>10<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.alternativeTermCount"</span>&gt;</span>5<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.maxResultsForSuggest"</span>&gt;</span>5<span class="tag">&lt;/<span class="title">str</span>&gt;</span>       
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.collate"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.collateExtendedResults"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">str</span>&gt;</span>  
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.maxCollationTries"</span>&gt;</span>10<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"spellcheck.maxCollations"</span>&gt;</span>5<span class="tag">&lt;/<span class="title">str</span>&gt;</span>         
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
    <span class="tag">&lt;<span class="title">arr</span> <span class="attribute">name</span>=<span class="value">"last-components"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span>&gt;</span>spellcheck<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">arr</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>

  <span class="tag">&lt;<span class="title">searchComponent</span> <span class="attribute">name</span>=<span class="value">"suggest"</span> <span class="attribute">class</span>=<span class="value">"solr.SuggestComponent"</span>&gt;</span>
  	<span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"suggester"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"name"</span>&gt;</span>mySuggester<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"lookupImpl"</span>&gt;</span>FuzzyLookupFactory<span class="tag">&lt;/<span class="title">str</span>&gt;</span>      <span class="comment">&lt;!-- org.apache.solr.spelling.suggest.fst --&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"dictionaryImpl"</span>&gt;</span>DocumentDictionaryFactory<span class="tag">&lt;/<span class="title">str</span>&gt;</span>     <span class="comment">&lt;!-- org.apache.solr.spelling.suggest.HighFrequencyDictionaryFactory --&gt;</span> 
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"field"</span>&gt;</span>cat<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"weightField"</span>&gt;</span>price<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"suggestAnalyzerFieldType"</span>&gt;</span>string<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">searchComponent</span>&gt;</span>

  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/suggest"</span> <span class="attribute">class</span>=<span class="value">"solr.SearchHandler"</span> <span class="attribute">startup</span>=<span class="value">"lazy"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"suggest"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"suggest.count"</span>&gt;</span>10<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
    <span class="tag">&lt;<span class="title">arr</span> <span class="attribute">name</span>=<span class="value">"components"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span>&gt;</span>suggest<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">arr</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>
  <span class="comment">&lt;!-- Term Vector Component

       http://wiki.apache.org/solr/TermVectorComponent
    --&gt;</span>
  <span class="tag">&lt;<span class="title">searchComponent</span> <span class="attribute">name</span>=<span class="value">"tvComponent"</span> <span class="attribute">class</span>=<span class="value">"solr.TermVectorComponent"</span>/&gt;</span>

  <span class="comment">&lt;!-- A request handler for demonstrating the term vector component

       This is purely as an example.

       In reality you will likely want to add the component to your 
       already specified request handlers. 
    --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/tvrh"</span> <span class="attribute">class</span>=<span class="value">"solr.SearchHandler"</span> <span class="attribute">startup</span>=<span class="value">"lazy"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"df"</span>&gt;</span>text<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">bool</span> <span class="attribute">name</span>=<span class="value">"tv"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">bool</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
    <span class="tag">&lt;<span class="title">arr</span> <span class="attribute">name</span>=<span class="value">"last-components"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span>&gt;</span>tvComponent<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">arr</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>

  <span class="comment">&lt;!-- Clustering Component

       You'll need to set the solr.clustering.enabled system property
       when running solr to run with clustering enabled:

            java -Dsolr.clustering.enabled=true -jar start.jar

       http://wiki.apache.org/solr/ClusteringComponent
       http://carrot2.github.io/solr-integration-strategies/
    --&gt;</span>
  <span class="tag">&lt;<span class="title">searchComponent</span> <span class="attribute">name</span>=<span class="value">"clustering"</span>
                   <span class="attribute">enable</span>=<span class="value">"${solr.clustering.enabled:false}"</span>
                   <span class="attribute">class</span>=<span class="value">"solr.clustering.ClusteringComponent"</span> &gt;</span>
    <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"engine"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"name"</span>&gt;</span>lingo<span class="tag">&lt;/<span class="title">str</span>&gt;</span>

      <span class="comment">&lt;!-- Class name of a clustering algorithm compatible with the Carrot2 framework.

           Currently available open source algorithms are:
           * org.carrot2.clustering.lingo.LingoClusteringAlgorithm
           * org.carrot2.clustering.stc.STCClusteringAlgorithm
           * org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm

           See http://project.carrot2.org/algorithms.html for more information.

           A commercial algorithm Lingo3G (needs to be installed separately) is defined as:
           * com.carrotsearch.lingo3g.Lingo3GClusteringAlgorithm
        --&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"carrot.algorithm"</span>&gt;</span>org.carrot2.clustering.lingo.LingoClusteringAlgorithm<span class="tag">&lt;/<span class="title">str</span>&gt;</span>

      <span class="comment">&lt;!-- Override location of the clustering algorithm's resources 
           (attribute definitions and lexical resources).

           A directory from which to load algorithm-specific stop words,
           stop labels and attribute definition XMLs. 

           For an overview of Carrot2 lexical resources, see:
           http://download.carrot2.org/head/manual/#chapter.lexical-resources

           For an overview of Lingo3G lexical resources, see:
           http://download.carrotsearch.com/lingo3g/manual/#chapter.lexical-resources
       --&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"carrot.resourcesDir"</span>&gt;</span>clustering/carrot2<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>

    <span class="comment">&lt;!-- An example definition for the STC clustering algorithm. --&gt;</span>
    <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"engine"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"name"</span>&gt;</span>stc<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"carrot.algorithm"</span>&gt;</span>org.carrot2.clustering.stc.STCClusteringAlgorithm<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>

    <span class="comment">&lt;!-- An example definition for the bisecting kmeans clustering algorithm. --&gt;</span>
    <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"engine"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"name"</span>&gt;</span>kmeans<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"carrot.algorithm"</span>&gt;</span>org.carrot2.clustering.kmeans.BisectingKMeansClusteringAlgorithm<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">searchComponent</span>&gt;</span>

  <span class="comment">&lt;!-- A request handler for demonstrating the clustering component

       This is purely as an example.

       In reality you will likely want to add the component to your 
       already specified request handlers. 
    --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/clustering"</span>
                  <span class="attribute">startup</span>=<span class="value">"lazy"</span>
                  <span class="attribute">enable</span>=<span class="value">"${solr.clustering.enabled:false}"</span>
                  <span class="attribute">class</span>=<span class="value">"solr.SearchHandler"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">bool</span> <span class="attribute">name</span>=<span class="value">"clustering"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">bool</span>&gt;</span>
      <span class="tag">&lt;<span class="title">bool</span> <span class="attribute">name</span>=<span class="value">"clustering.results"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">bool</span>&gt;</span>
      <span class="comment">&lt;!-- Field name with the logical "title" of a each document (optional) --&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"carrot.title"</span>&gt;</span>name<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="comment">&lt;!-- Field name with the logical "URL" of a each document (optional) --&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"carrot.url"</span>&gt;</span>id<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="comment">&lt;!-- Field name with the logical "content" of a each document (optional) --&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"carrot.snippet"</span>&gt;</span>features<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="comment">&lt;!-- Apply highlighter to the title/ content and use this for clustering. --&gt;</span>
      <span class="tag">&lt;<span class="title">bool</span> <span class="attribute">name</span>=<span class="value">"carrot.produceSummary"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">bool</span>&gt;</span>
      <span class="comment">&lt;!-- the maximum number of labels per cluster --&gt;</span>
      <span class="comment">&lt;!--&lt;int name="carrot.numDescriptions"&gt;5&lt;/int&gt;--&gt;</span>
      <span class="comment">&lt;!-- produce sub clusters --&gt;</span>
      <span class="tag">&lt;<span class="title">bool</span> <span class="attribute">name</span>=<span class="value">"carrot.outputSubClusters"</span>&gt;</span>false<span class="tag">&lt;/<span class="title">bool</span>&gt;</span>

      <span class="comment">&lt;!-- Configure the remaining request handler parameters. --&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"defType"</span>&gt;</span>edismax<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"qf"</span>&gt;</span>
        text^0.5 features^1.0 name^1.2 sku^1.5 id^10.0 manu^1.1 cat^1.4
      <span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"q.alt"</span>&gt;</span>*:*<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"rows"</span>&gt;</span>10<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"fl"</span>&gt;</span>*,score<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
    <span class="tag">&lt;<span class="title">arr</span> <span class="attribute">name</span>=<span class="value">"last-components"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span>&gt;</span>clustering<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">arr</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>
  
  <span class="comment">&lt;!-- Terms Component

       http://wiki.apache.org/solr/TermsComponent

       A component to return terms and document frequency of those
       terms
    --&gt;</span>
  <span class="tag">&lt;<span class="title">searchComponent</span> <span class="attribute">name</span>=<span class="value">"terms"</span> <span class="attribute">class</span>=<span class="value">"solr.TermsComponent"</span>/&gt;</span>

  <span class="comment">&lt;!-- A request handler for demonstrating the terms component --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/terms"</span> <span class="attribute">class</span>=<span class="value">"solr.SearchHandler"</span> <span class="attribute">startup</span>=<span class="value">"lazy"</span>&gt;</span>
     <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">bool</span> <span class="attribute">name</span>=<span class="value">"terms"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">bool</span>&gt;</span>
      <span class="tag">&lt;<span class="title">bool</span> <span class="attribute">name</span>=<span class="value">"distrib"</span>&gt;</span>false<span class="tag">&lt;/<span class="title">bool</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>     
    <span class="tag">&lt;<span class="title">arr</span> <span class="attribute">name</span>=<span class="value">"components"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span>&gt;</span>terms<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">arr</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>


  <span class="comment">&lt;!-- Query Elevation Component

       http://wiki.apache.org/solr/QueryElevationComponent

       a search component that enables you to configure the top
       results for a given query regardless of the normal lucene
       scoring.
    --&gt;</span>
  <span class="tag">&lt;<span class="title">searchComponent</span> <span class="attribute">name</span>=<span class="value">"elevator"</span> <span class="attribute">class</span>=<span class="value">"solr.QueryElevationComponent"</span> &gt;</span>
    <span class="comment">&lt;!-- pick a fieldType to analyze queries --&gt;</span>
    <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"queryFieldType"</span>&gt;</span>string<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"config-file"</span>&gt;</span>elevate.xml<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">searchComponent</span>&gt;</span>

  <span class="comment">&lt;!-- A request handler for demonstrating the elevator component --&gt;</span>
  <span class="tag">&lt;<span class="title">requestHandler</span> <span class="attribute">name</span>=<span class="value">"/elevate"</span> <span class="attribute">class</span>=<span class="value">"solr.SearchHandler"</span> <span class="attribute">startup</span>=<span class="value">"lazy"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"echoParams"</span>&gt;</span>explicit<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"df"</span>&gt;</span>text<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
    <span class="tag">&lt;<span class="title">arr</span> <span class="attribute">name</span>=<span class="value">"last-components"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">str</span>&gt;</span>elevator<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">arr</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">requestHandler</span>&gt;</span>

  <span class="comment">&lt;!-- Highlighting Component

       http://wiki.apache.org/solr/HighlightingParameters
    --&gt;</span>
  <span class="tag">&lt;<span class="title">searchComponent</span> <span class="attribute">class</span>=<span class="value">"solr.HighlightComponent"</span> <span class="attribute">name</span>=<span class="value">"highlight"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">highlighting</span>&gt;</span>
      <span class="comment">&lt;!-- Configure the standard fragmenter --&gt;</span>
      <span class="comment">&lt;!-- This could most likely be commented out in the "default" case --&gt;</span>
      <span class="tag">&lt;<span class="title">fragmenter</span> <span class="attribute">name</span>=<span class="value">"gap"</span> 
                  <span class="attribute">default</span>=<span class="value">"true"</span>
                  <span class="attribute">class</span>=<span class="value">"solr.highlight.GapFragmenter"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
          <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"hl.fragsize"</span>&gt;</span>100<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">fragmenter</span>&gt;</span>

      <span class="comment">&lt;!-- A regular-expression-based fragmenter 
           (for sentence extraction) 
        --&gt;</span>
      <span class="tag">&lt;<span class="title">fragmenter</span> <span class="attribute">name</span>=<span class="value">"regex"</span> 
                  <span class="attribute">class</span>=<span class="value">"solr.highlight.RegexFragmenter"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
          <span class="comment">&lt;!-- slightly smaller fragsizes work better because of slop --&gt;</span>
          <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"hl.fragsize"</span>&gt;</span>70<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
          <span class="comment">&lt;!-- allow 50% slop on fragment sizes --&gt;</span>
          <span class="tag">&lt;<span class="title">float</span> <span class="attribute">name</span>=<span class="value">"hl.regex.slop"</span>&gt;</span>0.5<span class="tag">&lt;/<span class="title">float</span>&gt;</span>
          <span class="comment">&lt;!-- a basic sentence pattern --&gt;</span>
          <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl.regex.pattern"</span>&gt;</span>[-\w ,/\n\&quot;&apos;]{20,200}<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">fragmenter</span>&gt;</span>

      <span class="comment">&lt;!-- Configure the standard formatter --&gt;</span>
      <span class="tag">&lt;<span class="title">formatter</span> <span class="attribute">name</span>=<span class="value">"html"</span> 
                 <span class="attribute">default</span>=<span class="value">"true"</span>
                 <span class="attribute">class</span>=<span class="value">"solr.highlight.HtmlFormatter"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
          <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl.simple.pre"</span>&gt;</span><span class="cdata">&lt;![CDATA[&lt;em&gt;]]&gt;</span><span class="tag">&lt;/<span class="title">str</span>&gt;</span>
          <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl.simple.post"</span>&gt;</span><span class="cdata">&lt;![CDATA[&lt;/em&gt;]]&gt;</span><span class="tag">&lt;/<span class="title">str</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">formatter</span>&gt;</span>

      <span class="comment">&lt;!-- Configure the standard encoder --&gt;</span>
      <span class="tag">&lt;<span class="title">encoder</span> <span class="attribute">name</span>=<span class="value">"html"</span> 
               <span class="attribute">class</span>=<span class="value">"solr.highlight.HtmlEncoder"</span> /&gt;</span>

      <span class="comment">&lt;!-- Configure the standard fragListBuilder --&gt;</span>
      <span class="tag">&lt;<span class="title">fragListBuilder</span> <span class="attribute">name</span>=<span class="value">"simple"</span> 
                       <span class="attribute">class</span>=<span class="value">"solr.highlight.SimpleFragListBuilder"</span>/&gt;</span>
      
      <span class="comment">&lt;!-- Configure the single fragListBuilder --&gt;</span>
      <span class="tag">&lt;<span class="title">fragListBuilder</span> <span class="attribute">name</span>=<span class="value">"single"</span> 
                       <span class="attribute">class</span>=<span class="value">"solr.highlight.SingleFragListBuilder"</span>/&gt;</span>
      
      <span class="comment">&lt;!-- Configure the weighted fragListBuilder --&gt;</span>
      <span class="tag">&lt;<span class="title">fragListBuilder</span> <span class="attribute">name</span>=<span class="value">"weighted"</span> 
                       <span class="attribute">default</span>=<span class="value">"true"</span>
                       <span class="attribute">class</span>=<span class="value">"solr.highlight.WeightedFragListBuilder"</span>/&gt;</span>
      
      <span class="comment">&lt;!-- default tag FragmentsBuilder --&gt;</span>
      <span class="tag">&lt;<span class="title">fragmentsBuilder</span> <span class="attribute">name</span>=<span class="value">"default"</span> 
                        <span class="attribute">default</span>=<span class="value">"true"</span>
                        <span class="attribute">class</span>=<span class="value">"solr.highlight.ScoreOrderFragmentsBuilder"</span>&gt;</span>
        <span class="comment">&lt;!-- 
        &lt;lst name="defaults"&gt;
          &lt;str name="hl.multiValuedSeparatorChar"&gt;/&lt;/str&gt;
        &lt;/lst&gt;
        --&gt;</span>
      <span class="tag">&lt;/<span class="title">fragmentsBuilder</span>&gt;</span>

      <span class="comment">&lt;!-- multi-colored tag FragmentsBuilder --&gt;</span>
      <span class="tag">&lt;<span class="title">fragmentsBuilder</span> <span class="attribute">name</span>=<span class="value">"colored"</span> 
                        <span class="attribute">class</span>=<span class="value">"solr.highlight.ScoreOrderFragmentsBuilder"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
          <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl.tag.pre"</span>&gt;</span><span class="cdata">&lt;![CDATA[
               &lt;b style="background:yellow"&gt;,&lt;b style="background:lawgreen"&gt;,
               &lt;b style="background:aquamarine"&gt;,&lt;b style="background:magenta"&gt;,
               &lt;b style="background:palegreen"&gt;,&lt;b style="background:coral"&gt;,
               &lt;b style="background:wheat"&gt;,&lt;b style="background:khaki"&gt;,
               &lt;b style="background:lime"&gt;,&lt;b style="background:deepskyblue"&gt;]]&gt;</span><span class="tag">&lt;/<span class="title">str</span>&gt;</span>
          <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl.tag.post"</span>&gt;</span><span class="cdata">&lt;![CDATA[&lt;/b&gt;]]&gt;</span><span class="tag">&lt;/<span class="title">str</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">fragmentsBuilder</span>&gt;</span>
      
      <span class="tag">&lt;<span class="title">boundaryScanner</span> <span class="attribute">name</span>=<span class="value">"default"</span> 
                       <span class="attribute">default</span>=<span class="value">"true"</span>
                       <span class="attribute">class</span>=<span class="value">"solr.highlight.SimpleBoundaryScanner"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
          <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl.bs.maxScan"</span>&gt;</span>10<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
          <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl.bs.chars"</span>&gt;</span>.,!? &#9;&#10;&#13;<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">boundaryScanner</span>&gt;</span>
      
      <span class="tag">&lt;<span class="title">boundaryScanner</span> <span class="attribute">name</span>=<span class="value">"breakIterator"</span> 
                       <span class="attribute">class</span>=<span class="value">"solr.highlight.BreakIteratorBoundaryScanner"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">lst</span> <span class="attribute">name</span>=<span class="value">"defaults"</span>&gt;</span>
          <span class="comment">&lt;!-- type should be one of CHARACTER, WORD(default), LINE and SENTENCE --&gt;</span>
          <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl.bs.type"</span>&gt;</span>WORD<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
          <span class="comment">&lt;!-- language and country are used when constructing Locale object.  --&gt;</span>
          <span class="comment">&lt;!-- And the Locale object will be used when getting instance of BreakIterator --&gt;</span>
          <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl.bs.language"</span>&gt;</span>en<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
          <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"hl.bs.country"</span>&gt;</span>US<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">lst</span>&gt;</span>
      <span class="tag">&lt;/<span class="title">boundaryScanner</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">highlighting</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">searchComponent</span>&gt;</span>

  <span class="comment">&lt;!-- Update Processors

       Chains of Update Processor Factories for dealing with Update
       Requests can be declared, and then used by name in Update
       Request Processors

       http://wiki.apache.org/solr/UpdateRequestProcessor

    --&gt;</span> 
  <span class="comment">&lt;!-- Deduplication

       An example dedup update processor that creates the "id" field
       on the fly based on the hash code of some other fields.  This
       example has overwriteDupes set to false since we are using the
       id field as the signatureField and Solr will maintain
       uniqueness based on that anyway.  
       
    --&gt;</span>
  <span class="comment">&lt;!--
     &lt;updateRequestProcessorChain name="dedupe"&gt;
       &lt;processor class="solr.processor.SignatureUpdateProcessorFactory"&gt;
         &lt;bool name="enabled"&gt;true&lt;/bool&gt;
         &lt;str name="signatureField"&gt;id&lt;/str&gt;
         &lt;bool name="overwriteDupes"&gt;false&lt;/bool&gt;
         &lt;str name="fields"&gt;name,features,cat&lt;/str&gt;
         &lt;str name="signatureClass"&gt;solr.processor.Lookup3Signature&lt;/str&gt;
       &lt;/processor&gt;
       &lt;processor class="solr.LogUpdateProcessorFactory" /&gt;
       &lt;processor class="solr.RunUpdateProcessorFactory" /&gt;
     &lt;/updateRequestProcessorChain&gt;
    --&gt;</span>
  
  <span class="comment">&lt;!-- Language identification

       This example update chain identifies the language of the incoming
       documents using the langid contrib. The detected language is
       written to field language_s. No field name mapping is done.
       The fields used for detection are text, title, subject and description,
       making this example suitable for detecting languages form full-text
       rich documents injected via ExtractingRequestHandler.
       See more about langId at http://wiki.apache.org/solr/LanguageDetection
    --&gt;</span>
    <span class="comment">&lt;!--
     &lt;updateRequestProcessorChain name="langid"&gt;
       &lt;processor class="org.apache.solr.update.processor.TikaLanguageIdentifierUpdateProcessorFactory"&gt;
         &lt;str name="langid.fl"&gt;text,title,subject,description&lt;/str&gt;
         &lt;str name="langid.langField"&gt;language_s&lt;/str&gt;
         &lt;str name="langid.fallback"&gt;en&lt;/str&gt;
       &lt;/processor&gt;
       &lt;processor class="solr.LogUpdateProcessorFactory" /&gt;
       &lt;processor class="solr.RunUpdateProcessorFactory" /&gt;
     &lt;/updateRequestProcessorChain&gt;
    --&gt;</span>

  <span class="comment">&lt;!-- Script update processor

    This example hooks in an update processor implemented using JavaScript.

    See more about the script update processor at http://wiki.apache.org/solr/ScriptUpdateProcessor
  --&gt;</span>
  <span class="comment">&lt;!--
    &lt;updateRequestProcessorChain name="script"&gt;
      &lt;processor class="solr.StatelessScriptUpdateProcessorFactory"&gt;
        &lt;str name="script"&gt;update-script.js&lt;/str&gt;
        &lt;lst name="params"&gt;
          &lt;str name="config_param"&gt;example config parameter&lt;/str&gt;
        &lt;/lst&gt;
      &lt;/processor&gt;
      &lt;processor class="solr.RunUpdateProcessorFactory" /&gt;
    &lt;/updateRequestProcessorChain&gt;
  --&gt;</span>
 
  <span class="comment">&lt;!-- Response Writers

       http://wiki.apache.org/solr/QueryResponseWriter

       Request responses will be written using the writer specified by
       the 'wt' request parameter matching the name of a registered
       writer.

       The "default" writer is the default and will be used if 'wt' is
       not specified in the request.
    --&gt;</span>
  <span class="comment">&lt;!-- The following response writers are implicitly configured unless
       overridden...
    --&gt;</span>
  <span class="comment">&lt;!--
     &lt;queryResponseWriter name="xml" 
                          default="true"
                          class="solr.XMLResponseWriter" /&gt;
     &lt;queryResponseWriter name="json" class="solr.JSONResponseWriter"/&gt;
     &lt;queryResponseWriter name="python" class="solr.PythonResponseWriter"/&gt;
     &lt;queryResponseWriter name="ruby" class="solr.RubyResponseWriter"/&gt;
     &lt;queryResponseWriter name="php" class="solr.PHPResponseWriter"/&gt;
     &lt;queryResponseWriter name="phps" class="solr.PHPSerializedResponseWriter"/&gt;
     &lt;queryResponseWriter name="csv" class="solr.CSVResponseWriter"/&gt;
     &lt;queryResponseWriter name="schema.xml" class="solr.SchemaXmlResponseWriter"/&gt;
    --&gt;</span>

  <span class="tag">&lt;<span class="title">queryResponseWriter</span> <span class="attribute">name</span>=<span class="value">"json"</span> <span class="attribute">class</span>=<span class="value">"solr.JSONResponseWriter"</span>&gt;</span>
     <span class="comment">&lt;!-- For the purposes of the tutorial, JSON responses are written as
      plain text so that they are easy to read in *any* browser.
      If you expect a MIME type of "application/json" just remove this override.
     --&gt;</span>
    <span class="tag">&lt;<span class="title">str</span> <span class="attribute">name</span>=<span class="value">"content-type"</span>&gt;</span>text/plain; charset=UTF-8<span class="tag">&lt;/<span class="title">str</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">queryResponseWriter</span>&gt;</span>
  
  <span class="comment">&lt;!--
     Custom response writers can be declared as needed...
    --&gt;</span>
    <span class="tag">&lt;<span class="title">queryResponseWriter</span> <span class="attribute">name</span>=<span class="value">"velocity"</span> <span class="attribute">class</span>=<span class="value">"solr.VelocityResponseWriter"</span> <span class="attribute">startup</span>=<span class="value">"lazy"</span>/&gt;</span>
  

  <span class="comment">&lt;!-- XSLT response writer transforms the XML output by any xslt file found
       in Solr's conf/xslt directory.  Changes to xslt files are checked for
       every xsltCacheLifetimeSeconds.  
    --&gt;</span>
  <span class="tag">&lt;<span class="title">queryResponseWriter</span> <span class="attribute">name</span>=<span class="value">"xslt"</span> <span class="attribute">class</span>=<span class="value">"solr.XSLTResponseWriter"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">int</span> <span class="attribute">name</span>=<span class="value">"xsltCacheLifetimeSeconds"</span>&gt;</span>5<span class="tag">&lt;/<span class="title">int</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">queryResponseWriter</span>&gt;</span>

  <span class="comment">&lt;!-- Query Parsers

       http://wiki.apache.org/solr/SolrQuerySyntax

       Multiple QParserPlugins can be registered by name, and then
       used in either the "defType" param for the QueryComponent (used
       by SearchHandler) or in LocalParams
    --&gt;</span>
  <span class="comment">&lt;!-- example of registering a query parser --&gt;</span>
  <span class="comment">&lt;!--
     &lt;queryParser name="myparser" class="com.mycompany.MyQParserPlugin"/&gt;
    --&gt;</span>

  <span class="comment">&lt;!-- Function Parsers

       http://wiki.apache.org/solr/FunctionQuery

       Multiple ValueSourceParsers can be registered by name, and then
       used as function names when using the "func" QParser.
    --&gt;</span>
  <span class="comment">&lt;!-- example of registering a custom function parser  --&gt;</span>
  <span class="comment">&lt;!--
     &lt;valueSourceParser name="myfunc" 
                        class="com.mycompany.MyValueSourceParser" /&gt;
    --&gt;</span>
    
  
  <span class="comment">&lt;!-- Document Transformers
       http://wiki.apache.org/solr/DocTransformers
    --&gt;</span>
  <span class="comment">&lt;!--
     Could be something like:
     &lt;transformer name="db" class="com.mycompany.LoadFromDatabaseTransformer" &gt;
       &lt;int name="connection"&gt;jdbc://....&lt;/int&gt;
     &lt;/transformer&gt;
     
     To add a constant value to all docs, use:
     &lt;transformer name="mytrans2" class="org.apache.solr.response.transform.ValueAugmenterFactory" &gt;
       &lt;int name="value"&gt;5&lt;/int&gt;
     &lt;/transformer&gt;
     
     If you want the user to still be able to change it with _value:something_ use this:
     &lt;transformer name="mytrans3" class="org.apache.solr.response.transform.ValueAugmenterFactory" &gt;
       &lt;double name="defaultValue"&gt;5&lt;/double&gt;
     &lt;/transformer&gt;

      If you are using the QueryElevationComponent, you may wish to mark documents that get boosted.  The
      EditorialMarkerFactory will do exactly that:
     &lt;transformer name="qecBooster" class="org.apache.solr.response.transform.EditorialMarkerFactory" /&gt;
    --&gt;</span>
    

  <span class="comment">&lt;!-- Legacy config for the admin interface --&gt;</span>
  <span class="tag">&lt;<span class="title">admin</span>&gt;</span>
    <span class="tag">&lt;<span class="title">defaultQuery</span>&gt;</span>*:*<span class="tag">&lt;/<span class="title">defaultQuery</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">admin</span>&gt;</span>

<span class="tag">&lt;/<span class="title">config</span>&gt;</span>
</pre></td></tr></table></figure>

]]></content>
    
    
      <category term="solr" scheme="http://youfei.github.io/tags/solr/"/>
    
      <category term="solr" scheme="http://youfei.github.io/categories/solr/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MongoDB初读-2]]></title>
    <link href="http://youfei.github.io/2014/03/04/mongo-g-2/"/>
    <id>http://youfei.github.io/2014/03/04/mongo-g-2/</id>
    <published>2014-03-04T07:42:05.000Z</published>
    <updated>2014-03-05T03:52:26.000Z</updated>
    <content type="html"><![CDATA[<p>MongoDB初读</p>
<p><a id="more"></a></p>
<h1 id="getting-started">Getting-started</h1>
<p><a href="http://docs.mongodb.org/manual/tutorial/getting-started/" target="_blank">getting-started</a></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
</pre></td><td class="code"><pre>show dbs

use mydb

db

help

j = { name : <span class="string">"mongo"</span> }
k = { <span class="built_in">x</span> : <span class="number">3</span> }
db<span class="preprocessor">.testData</span><span class="preprocessor">.insert</span>( j )
db<span class="preprocessor">.testData</span><span class="preprocessor">.insert</span>( k )

show collections

db<span class="preprocessor">.testData</span><span class="preprocessor">.find</span>()

var c = db<span class="preprocessor">.testData</span><span class="preprocessor">.find</span>()
while ( c<span class="preprocessor">.hasNext</span>() ) printjson( c<span class="preprocessor">.next</span>() )

var c = db<span class="preprocessor">.testData</span><span class="preprocessor">.find</span>()
printjson( c [ <span class="number">1</span> ] )

db<span class="preprocessor">.testData</span><span class="preprocessor">.find</span>( { <span class="built_in">x</span> : <span class="number">3</span> } )

db<span class="preprocessor">.testData</span><span class="preprocessor">.findOne</span>()

db<span class="preprocessor">.testData</span><span class="preprocessor">.find</span>()<span class="preprocessor">.limit</span>(<span class="number">3</span>)
</pre></td></tr></table></figure>

<h1 id="generate-test-data">Generate Test Data</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="function"><span class="title">for</span> <span class="params">(var i = <span class="number">1</span>; i &lt;= <span class="number">25</span>; i++)</span> <span class="title">db</span>.<span class="title">testData</span>.<span class="title">insert</span><span class="params">( <span class="tuple">{ x : i }</span> )</span>

<span class="title">db</span>.<span class="title">testData</span>.<span class="title">find</span><span class="params">()</span></span>
</pre></td></tr></table></figure>

<h1 id="mongodb-crud">MongoDB CRUD</h1>
<p><a href="http://docs.mongodb.org/manual/reference/glossary/#term-bson" target="_blank">BSON</a></p>
<p>MongoDB query operation
<img src="http://docs.mongodb.org/manual/_images/crud-annotated-mongodb-find.png" alt="MongoDB query operation">
the same query in SQL
<img src="http://docs.mongodb.org/manual/_images/crud-annotated-sql-select.png" alt="the same query in SQL"></p>
<blockquote><p><strong>Projections</strong></p>
<p>&quot;_id&quot;: 0, &quot;name&quot;: 1 , &quot;email&quot;: 1 =&gt; select name, email</p>
</blockquote>


<blockquote><p><strong>Query Behavior</strong></p>
<p>MongoDB queries exhibit the following behavior:</p>
</blockquote>


<p>
All queries in MongoDB address a single collection.
You can modify the query to impose <a href="http://docs.mongodb.org/manual/reference/method/cursor.limit/#cursor.limit" target="_blank">limits</a>, <a href="http://docs.mongodb.org/manual/reference/method/cursor.skip/#cursor.skip" target="_blank">skips</a>, and <a href="http://docs.mongodb.org/manual/reference/method/cursor.sort/#cursor.sort" target="_blank">sort orders</a>.
The order of documents returned by a query is not defined unless you specify a sort().
Operations that modify existing documents (i.e. updates) use the same query syntax as queries to select documents to update.
In aggregation pipeline, the $match pipeline stage provides access to MongoDB queries.
MongoDB provides a db.collection.findOne() method as a special case of find() that returns a single document.
</p>

<p><strong>Cursor Information</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="code"><pre>You can use <span class="keyword">the</span> command cursorInfo <span class="keyword">to</span> retrieve <span class="keyword">the</span> following information <span class="function_start"><span class="keyword">on</span></span> cursors:

total <span class="type">number</span> <span class="keyword">of</span> open cursors
size <span class="keyword">of</span> <span class="keyword">the</span> client cursors <span class="keyword">in</span> current use
<span class="type">number</span> <span class="keyword">of</span> timed out cursors <span class="keyword">since</span> <span class="keyword">the</span> <span class="keyword">last</span> server restart
Consider <span class="keyword">the</span> following example:

db.runCommand( { cursorInfo: <span class="number">1</span> } )
The <span class="constant">result</span> <span class="keyword">from</span> <span class="keyword">the</span> command returns <span class="keyword">the</span> following document:

{
  <span class="string">"totalOpen"</span> : &lt;<span class="type">number</span>&gt;,
  <span class="string">"clientCursors_size"</span> : &lt;<span class="type">number</span>&gt;,
  <span class="string">"timedOut"</span> : &lt;<span class="type">number</span>&gt;,
  <span class="string">"ok"</span> : <span class="number">1</span>
}
</pre></td></tr></table></figure>

<p><strong>Analyze Query Performance</strong>
To use the explain() method, call the method on a cursor returned by find().</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="code"><pre>db.inventory.find( { <span class="built_in">type</span>: <span class="string">'food'</span> } ).<span class="function"><span class="title">explain</span></span>()

{
  <span class="string">"cursor"</span> : <span class="string">"BtreeCursor type_1"</span>,
  <span class="string">"isMultiKey"</span> : <span class="literal">false</span>,
  <span class="string">"n"</span> : <span class="number">5</span>,
  <span class="string">"nscannedObjects"</span> : <span class="number">5</span>,
  <span class="string">"nscanned"</span> : <span class="number">5</span>,
  <span class="string">"nscannedObjectsAllPlans"</span> : <span class="number">5</span>,
  <span class="string">"nscannedAllPlans"</span> : <span class="number">5</span>,
  <span class="string">"scanAndOrder"</span> : <span class="literal">false</span>,
  <span class="string">"indexOnly"</span> : <span class="literal">false</span>,
  <span class="string">"nYields"</span> : <span class="number">0</span>,
  <span class="string">"nChunkSkips"</span> : <span class="number">0</span>,
  <span class="string">"millis"</span> : <span class="number">0</span>,
  <span class="string">"indexBounds"</span> : { <span class="string">"type"</span> : [
                                [ <span class="string">"food"</span>,
                                  <span class="string">"food"</span> ]
                             ] },
  <span class="string">"server"</span> : <span class="string">"mongodbo0.example.net:27017"</span> }
</pre></td></tr></table></figure>

<blockquote><p><strong>With an upsert, applications can decide between performing an update or an insert operation using just a single call. Both the update() method and the save() method can perform an upsert. See update() and save() for details on performing an upsert with these methods.</strong></p>
</blockquote>



<p><a href="http://docs.mongodb.org/manual/reference/sql-comparison/" target="_blank">SQL to MongoDB Mapping Chart</a> for additional examples of MongoDB write operations and the corresponding SQL statements. !!!</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="code"><pre><span class="tag">db</span><span class="class">.inventory</span><span class="class">.insert</span>( <span class="rules">{ <span class="rule"><span class="attribute">_id</span>:<span class="value"> <span class="number">10</span>, type: <span class="string">"misc"</span>, item: <span class="string">"card"</span>, qty: <span class="number">15</span> </span></span></span>} )
<span class="tag">db</span><span class="class">.inventory</span><span class="class">.update</span>(
                     <span class="rules">{ <span class="rule"><span class="attribute">type</span>:<span class="value"> <span class="string">"book"</span>, item : <span class="string">"journal"</span> </span></span></span>},
                     <span class="rules">{ <span class="rule">$<span class="attribute">set </span>:<span class="value"> { qty: <span class="number">10</span> </span></span></span>} },
                     <span class="rules">{ <span class="rule"><span class="attribute">upsert </span>:<span class="value"> true </span></span></span>}
                   )
<span class="tag">db</span><span class="class">.inventory</span><span class="class">.save</span>( <span class="rules">{ <span class="rule"><span class="attribute">type</span>:<span class="value"> <span class="string">"book"</span>, item: <span class="string">"notebook"</span>, qty: <span class="number">40</span> </span></span></span>} )



<span class="tag">db</span><span class="class">.inventory</span><span class="class">.find</span>( <span class="rules">{ <span class="rule"><span class="attribute">type</span>:<span class="value"> <span class="string">"snacks"</span> </span></span></span>} )
<span class="tag">db</span><span class="class">.inventory</span><span class="class">.find</span>( <span class="rules">{ <span class="rule"><span class="attribute">type</span>:<span class="value"> { $in: [ <span class="string">'food'</span>, <span class="string">'snacks'</span> ] </span></span></span>} } )
<span class="tag">db</span><span class="class">.inventory</span><span class="class">.find</span>( <span class="rules">{ <span class="rule"><span class="attribute">type</span>:<span class="value"> <span class="string">'food'</span>, price: { $lt: <span class="number">9.95</span> </span></span></span>} } )
<span class="tag">db</span><span class="class">.inventory</span><span class="class">.find</span>(
                   <span class="rules">{ <span class="rule">$<span class="attribute">or</span>:<span class="value"> [
                            { qty: { $gt: <span class="number">100</span> </span></span></span>} },
                            <span class="rules">{ <span class="rule"><span class="attribute">price</span>:<span class="value"> { $lt: <span class="number">9.95</span> </span></span></span>} }
                          ]
                   }
                 )
</pre></td></tr></table></figure>

<p><strong>Specify AND as well as OR Conditions</strong></p>
<p>With additional clauses, you can specify precise conditions for matching documents.</p>
<p>In the following example, the compound query document selects all documents in the collection where the value of the type field is &#39;food&#39; and either the qty has a value greater than ($gt) 100 or the value of the price field is less than ($lt) 9.95:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="tag">db</span><span class="class">.inventory</span><span class="class">.find</span>( <span class="rules">{ <span class="rule"><span class="attribute">type</span>:<span class="value"> <span class="string">'food'</span>, $or: [ { qty: { $gt: <span class="number">100</span> </span></span></span>} },
                                            <span class="rules">{ <span class="rule"><span class="attribute">price</span>:<span class="value"> { $lt: <span class="number">9.95</span> </span></span></span>} } ]
                   } )
</pre></td></tr></table></figure>

<p>Details <code>http://docs.mongodb.org/manual/tutorial/query-documents/</code></p>
<p><strong>Remove Documents</strong></p>
<blockquote><p><strong>Remove All Documents</strong>
The following example removes all documents from the <strong>inventory</strong> collection:
<code>db.inventory.remove()</code></p>
<p><strong>Remove Documents that Matches a Condition</strong>
<code>db.inventory.remove( { type : &quot;food&quot; } )</code></p>
<p><strong>Remove a Single Document that Matches a Condition</strong>
To remove a single document, call the remove() method with the justOne parameter set to true or 1.
<code>db.inventory.remove( { type : &quot;food&quot; }, 1 )</code></p>
</blockquote>



<p><strong>Query Cursor Methods</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre>Name  Description
cursor.count()  Returns <span class="operator">a</span> count <span class="operator">of</span> <span class="operator">the</span> documents <span class="operator">in</span> <span class="operator">a</span> cursor.
cursor.explain()  Reports <span class="command"><span class="keyword">on</span> <span class="title">the</span> <span class="title">query</span> <span class="title">execution</span> <span class="title">plan</span>, <span class="title">including</span> <span class="title">index</span> <span class="title">use</span>, <span class="title">for</span> <span class="title">a</span> <span class="title">cursor</span>.</span>
cursor.hint() Forces MongoDB <span class="built_in">to</span> use <span class="operator">a</span> specific index <span class="keyword">for</span> <span class="operator">a</span> query.
cursor.limit()  Constrains <span class="operator">the</span> size <span class="operator">of</span> <span class="operator">a</span> cursor’s <span class="built_in">result</span> <span class="built_in">set</span>.
cursor.next() Returns <span class="operator">the</span> next document <span class="operator">in</span> <span class="operator">a</span> cursor.
cursor.skip() Returns <span class="operator">a</span> cursor that <span class="operator">begins</span> returning results only <span class="keyword">after</span> passing <span class="operator">or</span> skipping <span class="operator">a</span> <span class="built_in">number</span> <span class="operator">of</span> documents.
cursor.<span class="built_in">sort</span>() Returns results ordered according <span class="built_in">to</span> <span class="operator">a</span> <span class="built_in">sort</span> specification.
cursor.toArray()  Returns <span class="operator">an</span> array that <span class="operator">contains</span> all documents returned <span class="keyword">by</span> <span class="operator">the</span> cursor.
</pre></td></tr></table></figure>

<p><strong>Query and Data Manipulation Collection Methods</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre>Name  Description
db.collection.count() Wraps count <span class="built_in">to</span> <span class="constant">return</span> <span class="operator">a</span> count <span class="operator">of</span> <span class="operator">the</span> <span class="built_in">number</span> <span class="operator">of</span> documents <span class="operator">in</span> <span class="operator">a</span> collection <span class="operator">or</span> matching <span class="operator">a</span> query.
db.collection.distinct()  Returns <span class="operator">an</span> array <span class="operator">of</span> documents that have distinct values <span class="keyword">for</span> <span class="operator">the</span> specified field.
db.collection.find()  Performs <span class="operator">a</span> query <span class="command"><span class="keyword">on</span> <span class="title">a</span> <span class="title">collection</span> <span class="title">and</span> <span class="title">returns</span> <span class="title">a</span> <span class="title">cursor</span> <span class="title">object</span>.</span>
db.collection.findOne() Performs <span class="operator">a</span> query <span class="operator">and</span> returns <span class="operator">a</span> single document.
db.collection.insert()  Creates <span class="operator">a</span> <span class="built_in">new</span> document <span class="operator">in</span> <span class="operator">a</span> collection.
db.collection.remove()  Deletes documents <span class="built_in">from</span> <span class="operator">a</span> collection.
db.collection.save()  Provides <span class="operator">a</span> wrapper around <span class="operator">an</span> insert() <span class="operator">and</span> update() <span class="built_in">to</span> insert <span class="built_in">new</span> documents.
db.collection.update()  Modifies <span class="operator">a</span> document <span class="operator">in</span> <span class="operator">a</span> collection.
</pre></td></tr></table></figure>

<p><strong>DBrefs</strong></p>
<p>个人觉得：MongoDB 是以key-value模式进行存储的，所以是不建议复杂关联关系的。</br>
<a href="http://chenzhou123520.iteye.com/blog/1637397" target="_blank">Mongodb联合查询</a></br>
<a href="http://blog.csdn.net/tornadowp/article/details/7196764" target="_blank">MongoDB的多表关联操作</a></br></p>
<p><strong>ObjectId</strong></p>
<p><strong>ObjectId is a 12-byte BSON type, constructed using:</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="operator">a</span> <span class="number">4</span>-<span class="keyword">byte</span> <span class="built_in">value</span> representing <span class="operator">the</span> <span class="built_in">seconds</span> since <span class="operator">the</span> Unix epoch,
<span class="operator">a</span> <span class="number">3</span>-<span class="keyword">byte</span> machine identifier,
<span class="operator">a</span> <span class="number">2</span>-<span class="keyword">byte</span> <span class="built_in">process</span> id, <span class="operator">and</span>
<span class="operator">a</span> <span class="number">3</span>-<span class="keyword">byte</span> counter, starting <span class="operator">with</span> <span class="operator">a</span> <span class="built_in">random</span> <span class="built_in">value</span>.
</pre></td></tr></table></figure>

<blockquote><p><strong>ObjectId</strong> 是一个很有意思的东东，</p>
<pre><code>&gt; ObjectId(&quot;507c7f79bcf86cd7994f6c0e&quot;).getTimestamp()
ISODate(&quot;2012-10-15T21:26:17Z&quot;)
</code></pre><ul>
<li>1 in the mongo shell, you can access the creation time of the ObjectId, using the getTimestamp() method.</li>
<li>2 sorting on an _id field that stores ObjectId values is roughly equivalent to sorting by creation time.</li>
</ul>
</blockquote>


<p><strong>Enable Authentication</strong></p>
<p><a href="http://docs.mongodb.org/manual/tutorial/enable-authentication/" target="_blank">Security &gt; Security Tutorials &gt; Access Control Tutorials &gt; Enable Authentication</a></p>
<h1 id="mongodb-limits-and-thresholds">MongoDB Limits and Thresholds</h1>
<p><a href="http://docs.mongodb.org/manual/reference/limits/#limit-bson-document-size" target="_blank">MongoDB Limits and Thresholds</a></p>
<h1 id="mongodb-drivers-and-client-libraries">MongoDB Drivers and Client Libraries</h1>
<p><a href="http://docs.mongodb.org/manual/applications/drivers/" target="_blank">MongoDB Drivers and Client Libraries</a></p>
<p>突然发现还有个<a href="https://www.mongodb.com/products/training" target="_blank">Mongo training</a>呢</br>
<a href="http://www.cnblogs.com/tippoint/p/3441160.html" target="_blank">使用MMS(MongoDB Monitoring Service)监控MongoDB</a></br></p>
]]></content>
    <summary type="html"><![CDATA[<p>MongoDB初读</p>
<p>]]></summary>
    
      <category term="Mongo" scheme="http://youfei.github.io/tags/Mongo/"/>
    
      <category term="Mongo" scheme="http://youfei.github.io/categories/Mongo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MongoDB初读-1]]></title>
    <link href="http://youfei.github.io/2014/03/03/mongo-g-1/"/>
    <id>http://youfei.github.io/2014/03/03/mongo-g-1/</id>
    <published>2014-03-03T08:22:09.000Z</published>
    <updated>2014-03-04T07:41:19.000Z</updated>
    <content type="html"><![CDATA[<p>MongoDB初读</p>
<a id="more"></a>

<h1 id="mongodb-">MongoDB安装</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre><span class="number">1</span> Download mongodb-linux-i686-<span class="number">2.4</span><span class="number">.9</span>.tgz
<span class="number">2</span> tar xvf mongodb-linux-i686-<span class="number">2.4</span><span class="number">.9</span>.tgz
<span class="number">3</span> mkdir -p /data/db/	//默认会在/data/db/存储数据库文件
<span class="number">4</span> chown `id -u` /data/db
**<span class="number">5</span> chown -R  mongodb:mongodb db/** 这个可重要了
<span class="number">6</span> ./mongod

OR

<span class="number">1</span> sudo apt-get install mongodb-10gen
Installing new version of config file /etc/mongodb.conf <span class="keyword">...</span>
Installing new version of config file /etc/init/mongodb.conf <span class="keyword">...</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="code"><pre>$mongod
./mongod --help <span class="keyword">for</span> help <span class="keyword">and</span> startup options
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">50.735</span>
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">50.738</span> warning: <span class="number">32</span>-bit servers don't have journaling enabled by <span class="keyword">default</span>. Please <span class="keyword">use</span> --journal <span class="keyword">if</span> you want durability.
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">50.739</span>
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.037</span> [initandlisten] MongoDB starting : pid=<span class="number">19039</span> port=<span class="number">27017</span> dbpath=/data/db/ <span class="number">32</span>-bit host=ubuntu
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.039</span> [initandlisten]
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.040</span> [initandlisten] ** NOTE: This is a <span class="number">32</span> bit MongoDB binary.
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.041</span> [initandlisten] **       <span class="number">32</span> bit builds are limited <span class="keyword">to</span> less than <span class="number">2</span>GB <span class="keyword">of</span> data (<span class="keyword">or</span> less <span class="keyword">with</span> --journal).
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.042</span> [initandlisten] **       Note that journaling defaults <span class="keyword">to</span> off <span class="keyword">for</span> <span class="number">32</span> bit <span class="keyword">and</span> is currently off.
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.042</span> [initandlisten] **       See http:<span class="comment">//dochub.mongodb.org/core/32bit</span>
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.044</span> [initandlisten]
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.047</span> [initandlisten] db version v2<span class="number">.4</span><span class="number">.9</span>
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.047</span> [initandlisten] git version: <span class="number">52</span>fe0d21959e32a5bdbecdc62057db386e4e029c
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.047</span> [initandlisten] build info: Linux bs-linux32<span class="number">.10</span>gen.cc <span class="number">2.6</span><span class="number">.21</span><span class="number">.7</span>-<span class="number">2.</span>fc8xen #<span class="number">1</span> SMP Fri Feb <span class="number">15</span> <span class="number">12</span>:<span class="number">39</span>:<span class="number">36</span> EST <span class="number">2008</span> i686 BOOST_LIB_VERSION=<span class="number">1</span>_49
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.048</span> [initandlisten] allocator: system
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.048</span> [initandlisten] options: {}
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.271</span> [FileAllocator] allocating <span class="keyword">new</span> datafile /data/db/local.ns, filling <span class="keyword">with</span> zeroes...
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.273</span> [FileAllocator] creating directory /data/db/_tmp
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.355</span> [FileAllocator] <span class="keyword">done</span> allocating datafile /data/db/local.ns, size: <span class="number">16</span>MB,  took <span class="number">0.045</span> secs
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.357</span> [FileAllocator] allocating <span class="keyword">new</span> datafile /data/db/local<span class="number">.0</span>, filling <span class="keyword">with</span> zeroes...
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.432</span> [FileAllocator] <span class="keyword">done</span> allocating datafile /data/db/local<span class="number">.0</span>, size: <span class="number">16</span>MB,  took <span class="number">0.002</span> secs
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.510</span> [initandlisten] command local.$cmd command: { create: <span class="string">"startup_log"</span>, size: <span class="number">10485760</span>, capped: <span class="keyword">true</span> } ntoreturn:<span class="number">1</span> keyUpdates:<span class="number">0</span>  reslen:<span class="number">37</span> <span class="number">239</span>ms
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.520</span> [websvr] admin web console waiting <span class="keyword">for</span> connections on port <span class="number">28017</span>
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">51.522</span> [initandlisten] waiting <span class="keyword">for</span> connections on port <span class="number">27017</span>
</pre></td></tr></table></figure>

<p>另起console</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="code"><pre>$mongo
MongoDB <span class="built_in">shell</span> <span class="built_in">version</span>: <span class="number">2.4</span><span class="number">.9</span>
connecting <span class="built_in">to</span>: test
Welcome <span class="built_in">to</span> <span class="operator">the</span> MongoDB <span class="built_in">shell</span>.
For interactive help, type <span class="string">"help"</span>.
For more comprehensive documentation, see
        <span class="keyword">http</span>://docs.mongodb.org/
Questions? Try <span class="operator">the</span> support group
        <span class="keyword">http</span>://groups.google.com/group/mongodb-user
Server has startup warnings:
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">39</span>:<span class="number">22.629</span> [initandlisten]
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">39</span>:<span class="number">22.631</span> [initandlisten] ** NOTE: This is <span class="operator">a</span> <span class="number">32</span> bit MongoDB binary.
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">39</span>:<span class="number">22.631</span> [initandlisten] **       <span class="number">32</span> bit builds are limited <span class="built_in">to</span> less than <span class="number">2</span>GB <span class="operator">of</span> data (<span class="operator">or</span> less <span class="operator">with</span> <span class="comment">--journal).</span>
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">39</span>:<span class="number">22.632</span> [initandlisten] **       See <span class="keyword">http</span>://dochub.mongodb.org/core/<span class="number">32</span>bit
Mon Mar  <span class="number">3</span> <span class="number">16</span>:<span class="number">39</span>:<span class="number">22.633</span> [initandlisten]
&gt;
</pre></td></tr></table></figure>

<hr>
<h1 id="-">设置开机启动</h1>
<p><strong>以下这个是要自己写，要是应用apt-get install 的话是不需要的。</strong></p>
<p>/etc/init.d/mongodb</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
</pre></td><td class="code"><pre><span class="shebang">#!/bin/sh
 </span>
<span class="comment">### BEGIN INIT INFO</span>
<span class="comment"># Provides:     mongodb</span>
<span class="comment"># Required-Start:</span>
<span class="comment"># Required-Stop:</span>
<span class="comment"># Default-Start:        2 3 4 5</span>
<span class="comment"># Default-Stop:         0 1 6</span>
<span class="comment"># Short-Description: mongodb</span>
<span class="comment"># Description: mongo db server</span>
<span class="comment">### END INIT INFO</span>
 
. /lib/lsb/init-functions
 
PROGRAM=/tools/mongodb-linux-i686-<span class="number">2.4</span>.<span class="number">9</span>/bin/mongod
MONGOPID=`ps -ef | grep <span class="string">'mongod'</span> | grep -v grep | awk <span class="string">'{print $2}'</span>`
 
test -x <span class="variable">$PROGRAM</span> || <span class="keyword">exit</span> <span class="number">0</span>
 
<span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span>
  start)
     ulimit -n <span class="number">3000</span>
     log_begin_msg <span class="string">"Starting MongoDB server"</span> 
     <span class="variable">$PROGRAM</span> --fork --quiet -journal -maxConns=<span class="number">2400</span> -rest --logpath /data/db/journal/mongdb.log
     log_end_msg <span class="number">0</span>
     ;;
  stop)
     log_begin_msg <span class="string">"Stopping MongoDB server"</span> 
     <span class="keyword">if</span> [ ! -z <span class="string">"<span class="variable">$MONGOPID</span>"</span> ]; <span class="keyword">then</span> 
        kill -<span class="number">15</span> <span class="variable">$MONGOPID</span>
     <span class="keyword">fi</span>
     log_end_msg <span class="number">0</span>
     ;;
  status)
     ;;
  *)
     log_success_msg <span class="string">"Usage: /etc/init.d/mongodb {start|stop|status}"</span> 
     <span class="keyword">exit</span> <span class="number">1</span>
<span class="keyword">esac</span>
 
<span class="keyword">exit</span> <span class="number">0</span>
</pre></td></tr></table></figure>

<p><strong>关闭/启动服务</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre>sudo service mongodb stop
sudo service mongodb <span class="operator"><span class="keyword">start</span>

<span class="string">`http://192.168.6.129:27017/`</span>
You <span class="keyword">are</span> trying <span class="keyword">to</span> access MongoDB <span class="keyword">on</span> the native driver port. <span class="keyword">For</span> http diagnostic access, <span class="keyword">add</span> <span class="number">1000</span> <span class="keyword">to</span> the port <span class="keyword">number</span></span>
</pre></td></tr></table></figure>

<p>手动粗暴启动mongodb server</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="built_in">.</span>/mongod <span class="attribute">-journal</span> <span class="attribute">-maxConns</span><span class="subst">=</span><span class="number">2400</span> <span class="attribute">-rest</span>
<span class="attribute">-journal</span> 代表要写日志，<span class="attribute">-maxConns</span><span class="subst">=</span><span class="number">2400</span>代表mongodb 可以接受<span class="number">2400</span>个tcp连接，<span class="attribute">-rest</span>代表可以允许客户端通过rest API访问mongdb server<span class="built_in">.</span>
还可以使用参数—quiet启动可以指定安静模式减少记录的项目数，注意使用该参数必须要同时指定日志路径,比如：
—quiet —logpath /<span class="built_in">data</span>/db/journal/mongdb<span class="built_in">.</span><span class="keyword">log</span>
</pre></td></tr></table></figure>

<p><strong>修改系统允许的最大连接数</strong></br></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="code"><pre>上面的最大连接数目的限制原因是Linux系统默认一个进程最大文件打开数目为<span class="number">1024</span>，用ulimit -<span class="operator">a</span> 命令检查，可以看到下面这行:
<span class="built_in">open</span> <span class="built_in">files</span>                      (-n) <span class="number">1024</span>

修改/etc/security/limits.conf 配置文件。
使用命令：sudo gedit /etc/security/limits.conf
在文件中增加
* soft nofile <span class="number">3000</span>
* hard nofile <span class="number">20000</span>
root soft nofile <span class="number">3000</span>
root hard nofile <span class="number">20000</span>
* 表示该配置对所有用户均有效,root用户要特别加两行。
硬限制通常是根据系统硬件资源状况(主要是系统内存)计算出来的系统最多可同时打开的文件数量，软限制是在这个基础上进一步的限制。因此软限制数目要低于硬限制。
nofile表示 <span class="built_in">max</span> <span class="built_in">number</span> <span class="operator">of</span> <span class="built_in">open</span> <span class="built_in">files</span>
重新启动计算机，然后再用ulimit -<span class="operator">a</span> 命令查看：
<span class="built_in">open</span> <span class="built_in">files</span>                      (-n) <span class="number">3000</span>
已经生效了。现在再启动mongodb server，问题解决
</pre></td></tr></table></figure>

<hr>
<h1 id="-">客户端登录服务器</h1>
<p>启动日志如上，服务端启动如上，现在我们在另外一个终端测试服务器是否正常。</br>
进入/usr/local/mongodb-linux-x86_64-2.0.2/bin,执行./mongo</br>
出现</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>MongoDB <span class="built_in">shell</span> <span class="built_in">version</span>: <span class="number">2.0</span><span class="number">.2</span>
connecting <span class="built_in">to</span>: test
</pre></td></tr></table></figure>

<p>执行</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>$db<span class="preprocessor">.foo</span><span class="preprocessor">.save</span>({<span class="number">1</span> : “Hello world”})
$db<span class="preprocessor">.foo</span><span class="preprocessor">.find</span>()<span class="comment">;</span>
{ <span class="string">"_id"</span> : ObjectId(<span class="string">"4e4b395986738efa2d0718b9"</span>), <span class="string">"1"</span> : <span class="string">"hello world"</span> }
</pre></td></tr></table></figure>

<p>执行到这里恭喜你，成功安装好了mongodb</br></p>
<p>也可以通过下面这种方式连接远程的mongodb server,默认端口为27017,比如
./mongo 192.168.6.129</p>
<hr>
<h1 id="-">创建数据库</h1>
<p>如果没有mydb数据库的话，在客户端中使用命令：</br>
use mydb</br>
将创建mydb数据库，而且当前数据库切换为mydb.</br>
此时show dbs不显示该数据库名称。使用db.stats()命令检查当前数据库状态。</br></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="variable">$db</span>     当前数据库
</pre></td></tr></table></figure>

<hr>
<h1 id="-">标准检查流程</h1>
<ul>
<li>1.首先检查 ulimit -a
查看open files (-n) 是否为设置的值</li>
<li>2.ps -def | grep mongod
查看该服务是否启动</li>
<li>3.cd /var/log/
cat mongdb.log</br>
查看服务器是否正确</li>
<li>4.进入<a href="http://192.168.6.129:28017" target="_blank">http://192.168.6.129:28017</a>
看服务器是否启动正常</li>
</ul>
<hr>
<h1 id="mongovue">MONGOVUE</h1>
<p><a href="http://www.mongovue.com/" target="_blank">MongoVUE</a> is an innovative MongoDB desktop application for Windows OS that gives you an elegant and highly usable GUI interface to work with MongoDB. Now there is one less worry in managing your web-scale data.</p>
<p><strong>Connection Congfig</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="attribute">Server</span>: <span class="string">192.168.6.129</span>
<span class="attribute">Prot</span>: <span class="string">  27017</span>
</pre></td></tr></table></figure>

<hr>
<h1 id="-">参考</h1>
<p><a href="http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/" target="_blank">Install MongoDB on Ubuntu</a></br>
<a href="http://blog.csdn.net/fdipzone/article/details/7316240" target="_blank">Ubuntu安装MongoDB</a></br>
<a href="http://www.cnblogs.com/xuqiang/archive/2011/03/27/1997158.html" target="_blank">初试MongoDB</a></br></p>
]]></content>
    <summary type="html"><![CDATA[<p>MongoDB初读</p>
]]></summary>
    
      <category term="Mongo" scheme="http://youfei.github.io/tags/Mongo/"/>
    
      <category term="Mongo" scheme="http://youfei.github.io/categories/Mongo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[浅谈CSRF攻击方式(转)]]></title>
    <link href="http://youfei.github.io/2014/03/03/others-2/"/>
    <id>http://youfei.github.io/2014/03/03/others-2/</id>
    <published>2014-03-03T07:54:19.000Z</published>
    <updated>2014-03-03T08:10:15.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://www.cnblogs.com/hyddd/archive/2009/04/09/1432744.html" target="_blank">浅谈CSRF攻击方式</a>出处：hyddd(<a href="http://www.cnblogs.com/hyddd/" target="_blank">http://www.cnblogs.com/hyddd/</a>) 写的太详细了</br></p>
<p>以服务器端产生伪随机数<input type="hidden">防范，该方法也可用于<strong>防止表单多次提交</strong>~</p>
<a id="more"></a>

<h1 id="-csrf-">一.CSRF是什么？</h1>
<p>　　CSRF（Cross-site request forgery），中文名称：跨站请求伪造，也被称为：one click attack/session riding，缩写为：CSRF/XSRF。</p>
<hr>
<h1 id="-csrf-">二.CSRF可以做什么？</h1>
<p>　　你这可以这么理解CSRF攻击：攻击者盗用了你的身份，以你的名义发送恶意请求。CSRF能够做的事情包括：以你名义发送邮件，发消息，盗取你的账号，甚至于购买商品，虚拟货币转账......造成的问题包括：个人隐私泄露以及财产安全。</p>
<hr>
<h1 id="-csrf-">三.CSRF漏洞现状</h1>
<p>　　CSRF这种攻击方式在2000年已经被国外的安全人员提出，但在国内，直到06年才开始被关注，08年，国内外的多个大型社区和交互网站分别爆出CSRF漏洞，如：NYTimes.com（纽约时报）、Metafilter（一个大型的BLOG网站），YouTube和百度HI......而现在，互联网上的许多站点仍对此毫无防备，以至于安全业界称CSRF为“沉睡的巨人”。</p>
<hr>
<h1 id="-csrf-">四.CSRF的原理</h1>
<p>　　下图简单阐述了CSRF攻击的思想：
<img src="http://pic002.cnblogs.com/img/hyddd/200904/2009040916453171.jpg" alt="CSRF攻击的思想"></p>
<p>从上图可以看出，要完成一次CSRF攻击，受害者必须依次完成两个步骤：</p>
<p>　　1.登录受信任网站A，并在本地生成Cookie。</p>
<p>　　2.在不登出A的情况下，访问危险网站B。</p>
<p>　　看到这里，你也许会说：“如果我不满足以上两个条件中的一个，我就不会受到CSRF的攻击”。是的，确实如此，但你不能保证以下情况不会发生：</p>
<p>　　1.你不能保证你登录了一个网站后，不再打开一个tab页面并访问另外的网站。</p>
<p>　　2.你不能保证你关闭浏览器了后，你本地的Cookie立刻过期，你上次的会话已经结束。（事实上，关闭浏览器不能结束一个会话，但大多数人都会错误的认为关闭浏览器就等于退出登录/结束会话了......）</p>
<p>　　3.上图中所谓的攻击网站，可能是一个存在其他漏洞的可信任的经常被人访问的网站。</p>
<blockquote><p>其实可以看出，CSRF攻击是源于WEB的隐式身份验证机制！WEB的身份验证机制虽然可以保证一个请求是来自于某个用户的浏览器，但却无法保证该请求是用户批准发送的！</p>
</blockquote>


<hr>
<h1 id="-csrf-">五.CSRF的防御</h1>
<h2 id="1-csrf-">1.服务端进行CSRF防御</h2>
<p>服务端的CSRF方式方法很多样，但总的思想都是一致的，就是在客户端页面增加伪随机数。</p>
<p>　  (1).Cookie Hashing(所有表单都包含同一个伪随机值)：</p>
<p>　　这可能是最简单的解决方案了，因为攻击者不能获得第三方的Cookie(理论上)，所以表单中的数据也就构造失败了:&gt;</p>
<p><strong>这个方法个人觉得已经可以杜绝99%的CSRF攻击了，那还有1%呢....由于用户的Cookie很容易由于网站的XSS漏洞而被盗取，这就另外的1%。一般的攻击者看到有需要算Hash值，基本都会放弃了，某些除外，所以如果需要100%的杜绝，这个不是最好的方法。</strong></p>
<p>   (2).验证码</p>
<p>　　这个方案的思路是：每次的用户提交都需要用户在表单中填写一个图片上的随机字符串，厄....这个方案可以完全解决CSRF，但个人觉得在易用性方面似乎不是太好，还有听闻是验证码图片的使用涉及了一个被称为MHTML的Bug，可能在某些版本的微软IE中受影响。</p>
<p>　 (3).One-Time Tokens(不同的表单包含一个不同的伪随机值)</p>
<p>　　在实现One-Time Tokens时，需要注意一点：就是“并行会话的兼容”。如果用户在一个站点上同时打开了两个不同的表单，CSRF保护措施不应该影响到他对任何表单的提交。考虑一下如果每次表单被装入时站点生成一个伪随机值来覆盖以前的伪随机值将会发生什么情况：用户只能成功地提交他最后打开的表单，因为所有其他的表单都含有非法的伪随机值。必须小心操作以确保CSRF保护措施不会影响选项卡式的浏览或者利用多个浏览器窗口浏览一个站点。</p>
]]></content>
    <summary type="html"><![CDATA[<p><a href="http://www.cnblogs.com/hyddd/archive/2009/04/09/1432744.html" target="_blank">浅谈CSRF攻击方式</a>出处：hyddd(<a href="http://www.cnblogs.com/hyddd/" target="_blank">http://www.cnblogs.com/hyddd/</a>) 写的太详细了</br></p>
<p>以服务器端产生伪随机数<input type="hidden">防范，该方法也可用于<strong>防止表单多次提交</strong>~</p>
]]></summary>
    
      <category term="比较杂乱" scheme="http://youfei.github.io/tags/%E6%AF%94%E8%BE%83%E6%9D%82%E4%B9%B1/"/>
    
      <category term="比较杂乱" scheme="http://youfei.github.io/categories/%E6%AF%94%E8%BE%83%E6%9D%82%E4%B9%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RabbitMQ 初读]]></title>
    <link href="http://youfei.github.io/2014/02/28/rabbit-g-1/"/>
    <id>http://youfei.github.io/2014/02/28/rabbit-g-1/</id>
    <published>2014-02-28T06:14:37.000Z</published>
    <updated>2014-03-03T06:40:54.000Z</updated>
    <content type="html"><![CDATA[<p>RabbitMQ 是由 LShift 提供的一个 Advanced Message Queuing Protocol (AMQP) 的开源实现，由以高性能、健壮以及可伸缩性出名的 Erlang 写成，因此也是继承了这些优点。</p>
<a id="more"></a>

<h1 id="-">简介</h1>
<p>典型的消费-生产者模型。 应用：对无需即时返回且耗时的操作，进行异步处理。</p>
<p>RabbitMQ的结构图如下：
<img src="http://www.nsbeta.info/wp-content/uploads/2012/03/mq.png" alt="RabbitMQ的结构图"></p>
<h2 id="-"><strong>几个概念说明</strong></h2>
<p><strong>Broker：</strong>简单来说就是消息队列服务器实体。</br>
<strong>Exchange：</strong>消息交换机，它指定消息按什么规则，路由到哪个队列。</br>
<strong>Queue：</strong>消息队列载体，每个消息都会被投入到一个或多个队列。</br>
<strong>Binding：</strong>绑定，它的作用就是把exchange和queue按照路由规则绑定起来。</br>
<strong>Routing Key：</strong>路由关键字，exchange根据这个关键字进行消息投递。</br>
<strong>vhost：</strong>虚拟主机，一个broker里可以开设多个vhost，用作不同用户的权限分离。</br>
<strong>producer：</strong>消息生产者，就是投递消息的程序。</br>
<strong>consumer：</strong>消息消费者，就是接受消息的程序。</br>
<strong>channel：</strong>消息通道，在客户端的每个连接里，可建立多个channel，每个channel代表一个会话任务。</br></p>
<h2 id="-erlang-"><strong>安装erlang</strong></h2>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="variable">$sudo</span> apt<span class="attribute">-get</span> install erlang<span class="attribute">-nox</span>
</pre></td></tr></table></figure>

<h2 id="-rabbitmq-"><strong>安装RabbitMQ</strong></h2>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="variable">$sudo</span> dpkg <span class="attribute">-i</span> rabbitmq<span class="attribute">-server_3</span><span class="number">.2</span><span class="number">.3</span><span class="subst">-</span><span class="number">1</span>_all<span class="built_in">.</span>deb
</pre></td></tr></table></figure>

<h3 id="-rabbitmq-server-"><strong>启动/停止rabbitmq-server</strong>要用全路径</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>/etc/init.d/rabbitmq-<span class="built_in">server</span> start
 * Starting message broker rabbitmq-<span class="built_in">server</span>                                                                                                 [ OK ]
/etc/init.d/rabbitmq-<span class="built_in">server</span> <span class="keyword">stop</span>
 * Stopping message broker rabbitmq-<span class="built_in">server</span>                                                                                                 [ OK ]
/etc/init.d/rabbitmq-<span class="built_in">server</span> restart
 * Restarting message broker rabbitmq-<span class="built_in">server</span>                                                                                               [ OK ]
</pre></td></tr></table></figure>

<h3 id="-path-etc-rabbitmq-"><strong>配置文件</strong> Path: /etc/rabbitmq/</h3>
<ul>
<li>1 enabled_plugins</li>
<li>2 rabbitmq.conf</li>
<li>3 rabbitmq-env.conf</li>
</ul>
<p><code>RABBITMQ_NODE_PORT:5672</code></p>
<p><a href="http://www.rabbitmq.com/configure.html" target="_blank">Configuration</a></br>
<a href="http://www.rabbitmq.com/man/rabbitmq-env.conf.5.man.html" target="_blank">rabbitmq-env.cof</a></p>
<p><a href="http://my.oschina.net/moooofly/blog/107890" target="_blank">RabbitMQ启动参数具体含义</a>, 偶还没仔细看</p>
<h2 id="-web-"><strong>安装web插件管理界面</strong></h2>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="variable">$rabbitmq</span><span class="attribute">-plugins</span> enable rabbitmq_management
<span class="variable">$ls</span> /etc/rabbitmq
$/etc/init<span class="built_in">.</span>d/rabbitmq<span class="attribute">-server</span> restart
</pre></td></tr></table></figure>

<p>查看：<code>http://localhost:15672</code> 用户名/密码：<code>guest/guest</code>
<img src="http://static.oschina.net/uploads/space/2014/0112/013834_G2rv_222173.gif" alt="效果图"></p>
<h2 id="-"><strong>用户管理</strong></h2>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
</pre></td><td class="code"><pre><span class="number">1</span>.添加用户
<span class="variable">$rabbitmqctl</span> add_user username password
<span class="number">2</span>.删除用户
<span class="variable">$rabbitmqctl</span> delete_user username
<span class="number">3</span>.修改密码
<span class="variable">$rabbitmqctl</span> change_password username newpassword
<span class="number">4</span>.列出所有用户
<span class="variable">$rabbitmqctl</span> list_users
<span class="number">5</span>.用户赋权
<span class="variable">$rabbitmqctl</span> <span class="keyword">set</span>_user_tags newuser administrator
</pre></td></tr></table></figure>

<h2 id="-"><strong>插件</strong></h2>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
</pre></td><td class="code"><pre>1. 查看所有插件
$<span class="tag">rabbitmq-plugins</span> <span class="tag">list</span>

<span class="attr_selector">[e]</span> <span class="tag">amqp_client</span>                       3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">cowboy</span>                            0<span class="class">.5</span><span class="class">.0-rmq3</span><span class="class">.2</span><span class="class">.3-git4b93c2d</span>
<span class="attr_selector">[ ]</span> <span class="tag">eldap</span>                             3<span class="class">.2</span><span class="class">.3-gite309de4</span>
<span class="attr_selector">[e]</span> <span class="tag">mochiweb</span>                          2<span class="class">.7</span><span class="class">.0-rmq3</span><span class="class">.2</span><span class="class">.3-git680dba8</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_amqp1_0</span>                  3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_auth_backend_ldap</span>        3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_auth_mechanism_ssl</span>       3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_consistent_hash_exchange</span> 3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_federation</span>               3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_federation_management</span>    3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_jsonrpc</span>                  3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_jsonrpc_channel</span>          3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_jsonrpc_channel_examples</span> 3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[E]</span> <span class="tag">rabbitmq_management</span>               3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[e]</span> <span class="tag">rabbitmq_management_agent</span>         3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_management_visualiser</span>    3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_mqtt</span>                     3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_shovel</span>                   3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_shovel_management</span>        3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_stomp</span>                    3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_tracing</span>                  3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[e]</span> <span class="tag">rabbitmq_web_dispatch</span>             3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_web_stomp</span>                3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rabbitmq_web_stomp_examples</span>       3<span class="class">.2</span><span class="class">.3</span>
<span class="attr_selector">[ ]</span> <span class="tag">rfc4627_jsonrpc</span>                   3<span class="class">.2</span><span class="class">.3-git5e67120</span>
<span class="attr_selector">[ ]</span> <span class="tag">sockjs</span>                            0<span class="class">.3</span><span class="class">.4-rmq3</span><span class="class">.2</span><span class="class">.3-git3132eb9</span>
<span class="attr_selector">[e]</span> <span class="tag">webmachine</span>                        1<span class="class">.10</span><span class="class">.3-rmq3</span><span class="class">.2</span><span class="class">.3-gite9359c7</span>


2. 激活插件
$<span class="tag">rabbitmq-plugins</span> <span class="tag">enable</span> <span class="tag">rabbitmq_management</span>

3. 关闭插件
$<span class="tag">rabbitmq-plugins</span> <span class="tag">disable</span> <span class="tag">rabbitmq_management</span>
</pre></td></tr></table></figure>

<h2 id="-java-"><strong>测试用的Java代码</strong></h2>
<p>代码来源： <a href="http://www.oschina.net/translate/getting-started-with-rabbitmq-in-java?cmp" target="_blank">RabbitMQ 入门指南(Java)</a></br></p>
<p><strong>依赖Jar</strong>： amqp-client-3.0.4.jar， commons-lang-2.6.jar</p>
<p>EndPoint.java</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
</pre></td><td class="code"><pre><span class="keyword">package</span> examples.rabbitmq;

<span class="keyword">import</span> java.io.IOException;

<span class="keyword">import</span> com.rabbitmq.client.Channel;
<span class="keyword">import</span> com.rabbitmq.client.Connection;
<span class="keyword">import</span> com.rabbitmq.client.ConnectionFactory;

<span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">EndPoint</span> {</span>

	<span class="keyword">protected</span> Channel channel;
	<span class="keyword">protected</span> Connection connection;
	<span class="keyword">protected</span> String endPointName;

	<span class="keyword">public</span> <span class="title">EndPoint</span>(String endpointName) <span class="keyword">throws</span> IOException {
		<span class="keyword">this</span>.endPointName = endpointName;

		<span class="comment">// Create a connection factory</span>
		ConnectionFactory factory = <span class="keyword">new</span> ConnectionFactory();

		<span class="comment">// hostname of your rabbitmq server</span>
		factory.setHost(<span class="string">"192.168.6.129"</span>);

		<span class="comment">// getting a connection</span>
		connection = factory.newConnection();

		<span class="comment">// creating a channel</span>
		channel = connection.createChannel();

		<span class="comment">// declaring a queue for this channel. If queue does not exist,</span>
		<span class="comment">// it will be created on the server.</span>
		channel.queueDeclare(endpointName, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">null</span>);
	}

	<span class="javadoc">/**
	 * 关闭channel和connection。并非必须，因为隐含是自动调用的。
	 * 
	 *<span class="javadoctag"> @throws</span> IOException
	 */</span>
	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span>() <span class="keyword">throws</span> IOException {
		<span class="keyword">this</span>.channel.close();
		<span class="keyword">this</span>.connection.close();
	}
}
</pre></td></tr></table></figure>

<p>Producer.java</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="code"><pre><span class="keyword">package</span> examples.rabbitmq;

<span class="keyword">import</span> java.io.IOException;
<span class="keyword">import</span> java.io.Serializable;

<span class="keyword">import</span> org.apache.commons.lang.SerializationUtils;


<span class="javadoc">/**
 * The producer endpoint that writes to the queue.
 *<span class="javadoctag"> @author</span> syntx
 *
 */</span>
<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Producer</span> <span class="keyword">extends</span> <span class="title">EndPoint</span>{</span>
	
	<span class="keyword">public</span> <span class="title">Producer</span>(String endPointName) <span class="keyword">throws</span> IOException{
		<span class="keyword">super</span>(endPointName);
	}

	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span>(Serializable object) <span class="keyword">throws</span> IOException {
	    channel.basicPublish(<span class="string">""</span>,endPointName, <span class="keyword">null</span>, SerializationUtils.serialize(object));
	}	
}
</pre></td></tr></table></figure>

<p>QueueConsumer.java</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
</pre></td><td class="code"><pre>
<span class="keyword">package</span> examples.rabbitmq;

<span class="keyword">import</span> java.io.IOException;
<span class="keyword">import</span> java.util.HashMap;
<span class="keyword">import</span> java.util.Map;

<span class="keyword">import</span> org.apache.commons.lang.SerializationUtils;

<span class="keyword">import</span> com.rabbitmq.client.AMQP.BasicProperties;
<span class="keyword">import</span> com.rabbitmq.client.Consumer;
<span class="keyword">import</span> com.rabbitmq.client.Envelope;
<span class="keyword">import</span> com.rabbitmq.client.ShutdownSignalException;


<span class="javadoc">/**
 * 读取队列的程序端，实现了Runnable接口。
 *<span class="javadoctag"> @author</span> syntx
 *
 */</span>
<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueueConsumer</span> <span class="keyword">extends</span> <span class="title">EndPoint</span> <span class="keyword">implements</span> <span class="title">Runnable</span>, <span class="title">Consumer</span>{</span>
	
	<span class="keyword">public</span> <span class="title">QueueConsumer</span>(String endPointName) <span class="keyword">throws</span> IOException{
		<span class="keyword">super</span>(endPointName);		
	}
	
	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span>() {
		<span class="keyword">try</span> {
			<span class="comment">//start consuming messages. Auto acknowledge messages.</span>
			channel.basicConsume(endPointName, <span class="keyword">true</span>,<span class="keyword">this</span>);
		} <span class="keyword">catch</span> (IOException e) {
			e.printStackTrace();
		}
	}

	<span class="javadoc">/**
	 * Called when consumer is registered.
	 */</span>
	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleConsumeOk</span>(String consumerTag) {
		System.out.println(<span class="string">"Consumer "</span>+consumerTag +<span class="string">" registered"</span>);		
	}

	<span class="javadoc">/**
	 * Called when new message is available.
	 */</span>
	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleDelivery</span>(String consumerTag, Envelope env,
			BasicProperties props, <span class="keyword">byte</span>[] body) <span class="keyword">throws</span> IOException {
		Map map = (HashMap)SerializationUtils.deserialize(body);
	    System.out.println(<span class="string">"Message Number "</span>+ map.get(<span class="string">"message number"</span>) + <span class="string">" received."</span>);
		
	}

	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleCancel</span>(String consumerTag) {}
	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleCancelOk</span>(String consumerTag) {}
	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleRecoverOk</span>(String consumerTag) {}
	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleShutdownSignal</span>(String consumerTag, ShutdownSignalException arg1) {}
}
</pre></td></tr></table></figure>

<p>Main.java</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="code"><pre><span class="keyword">package</span> examples.rabbitmq;

<span class="keyword">import</span> java.io.IOException;
<span class="keyword">import</span> java.sql.SQLException;
<span class="keyword">import</span> java.util.HashMap;

<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> {</span>
	<span class="keyword">public</span> <span class="title">Main</span>() <span class="keyword">throws</span> Exception{
		
		QueueConsumer consumer = <span class="keyword">new</span> QueueConsumer(<span class="string">"queue"</span>);
		Thread consumerThread = <span class="keyword">new</span> Thread(consumer);
		consumerThread.start();
		
		Producer producer = <span class="keyword">new</span> Producer(<span class="string">"queue"</span>);
		
		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++) {
			HashMap message = <span class="keyword">new</span> HashMap();
			message.put(<span class="string">"message number"</span>, i);
			producer.sendMessage(message);
			System.out.println(<span class="string">"Message Number "</span>+ i +<span class="string">" sent."</span>);
		}
	}
	
	<span class="javadoc">/**
	 *<span class="javadoctag"> @param</span> args
	 *<span class="javadoctag"> @throws</span> SQLException 
	 *<span class="javadoctag"> @throws</span> IOException 
	 */</span>
	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(String[] args) <span class="keyword">throws</span> Exception{
	  <span class="keyword">new</span> Main();
	}
}
</pre></td></tr></table></figure>

<hr>
<h1 id="-">参考文章</h1>
<p><a href="http://www.nsbeta.info/archives/200" target="_blank">消息队列RabbitMQ入门介绍</a></br>
<a href="http://www.oschina.net/translate/scalable-web-architecture-and-distributed-systems?lang=chs&amp;#" target="_blank">可扩展Web架构与分布式系统</a>  想看来着，但是文章实在是太长了 -_-!</br>
<a href="http://my.oschina.net/fhck/blog/71691" target="_blank">RabbitMQ之消息发布订阅与信息持久化技术</a></br>
<a href="http://my.oschina.net/moooofly/blog/107890" target="_blank">RabbitMQ启动参数具体含义</a></br>
<a href="http://my.oschina.net/moooofly/blog/88769" target="_blank">rabbitmq-service用户手册</a></br>
<a href="http://blog.csdn.net/historyasamirror/article/details/6827870" target="_blank">RabbitMQ的安装，配置，监控</a></p>
]]></content>
    <summary type="html"><![CDATA[<p>RabbitMQ 是由 LShift 提供的一个 Advanced Message Queuing Protocol (AMQP) 的开源实现，由以高性能、健壮以及可伸缩性出名的 Erlang 写成，因此也是继承了这些优点。</p>
]]></summary>
    
      <category term="rabbit" scheme="http://youfei.github.io/tags/rabbit/"/>
    
      <category term="rabbit" scheme="http://youfei.github.io/categories/rabbit/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[杂记]]></title>
    <link href="http://youfei.github.io/2014/02/27/others-1/"/>
    <id>http://youfei.github.io/2014/02/27/others-1/</id>
    <published>2014-02-27T02:09:10.000Z</published>
    <updated>2014-02-27T09:42:55.000Z</updated>
    <content type="html"><![CDATA[<p>安装了下虚拟机，并在上面搭了下环境</p>
<a id="more"></a>

<h1 id="-">虚拟机安装</h1>
<p>1 orcale 的 VBox 很烂，再一次挂掉，不能忍啊。 <strong>卸掉</strong></br>
2 VMWare 还要注册 。。。 <strong>溜掉</strong></br>
3 VMWare Player <strong>Good</strong></br></p>
<p><a href="https://my.vmware.com/web/vmware/free#desktop_end_user_computing/vmware_player/6_0" target="_blank">VMWare Player Download Link -&gt; </a>
<a href="http://www.ubuntu.org.cn/download/ubuntu/download-zh" target="_blank">ubuntu iso -&gt; </a></p>
<h1 id="-ssh">安装ssh</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>sudo apt-get install openssh-server

Try:  ssh <span class="tag">&lt;<span class="title">username</span>&gt;</span>@<span class="tag">&lt;<span class="title">remote</span> <span class="attribute">ip</span>&gt;</span>
</pre></td></tr></table></figure>

<hr>
<h1 id="-monit">安装monit</h1>
<p>主要参考：
<a href="http://feilong.me/2011/02/monitor-core-processes-with-monit" target="_blank">link1</a>, <a href="http://mmonit.com/monit/documentation/monit.html" target="_blank">mmonit doc link</a></br></p>
<p>以下来源<strong>link1</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="built_in">sudo</span> apt-get install monit
--- <span class="built_in">sudo</span> apt-get remove monit

/var/monit/monitrc	//配置文件

<span class="built_in">sudo</span> /etc/init.d/monit start
<span class="built_in">sudo</span> /etc/init.d/monit stop
<span class="built_in">sudo</span> /etc/init.d/monit restart
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
</pre></td><td class="code"><pre><span class="comment">##</span>
<span class="comment">## 示例monit配置文件，说明：</span>
<span class="comment">## 1. 域名以example.com为例。</span>
<span class="comment">## 2. 后面带xxx的均是举例用的名字，需要根据自己的需要修改。</span>
<span class="comment">##</span>
<span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span>
<span class="comment">## Monit control file</span>
<span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span>
<span class="comment">#</span>
<span class="comment"># 检查周期，默认为2分钟，对于网站来说有点长，可以根据需要自行调节，这改成30秒。</span>
set daemon  <span class="number">30</span>

<span class="comment"># 日志文件</span>
set logfile /<span class="reserved">var</span>/log/monit.log

<span class="comment">#</span>
<span class="comment"># 邮件通知服务器</span>
<span class="comment">#</span>
<span class="comment">#set mailserver mail.example.com</span>
set mailserver localhost           

<span class="comment">#</span>
<span class="comment"># 通知邮件的格式设置，下面是默认格式供参考</span>
<span class="comment">#</span>
<span class="comment">## Monit by default uses the following alert mail format:</span>
<span class="comment">##</span>
<span class="comment">## --8&lt;--</span>
<span class="comment">## From: monit@$HOST                         # sender</span>
<span class="comment">## Subject: monit alert --  $EVENT $SERVICE  # subject</span>
<span class="comment">##</span>
<span class="comment">## $EVENT Service $SERVICE                   #</span>
<span class="comment">##                                           #</span>
<span class="comment">## 	Date:        $DATE                   #</span>
<span class="comment">## 	Action:      $ACTION                 #</span>
<span class="comment">## 	Host:        $HOST                   # body</span>
<span class="comment">## 	Description: $DESCRIPTION            #</span>
<span class="comment">##                                           #</span>
<span class="comment">## Your faithful employee,                   #</span>
<span class="comment">## monit                                     #</span>
<span class="comment">## --8&lt;--</span>
<span class="comment">##</span>
<span class="comment">## You can override the alert message format or its parts such as subject</span>
<span class="comment">## or sender using the MAIL-FORMAT statement. Macros such as $DATE, etc.</span>
<span class="comment">## are expanded on runtime. For example to override the sender:</span>
<span class="comment">#</span>
<span class="comment"># 简单的，这只改了一下发送人，有需要可以自己修改其它内容。</span>
set mail-format { <span class="attribute">from</span>: webmaster<span class="property">@example</span>.com }

<span class="comment"># 设置邮件通知接收者。建议发到gmail，方便邮件过滤。</span>
set alert userxxx<span class="property">@gmail</span>.com

set httpd port <span class="number">2812</span> <span class="keyword">and</span>            <span class="comment"># 设置http监控页面的端口</span>
     use address www.example.com   <span class="comment"># http监控页面的IP或域名</span>
     allow localhost               <span class="comment"># 允许本地访问</span>
     allow <span class="number">58.68</span><span class="number">.78</span><span class="number">.0</span>/<span class="number">24</span>           <span class="comment"># 允许此IP段访问</span>
     <span class="comment">##allow 0.0.0.0/0.0.0.0       # 允许任何IP段，不建议这样干</span>
     allow <span class="attribute">userxxx</span>:passwordxxx     <span class="comment"># 访问用户名密码</span>

<span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span>
<span class="comment">## Services</span>
<span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">#</span>
<span class="comment">#</span>
<span class="comment"># 系统整体运行状况监控，默认的就可以，可以自己去微调</span>
<span class="comment">#</span>
<span class="comment"># 系统名称，可以是IP或域名</span>
check system www.example.com
    <span class="keyword">if</span> loadavg (<span class="number">1</span>min) &gt; <span class="number">4</span> <span class="keyword">then</span> alert
    <span class="keyword">if</span> loadavg (<span class="number">5</span>min) &gt; <span class="number">2</span> <span class="keyword">then</span> alert
    <span class="keyword">if</span> memory usage &gt; <span class="number">75</span>% <span class="keyword">then</span> alert
    <span class="keyword">if</span> cpu usage (user) &gt; <span class="number">70</span>% <span class="keyword">then</span> alert
    <span class="keyword">if</span> cpu usage (system) &gt; <span class="number">30</span>% <span class="keyword">then</span> alert
    <span class="keyword">if</span> cpu usage (wait) &gt; <span class="number">20</span>% <span class="keyword">then</span> alert

<span class="comment">#</span>
<span class="comment"># 监控nginx</span>
<span class="comment">#</span>
<span class="comment"># 需要提供进程pid文件信息</span>
check process nginx <span class="reserved">with</span> pidfile /<span class="reserved">var</span>/run/nginx.pid
    <span class="comment"># 进程启动命令行，注：必须是命令全路径</span>
    start program = <span class="string">"/etc/init.d/nginx start"</span>
    <span class="comment"># 进程关闭命令行</span>
    stop program  = <span class="string">"/etc/init.d/nginx stop"</span>
    <span class="comment"># nginx进程状态测试，监测到nginx连不上了，则自动重启</span>
    <span class="keyword">if</span> failed host www.example.com port <span class="number">80</span> protocol http <span class="keyword">then</span> restart
    <span class="comment"># 多次重启失败将不再尝试重启，这种就是系统出现严重错误的情况</span>
    <span class="keyword">if</span> <span class="number">3</span> restarts within <span class="number">5</span> cycles <span class="keyword">then</span> timeout
    <span class="comment"># 可选，设置分组信息</span>
    group server

<span class="comment">#   可选的ssl端口的监控，如果有的话</span>
<span class="comment">#    if failed port 443 type tcpssl protocol http</span>
<span class="comment">#       with timeout 15 seconds</span>
<span class="comment">#       then restart</span>

<span class="comment">#</span>
<span class="comment"># 监控apache</span>
<span class="comment">#</span>
check process apache <span class="reserved">with</span> pidfile /<span class="reserved">var</span>/run/apache2.pid
    start program = <span class="string">"/etc/init.d/apache2 start"</span>
    stop program  = <span class="string">"/etc/init.d/apache2 stop"</span>
    <span class="comment"># apache吃cpu和内存比较厉害，额外添加一些关于这方面的监控设置</span>
    <span class="keyword">if</span> cpu &gt; <span class="number">50</span>% <span class="keyword">for</span> <span class="number">2</span> cycles <span class="keyword">then</span> alert
    <span class="keyword">if</span> cpu &gt; <span class="number">70</span>% <span class="keyword">for</span> <span class="number">5</span> cycles <span class="keyword">then</span> restart
    <span class="keyword">if</span> totalmem &gt; <span class="number">1500</span> MB <span class="keyword">for</span> <span class="number">10</span> cycles <span class="keyword">then</span> restart
    <span class="keyword">if</span> children &gt; <span class="number">250</span> <span class="keyword">then</span> restart
    <span class="keyword">if</span> loadavg(<span class="number">5</span>min) greater than <span class="number">10</span> <span class="keyword">for</span> <span class="number">20</span> cycles <span class="keyword">then</span> stop
    <span class="keyword">if</span> failed host www.example.com port <span class="number">8080</span> protocol http <span class="keyword">then</span> restart
    <span class="keyword">if</span> <span class="number">3</span> restarts within <span class="number">5</span> cycles <span class="keyword">then</span> timeout
    group server
    <span class="comment"># 可选，依赖于nginx</span>
    depends <span class="literal">on</span> nginx

<span class="comment">#</span>
<span class="comment"># 监控spawn-fcgi进程(其实就是fast-cgi进程)</span>
<span class="comment">#</span>
check process spawn-fcgi <span class="reserved">with</span> pidfile /<span class="reserved">var</span>/run/spawn-fcgi.pid
    <span class="comment"># spawn-fcgi一定要带-P参数才会生成pid文件，默认是没有的</span>
    start program = <span class="string">"/usr/bin/spawn-fcgi -a 127.0.0.1 -p 8081 -C 10 -u userxxx -g groupxxx -P /var/run/spawn-fcgi.pid -f /usr/bin/php-cgi"</span>
    stop program = <span class="string">"/usr/bin/killall /usr/bin/php-cgi"</span>
    <span class="comment"># fast-cgi走的不是http协议，monit的protocol参数也没有cgi对应的设置，这里去掉protocol http即可。</span>
    <span class="keyword">if</span> failed host <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> port <span class="number">8081</span> <span class="keyword">then</span> restart
    <span class="keyword">if</span> <span class="number">3</span> restarts within <span class="number">5</span> cycles <span class="keyword">then</span> timeout
    group server
    depends <span class="literal">on</span> nginx
</pre></td></tr></table></figure>

<blockquote><ul>
<li><p>start和stop的program参数里的命令必须是全路径，否则monit不能正常启动，比如killall应该是/usr/bin/killall。</p>
</li>
<li><p>对于spawn-fcgi，很多人会用它来管理PHP的fast-cgi进程，但spawn-fcgi本身也是有可能挂掉的，所以还是需要用monit来监控spawn-fcgi。spawn-fcgi必须带-P参数才会有pid文件，而且fast-cgi走的不是http协议，monit的protocol参数也没有cgi对应的设置，一定要去掉protocol http这项设置才管用。</p>
</li>
<li><p>进程多次重启失败monit将不再尝试重启，收到这样的通知邮件表明系统出现了严重的问题，要引起足够的重视，需要赶紧人工处理。</p>
</li>
</ul>
</blockquote>


<hr>
<h1 id="-chrome">安装Chrome</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>
download: google<span class="attribute">-chrome</span><span class="attribute">-stable_current_i386</span><span class="built_in">.</span>deb
sudo dpkg <span class="attribute">-i</span> google<span class="attribute">-chrome</span><span class="attribute">-stable_current_i386</span><span class="built_in">.</span>deb
sudo apt<span class="attribute">-get</span> install <span class="attribute">-f</span>
</pre></td></tr></table></figure>

<hr>
<h1 id="-jdk">安装JDK</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
</pre></td><td class="code"><pre>$ getconf LONG_BIT	<span class="comment">//操作系统位数</span>
<span class="number">32</span>

$ lsb_release <span class="attribute">-a</span>	<span class="comment">//操作系统信息</span>
No LSB modules are available<span class="built_in">.</span>
Distributor ID: Ubuntu
Description:    Ubuntu <span class="number">12.04</span><span class="number">.3</span> LTS
Release:        <span class="number">12.04</span>
Codename:       precise

<span class="number">1</span> sudo apt<span class="attribute">-get</span> purge openjdk<span class="subst">*</span>
<span class="number">2</span> Download ： jdk<span class="subst">-</span><span class="number">7</span>u51<span class="attribute">-linux</span><span class="attribute">-i586</span><span class="built_in">.</span>tar<span class="built_in">.</span>gz
<span class="number">3</span> sudo su
<span class="number">4</span> mkdir /usr/lib/java
<span class="number">5</span> cd /usr/lib/java
<span class="number">6</span> mv ~/Downloads/jdk<span class="subst">-</span><span class="number">7</span>u51<span class="attribute">-linux</span><span class="attribute">-i586</span><span class="built_in">.</span>tar<span class="built_in">.</span>gz <span class="built_in">.</span>
<span class="number">7</span> tar xvf jdk<span class="subst">-</span><span class="number">7</span>u51<span class="attribute">-linux</span><span class="attribute">-i586</span><span class="built_in">.</span>tar<span class="built_in">.</span>gz
<span class="number">8</span> mv jdk1<span class="number">.7</span><span class="number">.0</span>_51<span class="subst">/</span> java<span class="subst">-</span><span class="number">7</span><span class="attribute">-sun</span>
<span class="number">9</span> vi /etc/environment
<span class="number">10</span> PATH<span class="subst">=</span><span class="string">"/usr/lib/java/java-7-sun/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games"</span>
   JAVA_HOME<span class="subst">=</span><span class="string">"/usr/lib/java/java-7-sun"</span>
   CLASSPATH<span class="subst">=</span><span class="string">"/usr/lib/java/java-7-sun/lib"</span>
<span class="number">11</span> source /etc/environment
<span class="number">12</span> java <span class="attribute">-version</span>
<span class="number">13</span> Done
</pre></td></tr></table></figure>

<hr>
<h1 id="-tomcat">安装Tomcat</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>
<span class="number">1</span> Download Tomcat
<span class="number">2</span> vi ~/.bashrc
<span class="number">3</span> <span class="keyword">export</span> CATALINA_HOME=&lt;apache-tomcat path&gt;
  <span class="keyword">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$CATALINA_HOME</span>/bin
<span class="number">4</span> Done
</pre></td></tr></table></figure>

<hr>
<h1 id="-tomcat-">添加Tomcat启动脚本</h1>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
</pre></td><td class="code"><pre><span class="comment"># !/bin/bash</span>
<span class="comment"># Usage:        tomcat [start|stop|reload|restart]</span>
<span class="comment">#</span>

<span class="keyword">export</span> JAVA_HOME= 
<span class="keyword">export</span> CATALINA_HOME= 
<span class="keyword">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$CATALINA_HOME</span>/bin

<span class="keyword">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/bin
<span class="keyword">export</span> BASH_ENV=<span class="variable">$HOME</span>/.bashrc
<span class="keyword">export</span> USERNAME=<span class="string">"root"</span>


<span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span>
	start)
	   	<span class="built_in">echo</span> -n <span class="string">"tomcat start: "</span>
	 	<span class="built_in">cd</span> <span class="variable">$CATALINA_HOME</span>/bin/
	 	sh startup.sh
	   	<span class="built_in">echo</span> <span class="string">"Done"</span>
		;;
	stop)
   		<span class="built_in">echo</span> -n <span class="string">"tomcat stop:"</span>
   		<span class="built_in">cd</span> <span class="variable">$CATALINA_HOME</span>/bin/
   		sh shutdown.sh
   		<span class="built_in">echo</span> <span class="string">"Done"</span>
		;;
	restart)
	    <span class="variable">$0</span> stop
	    <span class="variable">$0</span> start
		;;
	*)
	   <span class="built_in">echo</span> <span class="string">"Usage: tomcat [start|stop|reload|restart]"</span>
	   <span class="keyword">exit</span> <span class="number">1</span>

<span class="keyword">esac</span>
<span class="keyword">exit</span> <span class="number">0</span>
</pre></td></tr></table></figure>

<hr>
<h1 id="monit-tomcat-">monit添加tomcat监听</h1>
<p><a href="http://blog.chinaunix.net/uid-21516619-id-1825022.html" target="_blank">参考</a> </br>
<a href="http://portable.easylife.tw/2407?category=4" target="_blank">参考</a></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>
check <span class="built_in">process</span> tomcat <span class="operator">with</span> pidfile /var/run/catalina.pid
    start program = <span class="string">"/etc/init.d/tomcat start"</span>
    stop program  = <span class="string">"/etc/init.d/tomcat stop"</span>
        <span class="keyword">if</span> <span class="number">9</span> restarts <span class="operator">within</span> <span class="number">10</span> cycles <span class="keyword">then</span> timeout
    <span class="keyword">if</span> failed url <span class="keyword">http</span>://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8080</span>/ timeout <span class="number">120</span> <span class="built_in">seconds</span> <span class="keyword">for</span> <span class="number">5</span> cycles <span class="keyword">then</span> restart
</pre></td></tr></table></figure>

<p><strong>catalina.pid</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>vi $CATALINA_HOME/bin/catalina<span class="preprocessor">.sh</span>

<span class="keyword">Add</span> Line: CATALINA_PID=/var/run/catalina<span class="preprocessor">.pid</span>
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre>monit -h
monit -d 30
monit <span class="operator"><span class="keyword">start</span> tomcat || monit <span class="keyword">start</span> <span class="keyword">all</span>
monit status

<span class="keyword">CHECK</span>: http://localhost:<span class="number">2812</span>

monit stop tomcat</span>
</pre></td></tr></table></figure>

]]></content>
    <summary type="html"><![CDATA[<p>安装了下虚拟机，并在上面搭了下环境</p>
]]></summary>
    
      <category term="比较杂乱" scheme="http://youfei.github.io/tags/%E6%AF%94%E8%BE%83%E6%9D%82%E4%B9%B1/"/>
    
      <category term="比较杂乱" scheme="http://youfei.github.io/categories/%E6%AF%94%E8%BE%83%E6%9D%82%E4%B9%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Golang语法初读-4]]></title>
    <link href="http://youfei.github.io/2014/02/25/go-g-5/"/>
    <id>http://youfei.github.io/2014/02/25/go-g-5/</id>
    <published>2014-02-25T02:50:29.000Z</published>
    <updated>2014-02-25T05:46:29.000Z</updated>
    <content type="html"><![CDATA[<p>继续看书哈</p>
<a id="more"></a>

<hr>
<h1 id="md5-sha">Md5 &amp; Sha</h1>
<p><strong>Code解释大法</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
</pre></td><td class="code"><pre>package main

import (
	<span class="string">"fmt"</span>
	<span class="string">"crypto/sha1"</span>
	<span class="string">"crypto/md5"</span>
)

func main () {
	
	var TestString string = string(<span class="string">"admin"</span>)
	
	Md5Inst := md5.New()
	Md5Inst.Write([]byte (TestString))
	Result := Md5Inst.Sum([]byte(<span class="string">""</span>))
	
	fmt.Printf(<span class="string">"%x\n"</span>,Result)
	
	Sha1Inst := sha1.New()
	Sha1Inst.Write([]byte (TestString))
	Result = Sha1Inst.Sum([]byte(<span class="string">""</span>))
	
	fmt.Printf(<span class="string">"%x\n"</span>,Result)
}
</pre></td></tr></table></figure>

<hr>
<h1 id="-">单元测试</h1>
<p>和JUnit差不多</p>
<hr>
<h1 id="-">发布</h1>
<p>太差了！！！</p>
<blockquote><p>打包源代码进行分发，使用者自行编译！！！</p>
<p>现在严重鄙视各种自行编译！！！（突然想起了python，嘿嘿）</p>
</blockquote>


<hr>
<h1 id="-">反射</h1>
<p>反射是高配置，灵活性的体现，但确实是把双刃剑。
高配置，灵活性 === 繁琐，可读性，可维护性 差</p>
<p>Go 中的反射，主要是两个概念Type和Value</p>
<p>用书中的例子，记录下</p>
<p><strong>//传值</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>var <span class="built_in">x</span> float64 = <span class="number">3.4</span>
v := reflect<span class="preprocessor">.ValueOf</span>(<span class="built_in">x</span>) 
v<span class="preprocessor">.Set</span>(<span class="number">4.1</span>)
</pre></td></tr></table></figure>

<p><strong>//传址</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre>var <span class="built_in">x</span> float64 = <span class="number">3.4</span>
p := reflect<span class="preprocessor">.ValueOf</span>(&<span class="built_in">x</span>)
fmt<span class="preprocessor">.Println</span>(<span class="string">"Type of P : "</span>, p<span class="preprocessor">.Type</span>())
fmt<span class="preprocessor">.Println</span>(<span class="string">"settability of p : "</span>, p<span class="preprocessor">.CanSet</span>())

<span class="label">v:</span>= p<span class="preprocessor">.Elem</span>()
fmt<span class="preprocessor">.Println</span>(<span class="string">"settability of v : "</span>, v<span class="preprocessor">.CanSet</span>())


v<span class="preprocessor">.SetFloat</span>(<span class="number">7.1</span>)
fmt<span class="preprocessor">.Println</span>(<span class="string">"v : "</span>, v<span class="preprocessor">.Interface</span>())
fmt<span class="preprocessor">.Println</span>(<span class="string">"x : "</span>, <span class="built_in">x</span>)
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="keyword">Type</span> <span class="keyword">of</span> P :  *float64
settability <span class="keyword">of</span> p :  <span class="keyword">false</span>
settability <span class="keyword">of</span> v :  <span class="keyword">true</span>
v :  <span class="number">7.1</span>
x :  <span class="number">7.1</span>
</pre></td></tr></table></figure>

<hr>
<h1 id="-">语言交互性</h1>
<p>Cgo 没啥兴趣</p>
<hr>
<h1 id="go-">Go标准库</h1>
<ul>
<li>输入输出
  <strong>bufio, fmt, io, log, flag(处理命令行参数)</strong></li>
<li>文本处理
  <strong>encoding, bytes, strings, strconv, text, mime, unicode, regexp, index, path(处理路径字符串)</strong></li>
<li>网络
  <strong>net, http, expvar</strong></li>
<li>系统
  <strong>os, syscall, sync, time, unsafe</strong></li>
<li>数据结构和算法
  <strong>math, sort, container, crypto, hash, archive, compress, image(图像编码算法)</strong></li>
<li>RunTime
  <strong>runtime, reflect, go</strong></li>
</ul>
<hr>
<h1 id="-">初读感受</h1>
<p>没啥东东，interface{}? goroutine? defer糖？</p>
<p>还需要多发展发展，不知道以后在Android 上怎么样，给条活路哈</p>
<p>打包，发布啥的，这都什么年代啦... MakeFile?</p>
<p>现在就觉得做个MessageQueue 啥的还行，和Erlang拼杀?</p>
<p>Done</p>
]]></content>
    <summary type="html"><![CDATA[<p>继续看书哈</p>
]]></summary>
    
      <category term="golang" scheme="http://youfei.github.io/tags/golang/"/>
    
      <category term="Golang" scheme="http://youfei.github.io/categories/Golang/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[逃离帝都]]></title>
    <link href="http://youfei.github.io/2014/02/25/life-1/"/>
    <id>http://youfei.github.io/2014/02/25/life-1/</id>
    <published>2014-02-25T01:08:05.000Z</published>
    <updated>2014-02-25T05:36:50.000Z</updated>
    <content type="html"><![CDATA[<p>连续爆表，把俺家的净化器都快搞炸了！</br>
静电的咋样？咋的滤网的总感到效果寥寥了都-_-!</p>
<p>额滴<strong>肺</strong>啊</p>
<a id="more"></a>

<blockquote><p><strong>现在满脑子都是：如何快速赚钱，提前退休， 逃离帝都啊！！！</strong></p>
<p><strong>哎 是时候去研究下 中彩票大法了</strong></p>
<p><strong>                                        --帝都苦逼青年一枚</strong></p>
<footer><strong>帝都苦逼青年</strong></footer></blockquote>



<p><strong>刚看到了快递小哥，想到：真是用生命来送快递啊</strong></p>
]]></content>
    <summary type="html"><![CDATA[<p>连续爆表，把俺家的净化器都快搞炸了！</br>
静电的咋样？咋的滤网的总感到效果寥寥了都-_-!</p>
<p>额滴<strong>肺</strong>啊</p>
]]></summary>
    
      <category term="生活杂记" scheme="http://youfei.github.io/tags/%E7%94%9F%E6%B4%BB%E6%9D%82%E8%AE%B0/"/>
    
      <category term="生活杂记" scheme="http://youfei.github.io/categories/%E7%94%9F%E6%B4%BB%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Golang语法初读-3]]></title>
    <link href="http://youfei.github.io/2014/02/24/go-g-4/"/>
    <id>http://youfei.github.io/2014/02/24/go-g-4/</id>
    <published>2014-02-24T07:40:45.000Z</published>
    <updated>2014-02-25T09:02:56.000Z</updated>
    <content type="html"><![CDATA[<p>Go网络编程</p>
<a id="more"></a>

<h1 id="socket-">Socket编程</h1>
<h2 id="client-side">Client Side</h2>
<p><code>func Dial (net, addr string) (Conn, error)</code></br></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="comment">//TCP</span>
conn, err := net.Dial (<span class="string">"tcp"</span>, <span class="string">"192.168.0.1:9000"</span>)

<span class="comment">//UDP</span>
conn, err := net.Dial (<span class="string">"udp"</span>, <span class="string">"192.168.0.1:9000"</span>)

<span class="comment">//ICMP</span>
conn, err := net.Dial (<span class="string">"ip4.icmp"</span>, <span class="string">"192.168.0.1:9000"</span>)
</pre></td></tr></table></figure>

<h2 id="server-side">Server Side</h2>
<p><code>func Listen(net, laddr string) (l Listener, err os.Error)</code></br></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre>service := <span class="string">":1200"</span>
<span class="comment">//TCP</span>
conn, err := net.Listen(<span class="string">"tcp"</span>, service)

<span class="comment">//UDP</span>
conn, err := net.Listen (<span class="string">"udp"</span>, service)
</pre></td></tr></table></figure>

<blockquote><p>I THINK: It is cool !</p>
</blockquote>


<hr>
<h1 id="http-">Http编程</h1>
<h2 id="client-side">Client Side</h2>
<p><code>func (c *Client) Get (url string) (r *Response, err error)</code></br>
<code>func (c *Client) Post (url string, bodyType string, body io.Reader) (r *Response, err error)</code></br>
<code>func (c *Client) PostForm (url string, data url.Values) (r *Respone, err error)</code></br>
<code>func (c *Client) Head (url, string) (r *Response, err error)</code></br>
<code>func (c *Client) Do (request *Requset) (resp *Response, err error)</code></br></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="code"><pre>//从网上贴的，偷懒啦~
package main
 
import (
    <span class="string">"net/http"</span>
    <span class="string">"io/ioutil"</span>
    <span class="string">"fmt"</span>
)
 
func main() {
    client := &http<span class="preprocessor">.Client</span>{}
    reqest, _ := http<span class="preprocessor">.NewRequest</span>(<span class="string">"GET"</span>, <span class="string">"http://www.baidu.com"</span>, nil)
     
    reqest<span class="preprocessor">.Header</span><span class="preprocessor">.Set</span>(<span class="string">"Accept"</span>,<span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"</span>)
    reqest<span class="preprocessor">.Header</span><span class="preprocessor">.Set</span>(<span class="string">"Accept-Charset"</span>,<span class="string">"GBK,utf-8;q=0.7,*;q=0.3"</span>)
    reqest<span class="preprocessor">.Header</span><span class="preprocessor">.Set</span>(<span class="string">"Accept-Encoding"</span>,<span class="string">"gzip,deflate,sdch"</span>)
    reqest<span class="preprocessor">.Header</span><span class="preprocessor">.Set</span>(<span class="string">"Accept-Language"</span>,<span class="string">"zh-CN,zh;q=0.8"</span>)
    reqest<span class="preprocessor">.Header</span><span class="preprocessor">.Set</span>(<span class="string">"Cache-Control"</span>,<span class="string">"max-age=0"</span>)
    reqest<span class="preprocessor">.Header</span><span class="preprocessor">.Set</span>(<span class="string">"Connection"</span>,<span class="string">"keep-alive"</span>)
     
    response,_ := client<span class="preprocessor">.Do</span>(reqest)
    if response<span class="preprocessor">.StatusCode</span> == <span class="number">200</span> {
        body, _ := ioutil<span class="preprocessor">.ReadAll</span>(response<span class="preprocessor">.Body</span>)
        bodystr := string(body)<span class="comment">;</span>
        fmt<span class="preprocessor">.Println</span>(bodystr)
    }
}
</pre></td></tr></table></figure>

<p><strong>Client Side</strong>代码来源<a href="http://www.cnblogs.com/yjf512/archive/2012/06/18/2554066.html" target="_blank">网络</a></p>
<h2 id="server-side">Server Side</h2>
<p><code>net.Listen</code></br></p>
<h3 id="http-">http请求</h3>
<p><code>func ListenAndServe(addr string, handler Handler) error</code></br></p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="code"><pre>package main

import (
	<span class="string">"io"</span>
	<span class="string">"log"</span>
	<span class="string">"net/http"</span>
)

func helloWorld (w http.ResponseWriter, r *http.Request) {
	io.WriteString (w, <span class="string">"Hello World"</span>)
}

func main () {
	http.HandleFunc (<span class="string">"/hello"</span>, helloWorld)
	err := http.ListenAndServe(<span class="string">":8099"</span>, nil)
	if err != nil {
		log.Fatal(<span class="string">" ListenAndServe: "</span>, err.Error())
	}	
}
</pre></td></tr></table></figure>

<h3 id="https-">https请求</h3>
<p><code>func ListenAndServeTLS(addr string, handler Handler) error</code></br></p>
<h3 id="-">模板缓存</h3>
<p>这个有必要单独出来，是做逻辑与页面分离的。</br>
<code>templates := make(map[string]*template.Template)</code></br></p>
<h3 id="-">动态请求和静态分离</h3>
<p>需要自己写个Handler函数，好烂</p>
<hr>
<blockquote><p><strong>总结</strong></br>
Socket 喜欢！</br>
Http 对于习惯Java 编程的我，不喜欢！</p>
</blockquote>




<h1 id="-">资料</h1>
<ol>
<li><a href="http://jan.newmarch.name/go/" target="_blank">Network programming with Go</a>, really helpful !!!</li>
<li><a href="https://code.google.com/p/go-wiki/wiki/Projects" target="_blank">Go Project</a></li>
</ol>
]]></content>
    <summary type="html"><![CDATA[<p>Go网络编程</p>
]]></summary>
    
      <category term="golang" scheme="http://youfei.github.io/tags/golang/"/>
    
      <category term="Golang" scheme="http://youfei.github.io/categories/Golang/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Golang语法初读-2]]></title>
    <link href="http://youfei.github.io/2014/02/20/go-g-3/"/>
    <id>http://youfei.github.io/2014/02/20/go-g-3/</id>
    <published>2014-02-20T01:48:42.000Z</published>
    <updated>2014-02-25T05:11:45.000Z</updated>
    <content type="html"><![CDATA[<p><strong>Go</strong> 的 <em>interface{}</em>还是个不错的东东，让人不明觉厉起来。</p>
<a id="more"></a>

<hr>
<h1 id="interface-">interface{}</h1>
<ol>
<li>非侵入式接口</li>
</ol>
<p><code>是否可以理解为实现动作即实现接口...</code></p>
<ol>
<li>接口赋值</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>var rw IReadWriter = <span class="keyword">...</span>
var r IReader = rw
</pre></td></tr></table></figure>

<ol>
<li>接口查询</li>
</ol>
<p>应用场景</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
</pre></td><td class="code"><pre><span class="comment">//拥有IReader接口的开发者，想要知道IReader对应的实例化是否也实现了IReadWriter接口，这样它可以切换到IReadWriterj接口的Writer()方法</span>
<span class="keyword">var</span> reader IReader = NewReader()
<span class="keyword">if</span> writer, ok := reader.(IReadWriter); ok {
	writer.Writer()
}
</pre></td></tr></table></figure>

<ol>
<li>接口组合 <code>个人觉得有点继承的意味</code></li>
</ol>
<p><strong>Go</strong> 的接口定义的很宽泛，有点太宽泛了</br></p>
<hr>
<h1 id="-">并发</h1>
<h3 id="-">并发通信模型</h3>
<ol>
<li>共享数据 <code>以共享为手段的</code></li>
<li>消息传递 <code>订阅/分发，Ajax，Erlang Message Queue</code></li>
</ol>
<blockquote><p><strong>协程(co-rountine)</strong>，在<strong>Go</strong>中叫<strong>go-rountine</strong>，轻量级的线程，由Go运行时管理(Run time)</p>
<p><strong>不要通过共享内存来通信，而应该够过通信来共享内存</strong></p>
</blockquote>


<p><strong>协程</strong>，也有人称之为轻量级线程，特点</p>
<ol>
<li>能够在单一的系统线程中模拟多任务的并发执行</li>
<li>在一个特定的时间内，只有一个任务在执行，即并非真正的并行</li>
<li>被动的任务调度方式，即没有任务主动抢占时间片的说法。</li>
<li>每个协程都有自己的堆栈和局部变量</li>
</ol>
<p><strong>和线程对进程的解释有啥不一样呢？</strong></p>
<h3 id="channel">channel</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="code"><pre><span class="keyword">var</span> channelName <span class="keyword">chan</span> ElementType

ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="typename">int</span>)

<span class="comment">//写入数据</span>
ch &lt;- value
<span class="comment">//读出数据</span>
value := &lt;-ch

<span class="comment">//单向channel</span>
<span class="keyword">var</span> ch1 <span class="keyword">chan</span> <span class="typename">int</span>	<span class="comment">//ch1是一个正常的channel，不是单向的</span>
<span class="keyword">var</span> ch2 <span class="keyword">chan</span>&lt;- <span class="typename">float64</span>	<span class="comment">//ch2单向的，只用于写入float64数据</span>
<span class="keyword">var</span> ch3 &lt;-<span class="keyword">chan</span> <span class="typename">int</span>	<span class="comment">//ch3单向的，只用于读取int数据</span>

<span class="comment">//关闭channel</span>
<span class="built_in">close</span>(ch)

<span class="comment">//测试是否关闭成功</span>
x, ok:= &lt;-ch
<span class="keyword">if</span> ok == <span class="constant">false</span> 则表明ch已经被关闭
</pre></td></tr></table></figure>

<h3 id="-">同步</h3>
<ul>
<li><p>同步锁</p>
<ul>
<li>sync.Mutex     强制锁</li>
<li>sync.RWMutex     读写锁</li>
</ul>
</li>
<li><p>全局唯一性操作</p>
<ul>
<li>sync.Once     有点单列模式的意味，用来做init比较好</li>
</ul>
</li>
</ul>
<hr>
<p>敲了书中的代码，越来越觉得<strong>Go</strong>很像<strong>C</strong>语言，普遍的指针使用，channel 还要继续深入看看。</p>
<p><em>struct</em> 结构体代替<em>class</em>到是没什么，就是觉得比起<strong>Java</strong>来说，代码的组织和条理还是有点乱，看来还得适应适应。</p>
<p><strong>Go</strong> 的调试需要<em>gdb.exe</em>,cywin 和 mingw 的都一样，装一个配在<strong>DEBUG</strong>里面就好了。
不过最好是保持32位/64位一致，要不有可能会凌乱掉。</p>
<p><strong>Go Project</strong>中的<strong>Build Path</strong>最好不要动，这个更容易凌乱。</p>
]]></content>
    <summary type="html"><![CDATA[<p><strong>Go</strong> 的 <em>interface{}</em>还是个不错的东东，让人不明觉厉起来。</p>
]]></summary>
    
      <category term="golang" scheme="http://youfei.github.io/tags/golang/"/>
    
      <category term="Golang" scheme="http://youfei.github.io/categories/Golang/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Java多版本清理]]></title>
    <link href="http://youfei.github.io/2014/02/19/java-multi-1/"/>
    <id>http://youfei.github.io/2014/02/19/java-multi-1/</id>
    <published>2014-02-19T08:56:56.000Z</published>
    <updated>2014-02-19T09:11:19.000Z</updated>
    <content type="html"><![CDATA[<p>近期需要对<strong>Java Web Start</strong>的各种版本进行测试，安装到<strong>SDK1.7</strong>以后就会出现各种问题，什么安装不上，什么清理不了等等。
</br>
要恢复原来的开发系统相当苦难。
<a id="more"></a></p>
<p></br>
经过一天的苦苦奋斗，总结下经验：</p>
<ul>
<li>1.用360软件管家卸载各种JDK, JRE <strong>两遍</strong>， 一遍不干净两遍还有点残余</li>
<li>2.在regedit中以<strong>JavaSoft</strong>为关键字搜索，然后进行各种删除</li>
<li>3.整个世界清静了...</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<p>近期需要对<strong>Java Web Start</strong>的各种版本进行测试，安装到<strong>SDK1.7</strong>以后就会出现各种问题，什么安装不上，什么清理不了等等。
</br>
要恢复原来的开发系统相当苦难。
]]></summary>
    
      <category term="Java" scheme="http://youfei.github.io/tags/Java/"/>
    
      <category term="Java" scheme="http://youfei.github.io/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Golang语法初读-1]]></title>
    <link href="http://youfei.github.io/2014/02/18/go-g-2/"/>
    <id>http://youfei.github.io/2014/02/18/go-g-2/</id>
    <published>2014-02-18T02:24:15.000Z</published>
    <updated>2014-02-20T01:50:03.000Z</updated>
    <content type="html"><![CDATA[<p>搭好环境，看看<strong>Go</strong>的语法吧，参考书：<code>GO语言编程</code></p>
<a id="more"></a>

<p>第一天，个人感觉</p>
<ul>
<li><strong>Golang</strong> 应该属于结构化编程</li>
<li>看到作者写到<strong>Golang是更好的C语言</strong> 这个观点到是相当赞同</li>
<li>说实话吸引人的地方有限，defer？ Multiple return values？</li>
</ul>
<hr>
<h1 id="-">变量</h1>
<p>变量描述：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
</pre></td><td class="code"><pre><span class="comment">//int</span>
<span class="keyword">var</span> a <span class="typename">int</span>
a =<span class="number"> 1</span>

b :=<span class="number"> 1</span>

<span class="comment">// string</span>
c, str :=<span class="number"> 1</span>, <span class="string">"string"</span>

<span class="comment">// Array</span>
<span class="keyword">var</span> is <span class="number">[2</span>]<span class="typename">int</span>
is<span class="number">[0</span>] =<span class="number"> 1</span>
is<span class="number">[1</span>] =<span class="number"> 2</span>

a := <span class="number">[2</span>]<span class="number">[2</span>]<span class="typename">int</span>{ <span class="number">{1</span><span class="number">,2</span>}, <span class="number">{3</span><span class="number">,4</span>} }

<span class="keyword">var</span> myArray <span class="number">[10</span>]<span class="typename">int</span> = <span class="number">[10</span>]<span class="typename">int</span><span class="number">{1</span>,<span class="number"> 2</span>,<span class="number"> 3</span>,<span class="number"> 4</span>,<span class="number"> 5</span>,<span class="number"> 6</span>,<span class="number"> 7</span>,<span class="number"> 8</span>,<span class="number"> 9</span>,<span class="number"> 10</span>}

<span class="comment">// 切片</span>
<span class="keyword">var</span> mySlice []<span class="typename">int</span> = myArray[<span class="number">:5</span>]

<span class="keyword">var</span> slice1 = []<span class="typename">int</span><span class="number">{1</span>,<span class="number"> 2</span>,<span class="number"> 3</span>,<span class="number"> 4</span>,<span class="number"> 5</span>}

<span class="comment">// 结构体</span>
<span class="keyword">type</span> PersonInfo <span class="keyword">struct</span> {
	ID <span class="typename">string</span>
	Name <span class="typename">string</span>
	Address <span class="typename">string</span>
}

<span class="comment">// map</span>
<span class="keyword">var</span> personDB <span class="keyword">map</span>[<span class="typename">string</span>] PersonInfo
personDB = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="typename">string</span>] PersonInfo)

personDB[<span class="string">"12345"</span>] = PersonInfo{<span class="string">"12345"</span>, <span class="string">"Tom"</span>, <span class="string">"Room 203"</span>}
personDB[<span class="string">"1"</span>] = PersonInfo{<span class="string">"1"</span>, <span class="string">"Jack"</span>, <span class="string">"Room 103"</span>}

person, ok := personDB[<span class="string">"1234"</span>]
<span class="keyword">if</span> ok {
	fmt.Println(<span class="string">"Found Person "</span>, person.Name, <span class="string">"with ID 1234 ."</span>)
} <span class="keyword">else</span> {
	fmt.Println(<span class="string">"Do not found Person with ID 1234 ."</span>)
}

monthdays := <span class="keyword">map</span>[<span class="typename">string</span>]<span class="typename">int</span>{
	<span class="string">"Jan"</span><span class="number">:31</span>,<span class="string">"Feb"</span><span class="number">:28</span>,
}<span class="comment">// 最后一个逗号是必须的。</span>
fmt.Println(<span class="string">"---- "</span>, monthdays)
<span class="comment">// ----  map[Jan:31 Feb:28]</span>
</pre></td></tr></table></figure>

<hr>
<h1 id="-">函数</h1>
<p><strong>Golang</strong>中函数的基本组成为：<strong>关键字func，函数名，参数列表，返回值，函数体和返回语句</strong></p>
<p>个人觉得这里得package name就是调用名，即:<strong><package name>.method</strong></p>
<p><strong>Golang</strong>中的泛型 <strong>interface{}</strong>, 先这么理解吧</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="keyword">func</span> MyPrintf(args ...<span class="keyword">interface</span>{}){
	<span class="keyword">for</span> _, arg := <span class="keyword">range</span> args {
		<span class="keyword">switch</span> arg.(<span class="keyword">type</span>) {
			<span class="keyword">case</span> <span class="typename">int</span>:
				fmt.Println(<span class="string">"int value"</span>)
			<span class="keyword">case</span> <span class="typename">string</span>:
				fmt.Println(<span class="string">"string value"</span>)
			<span class="keyword">case</span> <span class="typename">int64</span>:
				fmt.Println(<span class="string">"int64 value"</span>)	
			<span class="keyword">default</span>:
				fmt.Println(<span class="string">"noknown value"</span>)
		}
	}
}
</pre></td></tr></table></figure>


<hr>
<h1 id="-">错误处理</h1>
<ul>
<li><strong>error接口</strong> 还不是太懂</li>
<li><strong>defer</strong> 这个还是比较NB的，省下了好多close</li>
<li><strong>panic &amp; recover</strong> 讲的太少，下来在看吧</li>
</ul>
<hr>
<h1 id="-">小计</h1>
<ul>
<li>在有返回值的函数中，不能在有判断的地方直接<strong>renturn value</strong></li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre><span class="keyword">func</span> example (x <span class="typename">int</span>) <span class="typename">int</span> {
	<span class="keyword">if</span> x=<span class="number">=0</span> {
		<span class="keyword">return</span><span class="number"> 5</span>
	} <span class="keyword">else</span> {
		<span class="keyword">return</span> x
	}
}
</pre></td></tr></table></figure>

<blockquote><p>书上写<em>Will throw: function ends without a return statement</em></p>
<p><strong>但是我运行了下没出错啊... 是否是在说尽信书不如无书，哈哈</strong> </p>
</blockquote>


<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="code"><pre><span class="keyword">package</span> main
<span class="keyword">import</span> <span class="string">"fmt"</span>

<span class="keyword">func</span> example (x <span class="typename">int</span>) <span class="typename">int</span> {
	<span class="keyword">if</span> x=<span class="number">=0</span> {
		<span class="keyword">return</span><span class="number"> 5</span>
	} <span class="keyword">else</span> {
		<span class="keyword">return</span> x
	}
}
<span class="keyword">func</span> main() {
	fmt.Println(<span class="string">"Hello, 世界"</span>, example<span class="number">(4</span>))
	fmt.Println(<span class="string">"Hello, 世界"</span>, example<span class="number">(5</span>))
}
</pre></td></tr></table></figure>

<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>Hello, 世界 4
Hello, 世界 5
</pre></td></tr></table></figure>

<ul>
<li>这样的命名规则
<em>小写字母开头的函数只在本包可见，大写字母开头的函数才可以被其他包可见，该规则同样适用于类型和变量</em><blockquote><p>这个规则让人只想说<strong>shit</strong></p>
</blockquote>

</li>
</ul>
]]></content>
    <summary type="html"><![CDATA[<p>搭好环境，看看<strong>Go</strong>的语法吧，参考书：<code>GO语言编程</code></p>
]]></summary>
    
      <category term="golang" scheme="http://youfei.github.io/tags/golang/"/>
    
      <category term="Golang" scheme="http://youfei.github.io/categories/Golang/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Golang安装与IDE]]></title>
    <link href="http://youfei.github.io/2014/02/17/go-g-1/"/>
    <id>http://youfei.github.io/2014/02/17/go-g-1/</id>
    <published>2014-02-17T07:01:31.000Z</published>
    <updated>2014-02-17T08:33:16.000Z</updated>
    <content type="html"><![CDATA[<h1 id="go-programming-language">Go Programming Language</h1>
<p><a href="http://docs.studygolang.com/" target="_blank">Go</a> is an open source programming language that makes it easy to build simple, reliable, and efficient software.</p>
<a id="more"></a>

<p>个人而言：Google出品的，应该很NB吧...</p>
<hr>
<h1 id="go-windows-">Go Windows安装</h1>
<p>在<a href="http://docs.studygolang.com/" target="_blank">Go</a> 主页上<strong>Download Go</strong>， 我选择的<em>msi</em>版本，双击安装。</p>
<p>安装完成后，启动<code>cmd</code>,运行<code>go</code>查看安装成果</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre>go
<span class="keyword">echo</span> <span class="envvar">%GOROOT%</span>		# C:\go
<span class="keyword">echo</span> <span class="envvar">%PATH%</span>		# <span class="envvar">%GOROOT%</span>\bin;<span class="envvar">%PATH%</span>
</pre></td></tr></table></figure>

<hr>
<h1 id="go-eclipse">Go eclipse</h1>
<p><strong>Eclipse</strong>是个好同志，啥都有插件</br>
<strong>Go</strong>的Eclipse插件<a href="https://code.google.com/p/goclipse/" target="_blank">goclipse</a>，如何安装eclipse的插件俺就不废话了</p>
<h3 id="goclipse-">goclipse配置</h3>
<p>配置如图：
<img src="/img/go-config.PNG" alt="go-config"></p>
<h3 id="go-helloworld">Go Helloworld</h3>
<p>在<strong>Eclipse</strong>创建<code>Go Project</code></br>
在<strong>Go Project</strong>创建<code>Go File</code> 键入</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
</pre></td><td class="code"><pre>package main
<span class="function"><span class="title">import</span> <span class="params">(
	<span class="string">"fmt"</span>
)</span>
<span class="title">func</span> <span class="title">main</span><span class="params">()</span> {
	<span class="title">fmt</span>.P<span class="title">rintln</span><span class="params">(<span class="string">"hello world"</span>)</span>
}</span>
</pre></td></tr></table></figure>

<p>右键运行<code>Run Go Application</code></p>
<h3 id="goclipse-">goclipse输入提示</h3>
<ul>
<li>在<strong>Git Hub</strong>上，找到<a href="https://github.com/nsf/gocode" target="_blank">Gocode</a>,下载并放置在<code>$GOHOME</code>目录下并解压，得到<strong>Gocode</strong>路径<code>C:\Go\gocode\gocode-master</code> </br>
在<strong>Gocode</strong>文件夹下，起<code>cmd</code>，键入<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre>set GOPATH="C:<span class="command">\Go</span><span class="command">\gocode</span><span class="command">\gocode</span>-master"
go build
</pre></td></tr></table></figure>

</li>
</ul>
<p>在<strong>Gocode</strong>下，会生成<code>gocode-master.exe</code></p>
<ul>
<li><p>配置Gocode到Eclipse
如图：
<img src="/img/gocode-config.PNG" alt="gocode-config"></p>
</li>
<li><p>效果展示
<img src="/img/go-suggest.png" alt="go-suggest"></p>
</li>
</ul>
<hr>
<h1 id="-">其他信息</h1>
<ol>
<li>国人<a href="https://code.google.com/p/golangide/" target="_blank">GolangIDE</a></li>
<li><a href="http://www.360doc.com/content/13/0926/16/8504707_317256198.shtml" target="_blank">GOPATH</a>详解</li>
<li><a href="http://blog.csdn.net/hengyunabc/article/details/7371446" target="_blank">参考文章</a></li>
<li><a href="http://blog.hsatac.net/2012/09/golang-ides/" target="_blank">各种IDE介绍</a></li>
</ol>
]]></content>
    <summary type="html"><![CDATA[<h1 id="go-programming-language">Go Programming Language</h1>
<p><a href="http://docs.studygolang.com/" target="_blank">Go</a> is an open source programming language that makes it easy to build simple, reliable, and efficient software.</p>
]]></summary>
    
      <category term="golang" scheme="http://youfei.github.io/tags/golang/"/>
    
      <category term="Golang" scheme="http://youfei.github.io/categories/Golang/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo配置]]></title>
    <link href="http://youfei.github.io/2014/02/14/hexo-g-2/"/>
    <id>http://youfei.github.io/2014/02/14/hexo-g-2/</id>
    <published>2014-02-14T14:05:42.000Z</published>
    <updated>2014-02-17T08:27:39.000Z</updated>
    <content type="html"><![CDATA[<p>有兴趣时候再写吧。。。</p>
]]></content>
    
    
      <category term="hexo" scheme="http://youfei.github.io/tags/hexo/"/>
    
      <category term="Github Blog" scheme="http://youfei.github.io/categories/Github%20Blog/"/>
    
  </entry>
  
</feed>
